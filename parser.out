Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ALIAS
    AND_BLOCK
    BEGIN_BLOCK
    BREAK
    CASE
    CLASS
    DEFINED
    DOSPUNTOS
    DOSPUNTOS_IGUAL
    END
    ENSURE
    IN
    INTERROGACION
    LENGTH
    MODULE
    NEXT
    PUNTO
    REDO
    RESERVADA
    RETRY
    RETURN
    SELF
    SUPER
    UNLESS
    WHEN
    WHILE

Grammar

Rule 0     S' -> programa
Rule 1     programa -> sentencia
Rule 2     programa -> sentencia programa
Rule 3     sentencia -> asignacion
Rule 4     sentencia -> impresion
Rule 5     sentencia -> array
Rule 6     sentencia -> condicion
Rule 7     sentencia -> funcion
Rule 8     sentencia -> comentario
Rule 9     asignacion -> variable ASIGNACION valores
Rule 10    solicitud_datos -> VARIABLE_LOCAL ASIGNACION GETS PARENTESIS_IZQ PARENTESIS_DER
Rule 11    impresion -> PUTS PARENTESIS_IZQ argumentos PARENTESIS_DER
Rule 12    impresion -> PUTS
Rule 13    comentario -> COMENTARIO argumento
Rule 14    array -> CORCHETE_IZQ argumentos CORCHETE_DER
Rule 15    condicion -> if
Rule 16    condicion -> if_else
Rule 17    condicion -> if_elsif_else
Rule 18    if -> IF expresion instrucciones END_BLOCK
Rule 19    if -> IF expresion THEN instrucciones END_BLOCK
Rule 20    if_else -> IF expresion instrucciones ELSE instrucciones END_BLOCK
Rule 21    if_else -> IF expresion THEN instrucciones ELSE instrucciones END_BLOCK
Rule 22    if_elsif_else -> IF expresion instrucciones elsif_clauses END_BLOCK
Rule 23    if_elsif_else -> IF expresion THEN instrucciones elsif_clauses END_BLOCK
Rule 24    if_elsif_else -> IF expresion instrucciones elsif_clauses ELSE instrucciones END_BLOCK
Rule 25    if_elsif_else -> IF expresion THEN instrucciones elsif_clauses ELSE instrucciones END_BLOCK
Rule 26    elsif_clauses -> ELSIF expresion instrucciones
Rule 27    elsif_clauses -> ELSIF expresion THEN instrucciones
Rule 28    elsif_clauses -> ELSIF expresion instrucciones elsif_clauses
Rule 29    elsif_clauses -> ELSIF expresion THEN instrucciones elsif_clauses
Rule 30    funcion -> DEF VARIABLE_LOCAL PARENTESIS_IZQ parametros PARENTESIS_DER instrucciones END_BLOCK
Rule 31    parametros -> parametro
Rule 32    parametros -> parametro COMA parametros
Rule 33    parametro -> VARIABLE_LOCAL
Rule 34    parametro -> empty
Rule 35    expresion -> var_expresion
Rule 36    expresion -> var_expresion comparadores var_expresion
Rule 37    expresion -> expresion comparadores expresion
Rule 38    expresion -> PARENTESIS_IZQ expresion PARENTESIS_DER
Rule 39    expresion -> NOT_BLOCK expresion
Rule 40    expresion -> expresion operador_logico expresion
Rule 41    comparadores -> MAYOR_QUE
Rule 42    comparadores -> MENOR_QUE
Rule 43    comparadores -> IGUAL_IGUAL
Rule 44    comparadores -> DIFERENTE
Rule 45    comparadores -> MAYOR_IGUAL
Rule 46    comparadores -> MENOR_IGUAL
Rule 47    operador_logico -> AND
Rule 48    operador_logico -> OR
Rule 49    operador_logico -> NOT
Rule 50    var_expresion -> valor
Rule 51    var_expresion -> booleano
Rule 52    instrucciones -> instruccion
Rule 53    instrucciones -> instruccion instrucciones
Rule 54    instrucciones -> instruccion PUNTO_Y_COMA instrucciones
Rule 55    instruccion -> asignacion
Rule 56    instruccion -> impresion
Rule 57    instruccion -> condicion
Rule 58    instruccion -> llamada_funcion
Rule 59    instruccion -> funcion
Rule 60    llamada_funcion -> VARIABLE_LOCAL PARENTESIS_IZQ argumentos PARENTESIS_DER
Rule 61    llamada_funcion -> VARIABLE_LOCAL PARENTESIS_IZQ PARENTESIS_DER
Rule 62    variable -> VARIABLE_LOCAL
Rule 63    variable -> VARIABLE_GLOBAL
Rule 64    variable -> VARIABLE_INSTANCIA
Rule 65    variable -> VARIABLE_CLASE
Rule 66    booleano -> FALSE
Rule 67    booleano -> TRUE
Rule 68    argumentos -> argumento
Rule 69    argumentos -> argumento COMA argumentos
Rule 70    argumento -> booleano
Rule 71    argumento -> operacionAritmetica
Rule 72    argumento -> array
Rule 73    argumento -> empty
Rule 74    empty -> <empty>
Rule 75    valores -> operacionAritmetica
Rule 76    valores -> SIMBOLO
Rule 77    valores -> booleano
Rule 78    valores -> array
Rule 79    valor -> NUMERO
Rule 80    valor -> FLOTANTE
Rule 81    valor -> CADENA
Rule 82    valor -> variable
Rule 83    operacionAritmetica -> valor
Rule 84    operacionAritmetica -> valor operador operacionAritmetica
Rule 85    operador -> MAS
Rule 86    operador -> MENOS
Rule 87    operador -> MULTIPLICAR
Rule 88    operador -> DIVIDIR
Rule 89    operador -> MODULO
Rule 90    operador -> EXPONENCIACION
Rule 91    hash -> LLAVE_IZQ pares LLAVE_DER
Rule 92    pares -> par
Rule 93    pares -> par COMA pares
Rule 94    par -> valor FLECHA_HASH valor
Rule 95    until -> UNTIL expresion DO instrucciones END_BLOCK
Rule 96    until -> UNTIL expresion instrucciones END_BLOCK
Rule 97    funcion -> DEF VARIABLE_LOCAL PARENTESIS_IZQ parametros_defecto PARENTESIS_DER instrucciones END_BLOCK
Rule 98    parametros_defecto -> parametro_defecto
Rule 99    parametros_defecto -> parametro_defecto COMA parametros_defecto
Rule 100   parametro_defecto -> VARIABLE_LOCAL
Rule 101   parametro_defecto -> VARIABLE_LOCAL ASIGNACION valor
Rule 102   cadena_interpolacion -> CADENA LLAVE_IZQ variable LLAVE_DER
Rule 103   incremento -> VARIABLE_LOCAL MAS ASIGNACION expresion

Terminals, with rules where they appear

ALIAS                : 
AND                  : 47
AND_BLOCK            : 
ASIGNACION           : 9 10 101 103
BEGIN_BLOCK          : 
BREAK                : 
CADENA               : 81 102
CASE                 : 
CLASS                : 
COMA                 : 32 69 93 99
COMENTARIO           : 13
CORCHETE_DER         : 14
CORCHETE_IZQ         : 14
DEF                  : 30 97
DEFINED              : 
DIFERENTE            : 44
DIVIDIR              : 88
DO                   : 95
DOSPUNTOS            : 
DOSPUNTOS_IGUAL      : 
ELSE                 : 20 21 24 25
ELSIF                : 26 27 28 29
END                  : 
END_BLOCK            : 18 19 20 21 22 23 24 25 30 95 96 97
ENSURE               : 
EXPONENCIACION       : 90
FALSE                : 66
FLECHA_HASH          : 94
FLOTANTE             : 80
GETS                 : 10
IF                   : 18 19 20 21 22 23 24 25
IGUAL_IGUAL          : 43
IN                   : 
INTERROGACION        : 
LENGTH               : 
LLAVE_DER            : 91 102
LLAVE_IZQ            : 91 102
MAS                  : 85 103
MAYOR_IGUAL          : 45
MAYOR_QUE            : 41
MENOR_IGUAL          : 46
MENOR_QUE            : 42
MENOS                : 86
MODULE               : 
MODULO               : 89
MULTIPLICAR          : 87
NEXT                 : 
NOT                  : 49
NOT_BLOCK            : 39
NUMERO               : 79
OR                   : 48
PARENTESIS_DER       : 10 11 30 38 60 61 97
PARENTESIS_IZQ       : 10 11 30 38 60 61 97
PUNTO                : 
PUNTO_Y_COMA         : 54
PUTS                 : 11 12
REDO                 : 
RESERVADA            : 
RETRY                : 
RETURN               : 
SELF                 : 
SIMBOLO              : 76
SUPER                : 
THEN                 : 19 21 23 25 27 29
TRUE                 : 67
UNLESS               : 
UNTIL                : 95 96
VARIABLE_CLASE       : 65
VARIABLE_GLOBAL      : 63
VARIABLE_INSTANCIA   : 64
VARIABLE_LOCAL       : 10 30 33 60 61 62 97 100 101 103
WHEN                 : 
WHILE                : 
error                : 

Nonterminals, with rules where they appear

argumento            : 13 68 69
argumentos           : 11 14 60 69
array                : 5 72 78
asignacion           : 3 55
booleano             : 51 70 77
cadena_interpolacion : 
comentario           : 8
comparadores         : 36 37
condicion            : 6 57
elsif_clauses        : 22 23 24 25 28 29
empty                : 34 73
expresion            : 18 19 20 21 22 23 24 25 26 27 28 29 37 37 38 39 40 40 95 96 103
funcion              : 7 59
hash                 : 
if                   : 15
if_else              : 16
if_elsif_else        : 17
impresion            : 4 56
incremento           : 
instruccion          : 52 53 54
instrucciones        : 18 19 20 20 21 21 22 23 24 24 25 25 26 27 28 29 30 53 54 95 96 97
llamada_funcion      : 58
operacionAritmetica  : 71 75 84
operador             : 84
operador_logico      : 40
par                  : 92 93
parametro            : 31 32
parametro_defecto    : 98 99
parametros           : 30 32
parametros_defecto   : 97 99
pares                : 91 93
programa             : 2 0
sentencia            : 1 2
solicitud_datos      : 
until                : 
valor                : 50 83 84 94 94 101
valores              : 9
var_expresion        : 35 36 36
variable             : 9 82 102

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . sentencia
    (2) programa -> . sentencia programa
    (3) sentencia -> . asignacion
    (4) sentencia -> . impresion
    (5) sentencia -> . array
    (6) sentencia -> . condicion
    (7) sentencia -> . funcion
    (8) sentencia -> . comentario
    (9) asignacion -> . variable ASIGNACION valores
    (11) impresion -> . PUTS PARENTESIS_IZQ argumentos PARENTESIS_DER
    (12) impresion -> . PUTS
    (14) array -> . CORCHETE_IZQ argumentos CORCHETE_DER
    (15) condicion -> . if
    (16) condicion -> . if_else
    (17) condicion -> . if_elsif_else
    (30) funcion -> . DEF VARIABLE_LOCAL PARENTESIS_IZQ parametros PARENTESIS_DER instrucciones END_BLOCK
    (97) funcion -> . DEF VARIABLE_LOCAL PARENTESIS_IZQ parametros_defecto PARENTESIS_DER instrucciones END_BLOCK
    (13) comentario -> . COMENTARIO argumento
    (62) variable -> . VARIABLE_LOCAL
    (63) variable -> . VARIABLE_GLOBAL
    (64) variable -> . VARIABLE_INSTANCIA
    (65) variable -> . VARIABLE_CLASE
    (18) if -> . IF expresion instrucciones END_BLOCK
    (19) if -> . IF expresion THEN instrucciones END_BLOCK
    (20) if_else -> . IF expresion instrucciones ELSE instrucciones END_BLOCK
    (21) if_else -> . IF expresion THEN instrucciones ELSE instrucciones END_BLOCK
    (22) if_elsif_else -> . IF expresion instrucciones elsif_clauses END_BLOCK
    (23) if_elsif_else -> . IF expresion THEN instrucciones elsif_clauses END_BLOCK
    (24) if_elsif_else -> . IF expresion instrucciones elsif_clauses ELSE instrucciones END_BLOCK
    (25) if_elsif_else -> . IF expresion THEN instrucciones elsif_clauses ELSE instrucciones END_BLOCK

    PUTS            shift and go to state 10
    CORCHETE_IZQ    shift and go to state 11
    DEF             shift and go to state 15
    COMENTARIO      shift and go to state 17
    VARIABLE_LOCAL  shift and go to state 16
    VARIABLE_GLOBAL shift and go to state 18
    VARIABLE_INSTANCIA shift and go to state 19
    VARIABLE_CLASE  shift and go to state 20
    IF              shift and go to state 21

    programa                       shift and go to state 1
    sentencia                      shift and go to state 2
    asignacion                     shift and go to state 3
    impresion                      shift and go to state 4
    array                          shift and go to state 5
    condicion                      shift and go to state 6
    funcion                        shift and go to state 7
    comentario                     shift and go to state 8
    variable                       shift and go to state 9
    if                             shift and go to state 12
    if_else                        shift and go to state 13
    if_elsif_else                  shift and go to state 14

state 1

    (0) S' -> programa .



state 2

    (1) programa -> sentencia .
    (2) programa -> sentencia . programa
    (1) programa -> . sentencia
    (2) programa -> . sentencia programa
    (3) sentencia -> . asignacion
    (4) sentencia -> . impresion
    (5) sentencia -> . array
    (6) sentencia -> . condicion
    (7) sentencia -> . funcion
    (8) sentencia -> . comentario
    (9) asignacion -> . variable ASIGNACION valores
    (11) impresion -> . PUTS PARENTESIS_IZQ argumentos PARENTESIS_DER
    (12) impresion -> . PUTS
    (14) array -> . CORCHETE_IZQ argumentos CORCHETE_DER
    (15) condicion -> . if
    (16) condicion -> . if_else
    (17) condicion -> . if_elsif_else
    (30) funcion -> . DEF VARIABLE_LOCAL PARENTESIS_IZQ parametros PARENTESIS_DER instrucciones END_BLOCK
    (97) funcion -> . DEF VARIABLE_LOCAL PARENTESIS_IZQ parametros_defecto PARENTESIS_DER instrucciones END_BLOCK
    (13) comentario -> . COMENTARIO argumento
    (62) variable -> . VARIABLE_LOCAL
    (63) variable -> . VARIABLE_GLOBAL
    (64) variable -> . VARIABLE_INSTANCIA
    (65) variable -> . VARIABLE_CLASE
    (18) if -> . IF expresion instrucciones END_BLOCK
    (19) if -> . IF expresion THEN instrucciones END_BLOCK
    (20) if_else -> . IF expresion instrucciones ELSE instrucciones END_BLOCK
    (21) if_else -> . IF expresion THEN instrucciones ELSE instrucciones END_BLOCK
    (22) if_elsif_else -> . IF expresion instrucciones elsif_clauses END_BLOCK
    (23) if_elsif_else -> . IF expresion THEN instrucciones elsif_clauses END_BLOCK
    (24) if_elsif_else -> . IF expresion instrucciones elsif_clauses ELSE instrucciones END_BLOCK
    (25) if_elsif_else -> . IF expresion THEN instrucciones elsif_clauses ELSE instrucciones END_BLOCK

    $end            reduce using rule 1 (programa -> sentencia .)
    PUTS            shift and go to state 10
    CORCHETE_IZQ    shift and go to state 11
    DEF             shift and go to state 15
    COMENTARIO      shift and go to state 17
    VARIABLE_LOCAL  shift and go to state 16
    VARIABLE_GLOBAL shift and go to state 18
    VARIABLE_INSTANCIA shift and go to state 19
    VARIABLE_CLASE  shift and go to state 20
    IF              shift and go to state 21

    sentencia                      shift and go to state 2
    programa                       shift and go to state 22
    asignacion                     shift and go to state 3
    impresion                      shift and go to state 4
    array                          shift and go to state 5
    condicion                      shift and go to state 6
    funcion                        shift and go to state 7
    comentario                     shift and go to state 8
    variable                       shift and go to state 9
    if                             shift and go to state 12
    if_else                        shift and go to state 13
    if_elsif_else                  shift and go to state 14

state 3

    (3) sentencia -> asignacion .

    PUTS            reduce using rule 3 (sentencia -> asignacion .)
    CORCHETE_IZQ    reduce using rule 3 (sentencia -> asignacion .)
    DEF             reduce using rule 3 (sentencia -> asignacion .)
    COMENTARIO      reduce using rule 3 (sentencia -> asignacion .)
    VARIABLE_LOCAL  reduce using rule 3 (sentencia -> asignacion .)
    VARIABLE_GLOBAL reduce using rule 3 (sentencia -> asignacion .)
    VARIABLE_INSTANCIA reduce using rule 3 (sentencia -> asignacion .)
    VARIABLE_CLASE  reduce using rule 3 (sentencia -> asignacion .)
    IF              reduce using rule 3 (sentencia -> asignacion .)
    $end            reduce using rule 3 (sentencia -> asignacion .)


state 4

    (4) sentencia -> impresion .

    PUTS            reduce using rule 4 (sentencia -> impresion .)
    CORCHETE_IZQ    reduce using rule 4 (sentencia -> impresion .)
    DEF             reduce using rule 4 (sentencia -> impresion .)
    COMENTARIO      reduce using rule 4 (sentencia -> impresion .)
    VARIABLE_LOCAL  reduce using rule 4 (sentencia -> impresion .)
    VARIABLE_GLOBAL reduce using rule 4 (sentencia -> impresion .)
    VARIABLE_INSTANCIA reduce using rule 4 (sentencia -> impresion .)
    VARIABLE_CLASE  reduce using rule 4 (sentencia -> impresion .)
    IF              reduce using rule 4 (sentencia -> impresion .)
    $end            reduce using rule 4 (sentencia -> impresion .)


state 5

    (5) sentencia -> array .

    PUTS            reduce using rule 5 (sentencia -> array .)
    CORCHETE_IZQ    reduce using rule 5 (sentencia -> array .)
    DEF             reduce using rule 5 (sentencia -> array .)
    COMENTARIO      reduce using rule 5 (sentencia -> array .)
    VARIABLE_LOCAL  reduce using rule 5 (sentencia -> array .)
    VARIABLE_GLOBAL reduce using rule 5 (sentencia -> array .)
    VARIABLE_INSTANCIA reduce using rule 5 (sentencia -> array .)
    VARIABLE_CLASE  reduce using rule 5 (sentencia -> array .)
    IF              reduce using rule 5 (sentencia -> array .)
    $end            reduce using rule 5 (sentencia -> array .)


state 6

    (6) sentencia -> condicion .

    PUTS            reduce using rule 6 (sentencia -> condicion .)
    CORCHETE_IZQ    reduce using rule 6 (sentencia -> condicion .)
    DEF             reduce using rule 6 (sentencia -> condicion .)
    COMENTARIO      reduce using rule 6 (sentencia -> condicion .)
    VARIABLE_LOCAL  reduce using rule 6 (sentencia -> condicion .)
    VARIABLE_GLOBAL reduce using rule 6 (sentencia -> condicion .)
    VARIABLE_INSTANCIA reduce using rule 6 (sentencia -> condicion .)
    VARIABLE_CLASE  reduce using rule 6 (sentencia -> condicion .)
    IF              reduce using rule 6 (sentencia -> condicion .)
    $end            reduce using rule 6 (sentencia -> condicion .)


state 7

    (7) sentencia -> funcion .

    PUTS            reduce using rule 7 (sentencia -> funcion .)
    CORCHETE_IZQ    reduce using rule 7 (sentencia -> funcion .)
    DEF             reduce using rule 7 (sentencia -> funcion .)
    COMENTARIO      reduce using rule 7 (sentencia -> funcion .)
    VARIABLE_LOCAL  reduce using rule 7 (sentencia -> funcion .)
    VARIABLE_GLOBAL reduce using rule 7 (sentencia -> funcion .)
    VARIABLE_INSTANCIA reduce using rule 7 (sentencia -> funcion .)
    VARIABLE_CLASE  reduce using rule 7 (sentencia -> funcion .)
    IF              reduce using rule 7 (sentencia -> funcion .)
    $end            reduce using rule 7 (sentencia -> funcion .)


state 8

    (8) sentencia -> comentario .

    PUTS            reduce using rule 8 (sentencia -> comentario .)
    CORCHETE_IZQ    reduce using rule 8 (sentencia -> comentario .)
    DEF             reduce using rule 8 (sentencia -> comentario .)
    COMENTARIO      reduce using rule 8 (sentencia -> comentario .)
    VARIABLE_LOCAL  reduce using rule 8 (sentencia -> comentario .)
    VARIABLE_GLOBAL reduce using rule 8 (sentencia -> comentario .)
    VARIABLE_INSTANCIA reduce using rule 8 (sentencia -> comentario .)
    VARIABLE_CLASE  reduce using rule 8 (sentencia -> comentario .)
    IF              reduce using rule 8 (sentencia -> comentario .)
    $end            reduce using rule 8 (sentencia -> comentario .)


state 9

    (9) asignacion -> variable . ASIGNACION valores

    ASIGNACION      shift and go to state 23


state 10

    (11) impresion -> PUTS . PARENTESIS_IZQ argumentos PARENTESIS_DER
    (12) impresion -> PUTS .

    PARENTESIS_IZQ  shift and go to state 24
    PUTS            reduce using rule 12 (impresion -> PUTS .)
    CORCHETE_IZQ    reduce using rule 12 (impresion -> PUTS .)
    DEF             reduce using rule 12 (impresion -> PUTS .)
    COMENTARIO      reduce using rule 12 (impresion -> PUTS .)
    VARIABLE_LOCAL  reduce using rule 12 (impresion -> PUTS .)
    VARIABLE_GLOBAL reduce using rule 12 (impresion -> PUTS .)
    VARIABLE_INSTANCIA reduce using rule 12 (impresion -> PUTS .)
    VARIABLE_CLASE  reduce using rule 12 (impresion -> PUTS .)
    IF              reduce using rule 12 (impresion -> PUTS .)
    $end            reduce using rule 12 (impresion -> PUTS .)
    PUNTO_Y_COMA    reduce using rule 12 (impresion -> PUTS .)
    END_BLOCK       reduce using rule 12 (impresion -> PUTS .)
    ELSE            reduce using rule 12 (impresion -> PUTS .)
    ELSIF           reduce using rule 12 (impresion -> PUTS .)


state 11

    (14) array -> CORCHETE_IZQ . argumentos CORCHETE_DER
    (68) argumentos -> . argumento
    (69) argumentos -> . argumento COMA argumentos
    (70) argumento -> . booleano
    (71) argumento -> . operacionAritmetica
    (72) argumento -> . array
    (73) argumento -> . empty
    (66) booleano -> . FALSE
    (67) booleano -> . TRUE
    (83) operacionAritmetica -> . valor
    (84) operacionAritmetica -> . valor operador operacionAritmetica
    (14) array -> . CORCHETE_IZQ argumentos CORCHETE_DER
    (74) empty -> .
    (79) valor -> . NUMERO
    (80) valor -> . FLOTANTE
    (81) valor -> . CADENA
    (82) valor -> . variable
    (62) variable -> . VARIABLE_LOCAL
    (63) variable -> . VARIABLE_GLOBAL
    (64) variable -> . VARIABLE_INSTANCIA
    (65) variable -> . VARIABLE_CLASE

    FALSE           shift and go to state 31
    TRUE            shift and go to state 32
    CORCHETE_IZQ    shift and go to state 11
    COMA            reduce using rule 74 (empty -> .)
    CORCHETE_DER    reduce using rule 74 (empty -> .)
    NUMERO          shift and go to state 34
    FLOTANTE        shift and go to state 35
    CADENA          shift and go to state 36
    VARIABLE_LOCAL  shift and go to state 16
    VARIABLE_GLOBAL shift and go to state 18
    VARIABLE_INSTANCIA shift and go to state 19
    VARIABLE_CLASE  shift and go to state 20

    argumentos                     shift and go to state 25
    argumento                      shift and go to state 26
    booleano                       shift and go to state 27
    operacionAritmetica            shift and go to state 28
    array                          shift and go to state 29
    empty                          shift and go to state 30
    valor                          shift and go to state 33
    variable                       shift and go to state 37

state 12

    (15) condicion -> if .

    PUTS            reduce using rule 15 (condicion -> if .)
    CORCHETE_IZQ    reduce using rule 15 (condicion -> if .)
    DEF             reduce using rule 15 (condicion -> if .)
    COMENTARIO      reduce using rule 15 (condicion -> if .)
    VARIABLE_LOCAL  reduce using rule 15 (condicion -> if .)
    VARIABLE_GLOBAL reduce using rule 15 (condicion -> if .)
    VARIABLE_INSTANCIA reduce using rule 15 (condicion -> if .)
    VARIABLE_CLASE  reduce using rule 15 (condicion -> if .)
    IF              reduce using rule 15 (condicion -> if .)
    $end            reduce using rule 15 (condicion -> if .)
    PUNTO_Y_COMA    reduce using rule 15 (condicion -> if .)
    END_BLOCK       reduce using rule 15 (condicion -> if .)
    ELSE            reduce using rule 15 (condicion -> if .)
    ELSIF           reduce using rule 15 (condicion -> if .)


state 13

    (16) condicion -> if_else .

    PUTS            reduce using rule 16 (condicion -> if_else .)
    CORCHETE_IZQ    reduce using rule 16 (condicion -> if_else .)
    DEF             reduce using rule 16 (condicion -> if_else .)
    COMENTARIO      reduce using rule 16 (condicion -> if_else .)
    VARIABLE_LOCAL  reduce using rule 16 (condicion -> if_else .)
    VARIABLE_GLOBAL reduce using rule 16 (condicion -> if_else .)
    VARIABLE_INSTANCIA reduce using rule 16 (condicion -> if_else .)
    VARIABLE_CLASE  reduce using rule 16 (condicion -> if_else .)
    IF              reduce using rule 16 (condicion -> if_else .)
    $end            reduce using rule 16 (condicion -> if_else .)
    PUNTO_Y_COMA    reduce using rule 16 (condicion -> if_else .)
    END_BLOCK       reduce using rule 16 (condicion -> if_else .)
    ELSE            reduce using rule 16 (condicion -> if_else .)
    ELSIF           reduce using rule 16 (condicion -> if_else .)


state 14

    (17) condicion -> if_elsif_else .

    PUTS            reduce using rule 17 (condicion -> if_elsif_else .)
    CORCHETE_IZQ    reduce using rule 17 (condicion -> if_elsif_else .)
    DEF             reduce using rule 17 (condicion -> if_elsif_else .)
    COMENTARIO      reduce using rule 17 (condicion -> if_elsif_else .)
    VARIABLE_LOCAL  reduce using rule 17 (condicion -> if_elsif_else .)
    VARIABLE_GLOBAL reduce using rule 17 (condicion -> if_elsif_else .)
    VARIABLE_INSTANCIA reduce using rule 17 (condicion -> if_elsif_else .)
    VARIABLE_CLASE  reduce using rule 17 (condicion -> if_elsif_else .)
    IF              reduce using rule 17 (condicion -> if_elsif_else .)
    $end            reduce using rule 17 (condicion -> if_elsif_else .)
    PUNTO_Y_COMA    reduce using rule 17 (condicion -> if_elsif_else .)
    END_BLOCK       reduce using rule 17 (condicion -> if_elsif_else .)
    ELSE            reduce using rule 17 (condicion -> if_elsif_else .)
    ELSIF           reduce using rule 17 (condicion -> if_elsif_else .)


state 15

    (30) funcion -> DEF . VARIABLE_LOCAL PARENTESIS_IZQ parametros PARENTESIS_DER instrucciones END_BLOCK
    (97) funcion -> DEF . VARIABLE_LOCAL PARENTESIS_IZQ parametros_defecto PARENTESIS_DER instrucciones END_BLOCK

    VARIABLE_LOCAL  shift and go to state 38


state 16

    (62) variable -> VARIABLE_LOCAL .

    ASIGNACION      reduce using rule 62 (variable -> VARIABLE_LOCAL .)
    MAS             reduce using rule 62 (variable -> VARIABLE_LOCAL .)
    MENOS           reduce using rule 62 (variable -> VARIABLE_LOCAL .)
    MULTIPLICAR     reduce using rule 62 (variable -> VARIABLE_LOCAL .)
    DIVIDIR         reduce using rule 62 (variable -> VARIABLE_LOCAL .)
    MODULO          reduce using rule 62 (variable -> VARIABLE_LOCAL .)
    EXPONENCIACION  reduce using rule 62 (variable -> VARIABLE_LOCAL .)
    COMA            reduce using rule 62 (variable -> VARIABLE_LOCAL .)
    CORCHETE_DER    reduce using rule 62 (variable -> VARIABLE_LOCAL .)
    PUTS            reduce using rule 62 (variable -> VARIABLE_LOCAL .)
    CORCHETE_IZQ    reduce using rule 62 (variable -> VARIABLE_LOCAL .)
    DEF             reduce using rule 62 (variable -> VARIABLE_LOCAL .)
    COMENTARIO      reduce using rule 62 (variable -> VARIABLE_LOCAL .)
    VARIABLE_LOCAL  reduce using rule 62 (variable -> VARIABLE_LOCAL .)
    VARIABLE_GLOBAL reduce using rule 62 (variable -> VARIABLE_LOCAL .)
    VARIABLE_INSTANCIA reduce using rule 62 (variable -> VARIABLE_LOCAL .)
    VARIABLE_CLASE  reduce using rule 62 (variable -> VARIABLE_LOCAL .)
    IF              reduce using rule 62 (variable -> VARIABLE_LOCAL .)
    $end            reduce using rule 62 (variable -> VARIABLE_LOCAL .)
    MAYOR_QUE       reduce using rule 62 (variable -> VARIABLE_LOCAL .)
    MENOR_QUE       reduce using rule 62 (variable -> VARIABLE_LOCAL .)
    IGUAL_IGUAL     reduce using rule 62 (variable -> VARIABLE_LOCAL .)
    DIFERENTE       reduce using rule 62 (variable -> VARIABLE_LOCAL .)
    MAYOR_IGUAL     reduce using rule 62 (variable -> VARIABLE_LOCAL .)
    MENOR_IGUAL     reduce using rule 62 (variable -> VARIABLE_LOCAL .)
    THEN            reduce using rule 62 (variable -> VARIABLE_LOCAL .)
    AND             reduce using rule 62 (variable -> VARIABLE_LOCAL .)
    OR              reduce using rule 62 (variable -> VARIABLE_LOCAL .)
    NOT             reduce using rule 62 (variable -> VARIABLE_LOCAL .)
    PUNTO_Y_COMA    reduce using rule 62 (variable -> VARIABLE_LOCAL .)
    END_BLOCK       reduce using rule 62 (variable -> VARIABLE_LOCAL .)
    ELSE            reduce using rule 62 (variable -> VARIABLE_LOCAL .)
    ELSIF           reduce using rule 62 (variable -> VARIABLE_LOCAL .)
    PARENTESIS_DER  reduce using rule 62 (variable -> VARIABLE_LOCAL .)


state 17

    (13) comentario -> COMENTARIO . argumento
    (70) argumento -> . booleano
    (71) argumento -> . operacionAritmetica
    (72) argumento -> . array
    (73) argumento -> . empty
    (66) booleano -> . FALSE
    (67) booleano -> . TRUE
    (83) operacionAritmetica -> . valor
    (84) operacionAritmetica -> . valor operador operacionAritmetica
    (14) array -> . CORCHETE_IZQ argumentos CORCHETE_DER
    (74) empty -> .
    (79) valor -> . NUMERO
    (80) valor -> . FLOTANTE
    (81) valor -> . CADENA
    (82) valor -> . variable
    (62) variable -> . VARIABLE_LOCAL
    (63) variable -> . VARIABLE_GLOBAL
    (64) variable -> . VARIABLE_INSTANCIA
    (65) variable -> . VARIABLE_CLASE

  ! shift/reduce conflict for CORCHETE_IZQ resolved as shift
  ! shift/reduce conflict for VARIABLE_LOCAL resolved as shift
  ! shift/reduce conflict for VARIABLE_GLOBAL resolved as shift
  ! shift/reduce conflict for VARIABLE_INSTANCIA resolved as shift
  ! shift/reduce conflict for VARIABLE_CLASE resolved as shift
    FALSE           shift and go to state 31
    TRUE            shift and go to state 32
    CORCHETE_IZQ    shift and go to state 11
    PUTS            reduce using rule 74 (empty -> .)
    DEF             reduce using rule 74 (empty -> .)
    COMENTARIO      reduce using rule 74 (empty -> .)
    IF              reduce using rule 74 (empty -> .)
    $end            reduce using rule 74 (empty -> .)
    NUMERO          shift and go to state 34
    FLOTANTE        shift and go to state 35
    CADENA          shift and go to state 36
    VARIABLE_LOCAL  shift and go to state 16
    VARIABLE_GLOBAL shift and go to state 18
    VARIABLE_INSTANCIA shift and go to state 19
    VARIABLE_CLASE  shift and go to state 20

  ! CORCHETE_IZQ    [ reduce using rule 74 (empty -> .) ]
  ! VARIABLE_LOCAL  [ reduce using rule 74 (empty -> .) ]
  ! VARIABLE_GLOBAL [ reduce using rule 74 (empty -> .) ]
  ! VARIABLE_INSTANCIA [ reduce using rule 74 (empty -> .) ]
  ! VARIABLE_CLASE  [ reduce using rule 74 (empty -> .) ]

    argumento                      shift and go to state 39
    booleano                       shift and go to state 27
    operacionAritmetica            shift and go to state 28
    array                          shift and go to state 29
    empty                          shift and go to state 30
    valor                          shift and go to state 33
    variable                       shift and go to state 37

state 18

    (63) variable -> VARIABLE_GLOBAL .

    ASIGNACION      reduce using rule 63 (variable -> VARIABLE_GLOBAL .)
    MAS             reduce using rule 63 (variable -> VARIABLE_GLOBAL .)
    MENOS           reduce using rule 63 (variable -> VARIABLE_GLOBAL .)
    MULTIPLICAR     reduce using rule 63 (variable -> VARIABLE_GLOBAL .)
    DIVIDIR         reduce using rule 63 (variable -> VARIABLE_GLOBAL .)
    MODULO          reduce using rule 63 (variable -> VARIABLE_GLOBAL .)
    EXPONENCIACION  reduce using rule 63 (variable -> VARIABLE_GLOBAL .)
    COMA            reduce using rule 63 (variable -> VARIABLE_GLOBAL .)
    CORCHETE_DER    reduce using rule 63 (variable -> VARIABLE_GLOBAL .)
    PUTS            reduce using rule 63 (variable -> VARIABLE_GLOBAL .)
    CORCHETE_IZQ    reduce using rule 63 (variable -> VARIABLE_GLOBAL .)
    DEF             reduce using rule 63 (variable -> VARIABLE_GLOBAL .)
    COMENTARIO      reduce using rule 63 (variable -> VARIABLE_GLOBAL .)
    VARIABLE_LOCAL  reduce using rule 63 (variable -> VARIABLE_GLOBAL .)
    VARIABLE_GLOBAL reduce using rule 63 (variable -> VARIABLE_GLOBAL .)
    VARIABLE_INSTANCIA reduce using rule 63 (variable -> VARIABLE_GLOBAL .)
    VARIABLE_CLASE  reduce using rule 63 (variable -> VARIABLE_GLOBAL .)
    IF              reduce using rule 63 (variable -> VARIABLE_GLOBAL .)
    $end            reduce using rule 63 (variable -> VARIABLE_GLOBAL .)
    MAYOR_QUE       reduce using rule 63 (variable -> VARIABLE_GLOBAL .)
    MENOR_QUE       reduce using rule 63 (variable -> VARIABLE_GLOBAL .)
    IGUAL_IGUAL     reduce using rule 63 (variable -> VARIABLE_GLOBAL .)
    DIFERENTE       reduce using rule 63 (variable -> VARIABLE_GLOBAL .)
    MAYOR_IGUAL     reduce using rule 63 (variable -> VARIABLE_GLOBAL .)
    MENOR_IGUAL     reduce using rule 63 (variable -> VARIABLE_GLOBAL .)
    THEN            reduce using rule 63 (variable -> VARIABLE_GLOBAL .)
    AND             reduce using rule 63 (variable -> VARIABLE_GLOBAL .)
    OR              reduce using rule 63 (variable -> VARIABLE_GLOBAL .)
    NOT             reduce using rule 63 (variable -> VARIABLE_GLOBAL .)
    PUNTO_Y_COMA    reduce using rule 63 (variable -> VARIABLE_GLOBAL .)
    END_BLOCK       reduce using rule 63 (variable -> VARIABLE_GLOBAL .)
    ELSE            reduce using rule 63 (variable -> VARIABLE_GLOBAL .)
    ELSIF           reduce using rule 63 (variable -> VARIABLE_GLOBAL .)
    PARENTESIS_DER  reduce using rule 63 (variable -> VARIABLE_GLOBAL .)


state 19

    (64) variable -> VARIABLE_INSTANCIA .

    ASIGNACION      reduce using rule 64 (variable -> VARIABLE_INSTANCIA .)
    MAS             reduce using rule 64 (variable -> VARIABLE_INSTANCIA .)
    MENOS           reduce using rule 64 (variable -> VARIABLE_INSTANCIA .)
    MULTIPLICAR     reduce using rule 64 (variable -> VARIABLE_INSTANCIA .)
    DIVIDIR         reduce using rule 64 (variable -> VARIABLE_INSTANCIA .)
    MODULO          reduce using rule 64 (variable -> VARIABLE_INSTANCIA .)
    EXPONENCIACION  reduce using rule 64 (variable -> VARIABLE_INSTANCIA .)
    COMA            reduce using rule 64 (variable -> VARIABLE_INSTANCIA .)
    CORCHETE_DER    reduce using rule 64 (variable -> VARIABLE_INSTANCIA .)
    PUTS            reduce using rule 64 (variable -> VARIABLE_INSTANCIA .)
    CORCHETE_IZQ    reduce using rule 64 (variable -> VARIABLE_INSTANCIA .)
    DEF             reduce using rule 64 (variable -> VARIABLE_INSTANCIA .)
    COMENTARIO      reduce using rule 64 (variable -> VARIABLE_INSTANCIA .)
    VARIABLE_LOCAL  reduce using rule 64 (variable -> VARIABLE_INSTANCIA .)
    VARIABLE_GLOBAL reduce using rule 64 (variable -> VARIABLE_INSTANCIA .)
    VARIABLE_INSTANCIA reduce using rule 64 (variable -> VARIABLE_INSTANCIA .)
    VARIABLE_CLASE  reduce using rule 64 (variable -> VARIABLE_INSTANCIA .)
    IF              reduce using rule 64 (variable -> VARIABLE_INSTANCIA .)
    $end            reduce using rule 64 (variable -> VARIABLE_INSTANCIA .)
    MAYOR_QUE       reduce using rule 64 (variable -> VARIABLE_INSTANCIA .)
    MENOR_QUE       reduce using rule 64 (variable -> VARIABLE_INSTANCIA .)
    IGUAL_IGUAL     reduce using rule 64 (variable -> VARIABLE_INSTANCIA .)
    DIFERENTE       reduce using rule 64 (variable -> VARIABLE_INSTANCIA .)
    MAYOR_IGUAL     reduce using rule 64 (variable -> VARIABLE_INSTANCIA .)
    MENOR_IGUAL     reduce using rule 64 (variable -> VARIABLE_INSTANCIA .)
    THEN            reduce using rule 64 (variable -> VARIABLE_INSTANCIA .)
    AND             reduce using rule 64 (variable -> VARIABLE_INSTANCIA .)
    OR              reduce using rule 64 (variable -> VARIABLE_INSTANCIA .)
    NOT             reduce using rule 64 (variable -> VARIABLE_INSTANCIA .)
    PUNTO_Y_COMA    reduce using rule 64 (variable -> VARIABLE_INSTANCIA .)
    END_BLOCK       reduce using rule 64 (variable -> VARIABLE_INSTANCIA .)
    ELSE            reduce using rule 64 (variable -> VARIABLE_INSTANCIA .)
    ELSIF           reduce using rule 64 (variable -> VARIABLE_INSTANCIA .)
    PARENTESIS_DER  reduce using rule 64 (variable -> VARIABLE_INSTANCIA .)


state 20

    (65) variable -> VARIABLE_CLASE .

    ASIGNACION      reduce using rule 65 (variable -> VARIABLE_CLASE .)
    MAS             reduce using rule 65 (variable -> VARIABLE_CLASE .)
    MENOS           reduce using rule 65 (variable -> VARIABLE_CLASE .)
    MULTIPLICAR     reduce using rule 65 (variable -> VARIABLE_CLASE .)
    DIVIDIR         reduce using rule 65 (variable -> VARIABLE_CLASE .)
    MODULO          reduce using rule 65 (variable -> VARIABLE_CLASE .)
    EXPONENCIACION  reduce using rule 65 (variable -> VARIABLE_CLASE .)
    COMA            reduce using rule 65 (variable -> VARIABLE_CLASE .)
    CORCHETE_DER    reduce using rule 65 (variable -> VARIABLE_CLASE .)
    PUTS            reduce using rule 65 (variable -> VARIABLE_CLASE .)
    CORCHETE_IZQ    reduce using rule 65 (variable -> VARIABLE_CLASE .)
    DEF             reduce using rule 65 (variable -> VARIABLE_CLASE .)
    COMENTARIO      reduce using rule 65 (variable -> VARIABLE_CLASE .)
    VARIABLE_LOCAL  reduce using rule 65 (variable -> VARIABLE_CLASE .)
    VARIABLE_GLOBAL reduce using rule 65 (variable -> VARIABLE_CLASE .)
    VARIABLE_INSTANCIA reduce using rule 65 (variable -> VARIABLE_CLASE .)
    VARIABLE_CLASE  reduce using rule 65 (variable -> VARIABLE_CLASE .)
    IF              reduce using rule 65 (variable -> VARIABLE_CLASE .)
    $end            reduce using rule 65 (variable -> VARIABLE_CLASE .)
    MAYOR_QUE       reduce using rule 65 (variable -> VARIABLE_CLASE .)
    MENOR_QUE       reduce using rule 65 (variable -> VARIABLE_CLASE .)
    IGUAL_IGUAL     reduce using rule 65 (variable -> VARIABLE_CLASE .)
    DIFERENTE       reduce using rule 65 (variable -> VARIABLE_CLASE .)
    MAYOR_IGUAL     reduce using rule 65 (variable -> VARIABLE_CLASE .)
    MENOR_IGUAL     reduce using rule 65 (variable -> VARIABLE_CLASE .)
    THEN            reduce using rule 65 (variable -> VARIABLE_CLASE .)
    AND             reduce using rule 65 (variable -> VARIABLE_CLASE .)
    OR              reduce using rule 65 (variable -> VARIABLE_CLASE .)
    NOT             reduce using rule 65 (variable -> VARIABLE_CLASE .)
    PUNTO_Y_COMA    reduce using rule 65 (variable -> VARIABLE_CLASE .)
    END_BLOCK       reduce using rule 65 (variable -> VARIABLE_CLASE .)
    ELSE            reduce using rule 65 (variable -> VARIABLE_CLASE .)
    ELSIF           reduce using rule 65 (variable -> VARIABLE_CLASE .)
    PARENTESIS_DER  reduce using rule 65 (variable -> VARIABLE_CLASE .)


state 21

    (18) if -> IF . expresion instrucciones END_BLOCK
    (19) if -> IF . expresion THEN instrucciones END_BLOCK
    (20) if_else -> IF . expresion instrucciones ELSE instrucciones END_BLOCK
    (21) if_else -> IF . expresion THEN instrucciones ELSE instrucciones END_BLOCK
    (22) if_elsif_else -> IF . expresion instrucciones elsif_clauses END_BLOCK
    (23) if_elsif_else -> IF . expresion THEN instrucciones elsif_clauses END_BLOCK
    (24) if_elsif_else -> IF . expresion instrucciones elsif_clauses ELSE instrucciones END_BLOCK
    (25) if_elsif_else -> IF . expresion THEN instrucciones elsif_clauses ELSE instrucciones END_BLOCK
    (35) expresion -> . var_expresion
    (36) expresion -> . var_expresion comparadores var_expresion
    (37) expresion -> . expresion comparadores expresion
    (38) expresion -> . PARENTESIS_IZQ expresion PARENTESIS_DER
    (39) expresion -> . NOT_BLOCK expresion
    (40) expresion -> . expresion operador_logico expresion
    (50) var_expresion -> . valor
    (51) var_expresion -> . booleano
    (79) valor -> . NUMERO
    (80) valor -> . FLOTANTE
    (81) valor -> . CADENA
    (82) valor -> . variable
    (66) booleano -> . FALSE
    (67) booleano -> . TRUE
    (62) variable -> . VARIABLE_LOCAL
    (63) variable -> . VARIABLE_GLOBAL
    (64) variable -> . VARIABLE_INSTANCIA
    (65) variable -> . VARIABLE_CLASE

    PARENTESIS_IZQ  shift and go to state 42
    NOT_BLOCK       shift and go to state 43
    NUMERO          shift and go to state 34
    FLOTANTE        shift and go to state 35
    CADENA          shift and go to state 36
    FALSE           shift and go to state 31
    TRUE            shift and go to state 32
    VARIABLE_LOCAL  shift and go to state 16
    VARIABLE_GLOBAL shift and go to state 18
    VARIABLE_INSTANCIA shift and go to state 19
    VARIABLE_CLASE  shift and go to state 20

    expresion                      shift and go to state 40
    var_expresion                  shift and go to state 41
    valor                          shift and go to state 44
    booleano                       shift and go to state 45
    variable                       shift and go to state 37

state 22

    (2) programa -> sentencia programa .

    $end            reduce using rule 2 (programa -> sentencia programa .)


state 23

    (9) asignacion -> variable ASIGNACION . valores
    (75) valores -> . operacionAritmetica
    (76) valores -> . SIMBOLO
    (77) valores -> . booleano
    (78) valores -> . array
    (83) operacionAritmetica -> . valor
    (84) operacionAritmetica -> . valor operador operacionAritmetica
    (66) booleano -> . FALSE
    (67) booleano -> . TRUE
    (14) array -> . CORCHETE_IZQ argumentos CORCHETE_DER
    (79) valor -> . NUMERO
    (80) valor -> . FLOTANTE
    (81) valor -> . CADENA
    (82) valor -> . variable
    (62) variable -> . VARIABLE_LOCAL
    (63) variable -> . VARIABLE_GLOBAL
    (64) variable -> . VARIABLE_INSTANCIA
    (65) variable -> . VARIABLE_CLASE

    SIMBOLO         shift and go to state 48
    FALSE           shift and go to state 31
    TRUE            shift and go to state 32
    CORCHETE_IZQ    shift and go to state 11
    NUMERO          shift and go to state 34
    FLOTANTE        shift and go to state 35
    CADENA          shift and go to state 36
    VARIABLE_LOCAL  shift and go to state 16
    VARIABLE_GLOBAL shift and go to state 18
    VARIABLE_INSTANCIA shift and go to state 19
    VARIABLE_CLASE  shift and go to state 20

    variable                       shift and go to state 37
    valores                        shift and go to state 46
    operacionAritmetica            shift and go to state 47
    booleano                       shift and go to state 49
    array                          shift and go to state 50
    valor                          shift and go to state 33

state 24

    (11) impresion -> PUTS PARENTESIS_IZQ . argumentos PARENTESIS_DER
    (68) argumentos -> . argumento
    (69) argumentos -> . argumento COMA argumentos
    (70) argumento -> . booleano
    (71) argumento -> . operacionAritmetica
    (72) argumento -> . array
    (73) argumento -> . empty
    (66) booleano -> . FALSE
    (67) booleano -> . TRUE
    (83) operacionAritmetica -> . valor
    (84) operacionAritmetica -> . valor operador operacionAritmetica
    (14) array -> . CORCHETE_IZQ argumentos CORCHETE_DER
    (74) empty -> .
    (79) valor -> . NUMERO
    (80) valor -> . FLOTANTE
    (81) valor -> . CADENA
    (82) valor -> . variable
    (62) variable -> . VARIABLE_LOCAL
    (63) variable -> . VARIABLE_GLOBAL
    (64) variable -> . VARIABLE_INSTANCIA
    (65) variable -> . VARIABLE_CLASE

    FALSE           shift and go to state 31
    TRUE            shift and go to state 32
    CORCHETE_IZQ    shift and go to state 11
    COMA            reduce using rule 74 (empty -> .)
    PARENTESIS_DER  reduce using rule 74 (empty -> .)
    NUMERO          shift and go to state 34
    FLOTANTE        shift and go to state 35
    CADENA          shift and go to state 36
    VARIABLE_LOCAL  shift and go to state 16
    VARIABLE_GLOBAL shift and go to state 18
    VARIABLE_INSTANCIA shift and go to state 19
    VARIABLE_CLASE  shift and go to state 20

    argumentos                     shift and go to state 51
    argumento                      shift and go to state 26
    booleano                       shift and go to state 27
    operacionAritmetica            shift and go to state 28
    array                          shift and go to state 29
    empty                          shift and go to state 30
    valor                          shift and go to state 33
    variable                       shift and go to state 37

state 25

    (14) array -> CORCHETE_IZQ argumentos . CORCHETE_DER

    CORCHETE_DER    shift and go to state 52


state 26

    (68) argumentos -> argumento .
    (69) argumentos -> argumento . COMA argumentos

    CORCHETE_DER    reduce using rule 68 (argumentos -> argumento .)
    PARENTESIS_DER  reduce using rule 68 (argumentos -> argumento .)
    COMA            shift and go to state 53


state 27

    (70) argumento -> booleano .

    COMA            reduce using rule 70 (argumento -> booleano .)
    CORCHETE_DER    reduce using rule 70 (argumento -> booleano .)
    PUTS            reduce using rule 70 (argumento -> booleano .)
    CORCHETE_IZQ    reduce using rule 70 (argumento -> booleano .)
    DEF             reduce using rule 70 (argumento -> booleano .)
    COMENTARIO      reduce using rule 70 (argumento -> booleano .)
    VARIABLE_LOCAL  reduce using rule 70 (argumento -> booleano .)
    VARIABLE_GLOBAL reduce using rule 70 (argumento -> booleano .)
    VARIABLE_INSTANCIA reduce using rule 70 (argumento -> booleano .)
    VARIABLE_CLASE  reduce using rule 70 (argumento -> booleano .)
    IF              reduce using rule 70 (argumento -> booleano .)
    $end            reduce using rule 70 (argumento -> booleano .)
    PARENTESIS_DER  reduce using rule 70 (argumento -> booleano .)


state 28

    (71) argumento -> operacionAritmetica .

    COMA            reduce using rule 71 (argumento -> operacionAritmetica .)
    CORCHETE_DER    reduce using rule 71 (argumento -> operacionAritmetica .)
    PUTS            reduce using rule 71 (argumento -> operacionAritmetica .)
    CORCHETE_IZQ    reduce using rule 71 (argumento -> operacionAritmetica .)
    DEF             reduce using rule 71 (argumento -> operacionAritmetica .)
    COMENTARIO      reduce using rule 71 (argumento -> operacionAritmetica .)
    VARIABLE_LOCAL  reduce using rule 71 (argumento -> operacionAritmetica .)
    VARIABLE_GLOBAL reduce using rule 71 (argumento -> operacionAritmetica .)
    VARIABLE_INSTANCIA reduce using rule 71 (argumento -> operacionAritmetica .)
    VARIABLE_CLASE  reduce using rule 71 (argumento -> operacionAritmetica .)
    IF              reduce using rule 71 (argumento -> operacionAritmetica .)
    $end            reduce using rule 71 (argumento -> operacionAritmetica .)
    PARENTESIS_DER  reduce using rule 71 (argumento -> operacionAritmetica .)


state 29

    (72) argumento -> array .

    COMA            reduce using rule 72 (argumento -> array .)
    CORCHETE_DER    reduce using rule 72 (argumento -> array .)
    PUTS            reduce using rule 72 (argumento -> array .)
    CORCHETE_IZQ    reduce using rule 72 (argumento -> array .)
    DEF             reduce using rule 72 (argumento -> array .)
    COMENTARIO      reduce using rule 72 (argumento -> array .)
    VARIABLE_LOCAL  reduce using rule 72 (argumento -> array .)
    VARIABLE_GLOBAL reduce using rule 72 (argumento -> array .)
    VARIABLE_INSTANCIA reduce using rule 72 (argumento -> array .)
    VARIABLE_CLASE  reduce using rule 72 (argumento -> array .)
    IF              reduce using rule 72 (argumento -> array .)
    $end            reduce using rule 72 (argumento -> array .)
    PARENTESIS_DER  reduce using rule 72 (argumento -> array .)


state 30

    (73) argumento -> empty .

    COMA            reduce using rule 73 (argumento -> empty .)
    CORCHETE_DER    reduce using rule 73 (argumento -> empty .)
    PUTS            reduce using rule 73 (argumento -> empty .)
    CORCHETE_IZQ    reduce using rule 73 (argumento -> empty .)
    DEF             reduce using rule 73 (argumento -> empty .)
    COMENTARIO      reduce using rule 73 (argumento -> empty .)
    VARIABLE_LOCAL  reduce using rule 73 (argumento -> empty .)
    VARIABLE_GLOBAL reduce using rule 73 (argumento -> empty .)
    VARIABLE_INSTANCIA reduce using rule 73 (argumento -> empty .)
    VARIABLE_CLASE  reduce using rule 73 (argumento -> empty .)
    IF              reduce using rule 73 (argumento -> empty .)
    $end            reduce using rule 73 (argumento -> empty .)
    PARENTESIS_DER  reduce using rule 73 (argumento -> empty .)


state 31

    (66) booleano -> FALSE .

    COMA            reduce using rule 66 (booleano -> FALSE .)
    CORCHETE_DER    reduce using rule 66 (booleano -> FALSE .)
    PUTS            reduce using rule 66 (booleano -> FALSE .)
    CORCHETE_IZQ    reduce using rule 66 (booleano -> FALSE .)
    DEF             reduce using rule 66 (booleano -> FALSE .)
    COMENTARIO      reduce using rule 66 (booleano -> FALSE .)
    VARIABLE_LOCAL  reduce using rule 66 (booleano -> FALSE .)
    VARIABLE_GLOBAL reduce using rule 66 (booleano -> FALSE .)
    VARIABLE_INSTANCIA reduce using rule 66 (booleano -> FALSE .)
    VARIABLE_CLASE  reduce using rule 66 (booleano -> FALSE .)
    IF              reduce using rule 66 (booleano -> FALSE .)
    $end            reduce using rule 66 (booleano -> FALSE .)
    MAYOR_QUE       reduce using rule 66 (booleano -> FALSE .)
    MENOR_QUE       reduce using rule 66 (booleano -> FALSE .)
    IGUAL_IGUAL     reduce using rule 66 (booleano -> FALSE .)
    DIFERENTE       reduce using rule 66 (booleano -> FALSE .)
    MAYOR_IGUAL     reduce using rule 66 (booleano -> FALSE .)
    MENOR_IGUAL     reduce using rule 66 (booleano -> FALSE .)
    THEN            reduce using rule 66 (booleano -> FALSE .)
    AND             reduce using rule 66 (booleano -> FALSE .)
    OR              reduce using rule 66 (booleano -> FALSE .)
    NOT             reduce using rule 66 (booleano -> FALSE .)
    PUNTO_Y_COMA    reduce using rule 66 (booleano -> FALSE .)
    END_BLOCK       reduce using rule 66 (booleano -> FALSE .)
    ELSE            reduce using rule 66 (booleano -> FALSE .)
    ELSIF           reduce using rule 66 (booleano -> FALSE .)
    PARENTESIS_DER  reduce using rule 66 (booleano -> FALSE .)


state 32

    (67) booleano -> TRUE .

    COMA            reduce using rule 67 (booleano -> TRUE .)
    CORCHETE_DER    reduce using rule 67 (booleano -> TRUE .)
    PUTS            reduce using rule 67 (booleano -> TRUE .)
    CORCHETE_IZQ    reduce using rule 67 (booleano -> TRUE .)
    DEF             reduce using rule 67 (booleano -> TRUE .)
    COMENTARIO      reduce using rule 67 (booleano -> TRUE .)
    VARIABLE_LOCAL  reduce using rule 67 (booleano -> TRUE .)
    VARIABLE_GLOBAL reduce using rule 67 (booleano -> TRUE .)
    VARIABLE_INSTANCIA reduce using rule 67 (booleano -> TRUE .)
    VARIABLE_CLASE  reduce using rule 67 (booleano -> TRUE .)
    IF              reduce using rule 67 (booleano -> TRUE .)
    $end            reduce using rule 67 (booleano -> TRUE .)
    MAYOR_QUE       reduce using rule 67 (booleano -> TRUE .)
    MENOR_QUE       reduce using rule 67 (booleano -> TRUE .)
    IGUAL_IGUAL     reduce using rule 67 (booleano -> TRUE .)
    DIFERENTE       reduce using rule 67 (booleano -> TRUE .)
    MAYOR_IGUAL     reduce using rule 67 (booleano -> TRUE .)
    MENOR_IGUAL     reduce using rule 67 (booleano -> TRUE .)
    THEN            reduce using rule 67 (booleano -> TRUE .)
    AND             reduce using rule 67 (booleano -> TRUE .)
    OR              reduce using rule 67 (booleano -> TRUE .)
    NOT             reduce using rule 67 (booleano -> TRUE .)
    PUNTO_Y_COMA    reduce using rule 67 (booleano -> TRUE .)
    END_BLOCK       reduce using rule 67 (booleano -> TRUE .)
    ELSE            reduce using rule 67 (booleano -> TRUE .)
    ELSIF           reduce using rule 67 (booleano -> TRUE .)
    PARENTESIS_DER  reduce using rule 67 (booleano -> TRUE .)


state 33

    (83) operacionAritmetica -> valor .
    (84) operacionAritmetica -> valor . operador operacionAritmetica
    (85) operador -> . MAS
    (86) operador -> . MENOS
    (87) operador -> . MULTIPLICAR
    (88) operador -> . DIVIDIR
    (89) operador -> . MODULO
    (90) operador -> . EXPONENCIACION

    COMA            reduce using rule 83 (operacionAritmetica -> valor .)
    CORCHETE_DER    reduce using rule 83 (operacionAritmetica -> valor .)
    PUTS            reduce using rule 83 (operacionAritmetica -> valor .)
    CORCHETE_IZQ    reduce using rule 83 (operacionAritmetica -> valor .)
    DEF             reduce using rule 83 (operacionAritmetica -> valor .)
    COMENTARIO      reduce using rule 83 (operacionAritmetica -> valor .)
    VARIABLE_LOCAL  reduce using rule 83 (operacionAritmetica -> valor .)
    VARIABLE_GLOBAL reduce using rule 83 (operacionAritmetica -> valor .)
    VARIABLE_INSTANCIA reduce using rule 83 (operacionAritmetica -> valor .)
    VARIABLE_CLASE  reduce using rule 83 (operacionAritmetica -> valor .)
    IF              reduce using rule 83 (operacionAritmetica -> valor .)
    $end            reduce using rule 83 (operacionAritmetica -> valor .)
    PUNTO_Y_COMA    reduce using rule 83 (operacionAritmetica -> valor .)
    END_BLOCK       reduce using rule 83 (operacionAritmetica -> valor .)
    ELSE            reduce using rule 83 (operacionAritmetica -> valor .)
    ELSIF           reduce using rule 83 (operacionAritmetica -> valor .)
    PARENTESIS_DER  reduce using rule 83 (operacionAritmetica -> valor .)
    MAS             shift and go to state 55
    MENOS           shift and go to state 56
    MULTIPLICAR     shift and go to state 57
    DIVIDIR         shift and go to state 58
    MODULO          shift and go to state 59
    EXPONENCIACION  shift and go to state 60

    operador                       shift and go to state 54

state 34

    (79) valor -> NUMERO .

    MAS             reduce using rule 79 (valor -> NUMERO .)
    MENOS           reduce using rule 79 (valor -> NUMERO .)
    MULTIPLICAR     reduce using rule 79 (valor -> NUMERO .)
    DIVIDIR         reduce using rule 79 (valor -> NUMERO .)
    MODULO          reduce using rule 79 (valor -> NUMERO .)
    EXPONENCIACION  reduce using rule 79 (valor -> NUMERO .)
    COMA            reduce using rule 79 (valor -> NUMERO .)
    CORCHETE_DER    reduce using rule 79 (valor -> NUMERO .)
    PUTS            reduce using rule 79 (valor -> NUMERO .)
    CORCHETE_IZQ    reduce using rule 79 (valor -> NUMERO .)
    DEF             reduce using rule 79 (valor -> NUMERO .)
    COMENTARIO      reduce using rule 79 (valor -> NUMERO .)
    VARIABLE_LOCAL  reduce using rule 79 (valor -> NUMERO .)
    VARIABLE_GLOBAL reduce using rule 79 (valor -> NUMERO .)
    VARIABLE_INSTANCIA reduce using rule 79 (valor -> NUMERO .)
    VARIABLE_CLASE  reduce using rule 79 (valor -> NUMERO .)
    IF              reduce using rule 79 (valor -> NUMERO .)
    $end            reduce using rule 79 (valor -> NUMERO .)
    MAYOR_QUE       reduce using rule 79 (valor -> NUMERO .)
    MENOR_QUE       reduce using rule 79 (valor -> NUMERO .)
    IGUAL_IGUAL     reduce using rule 79 (valor -> NUMERO .)
    DIFERENTE       reduce using rule 79 (valor -> NUMERO .)
    MAYOR_IGUAL     reduce using rule 79 (valor -> NUMERO .)
    MENOR_IGUAL     reduce using rule 79 (valor -> NUMERO .)
    THEN            reduce using rule 79 (valor -> NUMERO .)
    AND             reduce using rule 79 (valor -> NUMERO .)
    OR              reduce using rule 79 (valor -> NUMERO .)
    NOT             reduce using rule 79 (valor -> NUMERO .)
    PUNTO_Y_COMA    reduce using rule 79 (valor -> NUMERO .)
    END_BLOCK       reduce using rule 79 (valor -> NUMERO .)
    ELSE            reduce using rule 79 (valor -> NUMERO .)
    ELSIF           reduce using rule 79 (valor -> NUMERO .)
    PARENTESIS_DER  reduce using rule 79 (valor -> NUMERO .)


state 35

    (80) valor -> FLOTANTE .

    MAS             reduce using rule 80 (valor -> FLOTANTE .)
    MENOS           reduce using rule 80 (valor -> FLOTANTE .)
    MULTIPLICAR     reduce using rule 80 (valor -> FLOTANTE .)
    DIVIDIR         reduce using rule 80 (valor -> FLOTANTE .)
    MODULO          reduce using rule 80 (valor -> FLOTANTE .)
    EXPONENCIACION  reduce using rule 80 (valor -> FLOTANTE .)
    COMA            reduce using rule 80 (valor -> FLOTANTE .)
    CORCHETE_DER    reduce using rule 80 (valor -> FLOTANTE .)
    PUTS            reduce using rule 80 (valor -> FLOTANTE .)
    CORCHETE_IZQ    reduce using rule 80 (valor -> FLOTANTE .)
    DEF             reduce using rule 80 (valor -> FLOTANTE .)
    COMENTARIO      reduce using rule 80 (valor -> FLOTANTE .)
    VARIABLE_LOCAL  reduce using rule 80 (valor -> FLOTANTE .)
    VARIABLE_GLOBAL reduce using rule 80 (valor -> FLOTANTE .)
    VARIABLE_INSTANCIA reduce using rule 80 (valor -> FLOTANTE .)
    VARIABLE_CLASE  reduce using rule 80 (valor -> FLOTANTE .)
    IF              reduce using rule 80 (valor -> FLOTANTE .)
    $end            reduce using rule 80 (valor -> FLOTANTE .)
    MAYOR_QUE       reduce using rule 80 (valor -> FLOTANTE .)
    MENOR_QUE       reduce using rule 80 (valor -> FLOTANTE .)
    IGUAL_IGUAL     reduce using rule 80 (valor -> FLOTANTE .)
    DIFERENTE       reduce using rule 80 (valor -> FLOTANTE .)
    MAYOR_IGUAL     reduce using rule 80 (valor -> FLOTANTE .)
    MENOR_IGUAL     reduce using rule 80 (valor -> FLOTANTE .)
    THEN            reduce using rule 80 (valor -> FLOTANTE .)
    AND             reduce using rule 80 (valor -> FLOTANTE .)
    OR              reduce using rule 80 (valor -> FLOTANTE .)
    NOT             reduce using rule 80 (valor -> FLOTANTE .)
    PUNTO_Y_COMA    reduce using rule 80 (valor -> FLOTANTE .)
    END_BLOCK       reduce using rule 80 (valor -> FLOTANTE .)
    ELSE            reduce using rule 80 (valor -> FLOTANTE .)
    ELSIF           reduce using rule 80 (valor -> FLOTANTE .)
    PARENTESIS_DER  reduce using rule 80 (valor -> FLOTANTE .)


state 36

    (81) valor -> CADENA .

    MAS             reduce using rule 81 (valor -> CADENA .)
    MENOS           reduce using rule 81 (valor -> CADENA .)
    MULTIPLICAR     reduce using rule 81 (valor -> CADENA .)
    DIVIDIR         reduce using rule 81 (valor -> CADENA .)
    MODULO          reduce using rule 81 (valor -> CADENA .)
    EXPONENCIACION  reduce using rule 81 (valor -> CADENA .)
    COMA            reduce using rule 81 (valor -> CADENA .)
    CORCHETE_DER    reduce using rule 81 (valor -> CADENA .)
    PUTS            reduce using rule 81 (valor -> CADENA .)
    CORCHETE_IZQ    reduce using rule 81 (valor -> CADENA .)
    DEF             reduce using rule 81 (valor -> CADENA .)
    COMENTARIO      reduce using rule 81 (valor -> CADENA .)
    VARIABLE_LOCAL  reduce using rule 81 (valor -> CADENA .)
    VARIABLE_GLOBAL reduce using rule 81 (valor -> CADENA .)
    VARIABLE_INSTANCIA reduce using rule 81 (valor -> CADENA .)
    VARIABLE_CLASE  reduce using rule 81 (valor -> CADENA .)
    IF              reduce using rule 81 (valor -> CADENA .)
    $end            reduce using rule 81 (valor -> CADENA .)
    MAYOR_QUE       reduce using rule 81 (valor -> CADENA .)
    MENOR_QUE       reduce using rule 81 (valor -> CADENA .)
    IGUAL_IGUAL     reduce using rule 81 (valor -> CADENA .)
    DIFERENTE       reduce using rule 81 (valor -> CADENA .)
    MAYOR_IGUAL     reduce using rule 81 (valor -> CADENA .)
    MENOR_IGUAL     reduce using rule 81 (valor -> CADENA .)
    THEN            reduce using rule 81 (valor -> CADENA .)
    AND             reduce using rule 81 (valor -> CADENA .)
    OR              reduce using rule 81 (valor -> CADENA .)
    NOT             reduce using rule 81 (valor -> CADENA .)
    PUNTO_Y_COMA    reduce using rule 81 (valor -> CADENA .)
    END_BLOCK       reduce using rule 81 (valor -> CADENA .)
    ELSE            reduce using rule 81 (valor -> CADENA .)
    ELSIF           reduce using rule 81 (valor -> CADENA .)
    PARENTESIS_DER  reduce using rule 81 (valor -> CADENA .)


state 37

    (82) valor -> variable .

    MAS             reduce using rule 82 (valor -> variable .)
    MENOS           reduce using rule 82 (valor -> variable .)
    MULTIPLICAR     reduce using rule 82 (valor -> variable .)
    DIVIDIR         reduce using rule 82 (valor -> variable .)
    MODULO          reduce using rule 82 (valor -> variable .)
    EXPONENCIACION  reduce using rule 82 (valor -> variable .)
    COMA            reduce using rule 82 (valor -> variable .)
    CORCHETE_DER    reduce using rule 82 (valor -> variable .)
    PUTS            reduce using rule 82 (valor -> variable .)
    CORCHETE_IZQ    reduce using rule 82 (valor -> variable .)
    DEF             reduce using rule 82 (valor -> variable .)
    COMENTARIO      reduce using rule 82 (valor -> variable .)
    VARIABLE_LOCAL  reduce using rule 82 (valor -> variable .)
    VARIABLE_GLOBAL reduce using rule 82 (valor -> variable .)
    VARIABLE_INSTANCIA reduce using rule 82 (valor -> variable .)
    VARIABLE_CLASE  reduce using rule 82 (valor -> variable .)
    IF              reduce using rule 82 (valor -> variable .)
    $end            reduce using rule 82 (valor -> variable .)
    MAYOR_QUE       reduce using rule 82 (valor -> variable .)
    MENOR_QUE       reduce using rule 82 (valor -> variable .)
    IGUAL_IGUAL     reduce using rule 82 (valor -> variable .)
    DIFERENTE       reduce using rule 82 (valor -> variable .)
    MAYOR_IGUAL     reduce using rule 82 (valor -> variable .)
    MENOR_IGUAL     reduce using rule 82 (valor -> variable .)
    THEN            reduce using rule 82 (valor -> variable .)
    AND             reduce using rule 82 (valor -> variable .)
    OR              reduce using rule 82 (valor -> variable .)
    NOT             reduce using rule 82 (valor -> variable .)
    PUNTO_Y_COMA    reduce using rule 82 (valor -> variable .)
    END_BLOCK       reduce using rule 82 (valor -> variable .)
    ELSE            reduce using rule 82 (valor -> variable .)
    ELSIF           reduce using rule 82 (valor -> variable .)
    PARENTESIS_DER  reduce using rule 82 (valor -> variable .)


state 38

    (30) funcion -> DEF VARIABLE_LOCAL . PARENTESIS_IZQ parametros PARENTESIS_DER instrucciones END_BLOCK
    (97) funcion -> DEF VARIABLE_LOCAL . PARENTESIS_IZQ parametros_defecto PARENTESIS_DER instrucciones END_BLOCK

    PARENTESIS_IZQ  shift and go to state 61


state 39

    (13) comentario -> COMENTARIO argumento .

    PUTS            reduce using rule 13 (comentario -> COMENTARIO argumento .)
    CORCHETE_IZQ    reduce using rule 13 (comentario -> COMENTARIO argumento .)
    DEF             reduce using rule 13 (comentario -> COMENTARIO argumento .)
    COMENTARIO      reduce using rule 13 (comentario -> COMENTARIO argumento .)
    VARIABLE_LOCAL  reduce using rule 13 (comentario -> COMENTARIO argumento .)
    VARIABLE_GLOBAL reduce using rule 13 (comentario -> COMENTARIO argumento .)
    VARIABLE_INSTANCIA reduce using rule 13 (comentario -> COMENTARIO argumento .)
    VARIABLE_CLASE  reduce using rule 13 (comentario -> COMENTARIO argumento .)
    IF              reduce using rule 13 (comentario -> COMENTARIO argumento .)
    $end            reduce using rule 13 (comentario -> COMENTARIO argumento .)


state 40

    (18) if -> IF expresion . instrucciones END_BLOCK
    (19) if -> IF expresion . THEN instrucciones END_BLOCK
    (20) if_else -> IF expresion . instrucciones ELSE instrucciones END_BLOCK
    (21) if_else -> IF expresion . THEN instrucciones ELSE instrucciones END_BLOCK
    (22) if_elsif_else -> IF expresion . instrucciones elsif_clauses END_BLOCK
    (23) if_elsif_else -> IF expresion . THEN instrucciones elsif_clauses END_BLOCK
    (24) if_elsif_else -> IF expresion . instrucciones elsif_clauses ELSE instrucciones END_BLOCK
    (25) if_elsif_else -> IF expresion . THEN instrucciones elsif_clauses ELSE instrucciones END_BLOCK
    (37) expresion -> expresion . comparadores expresion
    (40) expresion -> expresion . operador_logico expresion
    (52) instrucciones -> . instruccion
    (53) instrucciones -> . instruccion instrucciones
    (54) instrucciones -> . instruccion PUNTO_Y_COMA instrucciones
    (41) comparadores -> . MAYOR_QUE
    (42) comparadores -> . MENOR_QUE
    (43) comparadores -> . IGUAL_IGUAL
    (44) comparadores -> . DIFERENTE
    (45) comparadores -> . MAYOR_IGUAL
    (46) comparadores -> . MENOR_IGUAL
    (47) operador_logico -> . AND
    (48) operador_logico -> . OR
    (49) operador_logico -> . NOT
    (55) instruccion -> . asignacion
    (56) instruccion -> . impresion
    (57) instruccion -> . condicion
    (58) instruccion -> . llamada_funcion
    (59) instruccion -> . funcion
    (9) asignacion -> . variable ASIGNACION valores
    (11) impresion -> . PUTS PARENTESIS_IZQ argumentos PARENTESIS_DER
    (12) impresion -> . PUTS
    (15) condicion -> . if
    (16) condicion -> . if_else
    (17) condicion -> . if_elsif_else
    (60) llamada_funcion -> . VARIABLE_LOCAL PARENTESIS_IZQ argumentos PARENTESIS_DER
    (61) llamada_funcion -> . VARIABLE_LOCAL PARENTESIS_IZQ PARENTESIS_DER
    (30) funcion -> . DEF VARIABLE_LOCAL PARENTESIS_IZQ parametros PARENTESIS_DER instrucciones END_BLOCK
    (97) funcion -> . DEF VARIABLE_LOCAL PARENTESIS_IZQ parametros_defecto PARENTESIS_DER instrucciones END_BLOCK
    (62) variable -> . VARIABLE_LOCAL
    (63) variable -> . VARIABLE_GLOBAL
    (64) variable -> . VARIABLE_INSTANCIA
    (65) variable -> . VARIABLE_CLASE
    (18) if -> . IF expresion instrucciones END_BLOCK
    (19) if -> . IF expresion THEN instrucciones END_BLOCK
    (20) if_else -> . IF expresion instrucciones ELSE instrucciones END_BLOCK
    (21) if_else -> . IF expresion THEN instrucciones ELSE instrucciones END_BLOCK
    (22) if_elsif_else -> . IF expresion instrucciones elsif_clauses END_BLOCK
    (23) if_elsif_else -> . IF expresion THEN instrucciones elsif_clauses END_BLOCK
    (24) if_elsif_else -> . IF expresion instrucciones elsif_clauses ELSE instrucciones END_BLOCK
    (25) if_elsif_else -> . IF expresion THEN instrucciones elsif_clauses ELSE instrucciones END_BLOCK

    THEN            shift and go to state 63
    MAYOR_QUE       shift and go to state 67
    MENOR_QUE       shift and go to state 68
    IGUAL_IGUAL     shift and go to state 69
    DIFERENTE       shift and go to state 70
    MAYOR_IGUAL     shift and go to state 71
    MENOR_IGUAL     shift and go to state 72
    AND             shift and go to state 73
    OR              shift and go to state 74
    NOT             shift and go to state 75
    PUTS            shift and go to state 10
    VARIABLE_LOCAL  shift and go to state 81
    DEF             shift and go to state 15
    VARIABLE_GLOBAL shift and go to state 18
    VARIABLE_INSTANCIA shift and go to state 19
    VARIABLE_CLASE  shift and go to state 20
    IF              shift and go to state 21

    instrucciones                  shift and go to state 62
    comparadores                   shift and go to state 64
    operador_logico                shift and go to state 65
    instruccion                    shift and go to state 66
    asignacion                     shift and go to state 76
    impresion                      shift and go to state 77
    condicion                      shift and go to state 78
    llamada_funcion                shift and go to state 79
    funcion                        shift and go to state 80
    variable                       shift and go to state 9
    if                             shift and go to state 12
    if_else                        shift and go to state 13
    if_elsif_else                  shift and go to state 14

state 41

    (35) expresion -> var_expresion .
    (36) expresion -> var_expresion . comparadores var_expresion
    (41) comparadores -> . MAYOR_QUE
    (42) comparadores -> . MENOR_QUE
    (43) comparadores -> . IGUAL_IGUAL
    (44) comparadores -> . DIFERENTE
    (45) comparadores -> . MAYOR_IGUAL
    (46) comparadores -> . MENOR_IGUAL

  ! shift/reduce conflict for MAYOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_QUE resolved as shift
  ! shift/reduce conflict for IGUAL_IGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for MAYOR_IGUAL resolved as shift
  ! shift/reduce conflict for MENOR_IGUAL resolved as shift
    THEN            reduce using rule 35 (expresion -> var_expresion .)
    AND             reduce using rule 35 (expresion -> var_expresion .)
    OR              reduce using rule 35 (expresion -> var_expresion .)
    NOT             reduce using rule 35 (expresion -> var_expresion .)
    PUTS            reduce using rule 35 (expresion -> var_expresion .)
    VARIABLE_LOCAL  reduce using rule 35 (expresion -> var_expresion .)
    DEF             reduce using rule 35 (expresion -> var_expresion .)
    VARIABLE_GLOBAL reduce using rule 35 (expresion -> var_expresion .)
    VARIABLE_INSTANCIA reduce using rule 35 (expresion -> var_expresion .)
    VARIABLE_CLASE  reduce using rule 35 (expresion -> var_expresion .)
    IF              reduce using rule 35 (expresion -> var_expresion .)
    PARENTESIS_DER  reduce using rule 35 (expresion -> var_expresion .)
    MAYOR_QUE       shift and go to state 67
    MENOR_QUE       shift and go to state 68
    IGUAL_IGUAL     shift and go to state 69
    DIFERENTE       shift and go to state 70
    MAYOR_IGUAL     shift and go to state 71
    MENOR_IGUAL     shift and go to state 72

  ! MAYOR_QUE       [ reduce using rule 35 (expresion -> var_expresion .) ]
  ! MENOR_QUE       [ reduce using rule 35 (expresion -> var_expresion .) ]
  ! IGUAL_IGUAL     [ reduce using rule 35 (expresion -> var_expresion .) ]
  ! DIFERENTE       [ reduce using rule 35 (expresion -> var_expresion .) ]
  ! MAYOR_IGUAL     [ reduce using rule 35 (expresion -> var_expresion .) ]
  ! MENOR_IGUAL     [ reduce using rule 35 (expresion -> var_expresion .) ]

    comparadores                   shift and go to state 82

state 42

    (38) expresion -> PARENTESIS_IZQ . expresion PARENTESIS_DER
    (35) expresion -> . var_expresion
    (36) expresion -> . var_expresion comparadores var_expresion
    (37) expresion -> . expresion comparadores expresion
    (38) expresion -> . PARENTESIS_IZQ expresion PARENTESIS_DER
    (39) expresion -> . NOT_BLOCK expresion
    (40) expresion -> . expresion operador_logico expresion
    (50) var_expresion -> . valor
    (51) var_expresion -> . booleano
    (79) valor -> . NUMERO
    (80) valor -> . FLOTANTE
    (81) valor -> . CADENA
    (82) valor -> . variable
    (66) booleano -> . FALSE
    (67) booleano -> . TRUE
    (62) variable -> . VARIABLE_LOCAL
    (63) variable -> . VARIABLE_GLOBAL
    (64) variable -> . VARIABLE_INSTANCIA
    (65) variable -> . VARIABLE_CLASE

    PARENTESIS_IZQ  shift and go to state 42
    NOT_BLOCK       shift and go to state 43
    NUMERO          shift and go to state 34
    FLOTANTE        shift and go to state 35
    CADENA          shift and go to state 36
    FALSE           shift and go to state 31
    TRUE            shift and go to state 32
    VARIABLE_LOCAL  shift and go to state 16
    VARIABLE_GLOBAL shift and go to state 18
    VARIABLE_INSTANCIA shift and go to state 19
    VARIABLE_CLASE  shift and go to state 20

    expresion                      shift and go to state 83
    var_expresion                  shift and go to state 41
    valor                          shift and go to state 44
    booleano                       shift and go to state 45
    variable                       shift and go to state 37

state 43

    (39) expresion -> NOT_BLOCK . expresion
    (35) expresion -> . var_expresion
    (36) expresion -> . var_expresion comparadores var_expresion
    (37) expresion -> . expresion comparadores expresion
    (38) expresion -> . PARENTESIS_IZQ expresion PARENTESIS_DER
    (39) expresion -> . NOT_BLOCK expresion
    (40) expresion -> . expresion operador_logico expresion
    (50) var_expresion -> . valor
    (51) var_expresion -> . booleano
    (79) valor -> . NUMERO
    (80) valor -> . FLOTANTE
    (81) valor -> . CADENA
    (82) valor -> . variable
    (66) booleano -> . FALSE
    (67) booleano -> . TRUE
    (62) variable -> . VARIABLE_LOCAL
    (63) variable -> . VARIABLE_GLOBAL
    (64) variable -> . VARIABLE_INSTANCIA
    (65) variable -> . VARIABLE_CLASE

    PARENTESIS_IZQ  shift and go to state 42
    NOT_BLOCK       shift and go to state 43
    NUMERO          shift and go to state 34
    FLOTANTE        shift and go to state 35
    CADENA          shift and go to state 36
    FALSE           shift and go to state 31
    TRUE            shift and go to state 32
    VARIABLE_LOCAL  shift and go to state 16
    VARIABLE_GLOBAL shift and go to state 18
    VARIABLE_INSTANCIA shift and go to state 19
    VARIABLE_CLASE  shift and go to state 20

    expresion                      shift and go to state 84
    var_expresion                  shift and go to state 41
    valor                          shift and go to state 44
    booleano                       shift and go to state 45
    variable                       shift and go to state 37

state 44

    (50) var_expresion -> valor .

    MAYOR_QUE       reduce using rule 50 (var_expresion -> valor .)
    MENOR_QUE       reduce using rule 50 (var_expresion -> valor .)
    IGUAL_IGUAL     reduce using rule 50 (var_expresion -> valor .)
    DIFERENTE       reduce using rule 50 (var_expresion -> valor .)
    MAYOR_IGUAL     reduce using rule 50 (var_expresion -> valor .)
    MENOR_IGUAL     reduce using rule 50 (var_expresion -> valor .)
    THEN            reduce using rule 50 (var_expresion -> valor .)
    AND             reduce using rule 50 (var_expresion -> valor .)
    OR              reduce using rule 50 (var_expresion -> valor .)
    NOT             reduce using rule 50 (var_expresion -> valor .)
    PUTS            reduce using rule 50 (var_expresion -> valor .)
    VARIABLE_LOCAL  reduce using rule 50 (var_expresion -> valor .)
    DEF             reduce using rule 50 (var_expresion -> valor .)
    VARIABLE_GLOBAL reduce using rule 50 (var_expresion -> valor .)
    VARIABLE_INSTANCIA reduce using rule 50 (var_expresion -> valor .)
    VARIABLE_CLASE  reduce using rule 50 (var_expresion -> valor .)
    IF              reduce using rule 50 (var_expresion -> valor .)
    PARENTESIS_DER  reduce using rule 50 (var_expresion -> valor .)


state 45

    (51) var_expresion -> booleano .

    MAYOR_QUE       reduce using rule 51 (var_expresion -> booleano .)
    MENOR_QUE       reduce using rule 51 (var_expresion -> booleano .)
    IGUAL_IGUAL     reduce using rule 51 (var_expresion -> booleano .)
    DIFERENTE       reduce using rule 51 (var_expresion -> booleano .)
    MAYOR_IGUAL     reduce using rule 51 (var_expresion -> booleano .)
    MENOR_IGUAL     reduce using rule 51 (var_expresion -> booleano .)
    THEN            reduce using rule 51 (var_expresion -> booleano .)
    AND             reduce using rule 51 (var_expresion -> booleano .)
    OR              reduce using rule 51 (var_expresion -> booleano .)
    NOT             reduce using rule 51 (var_expresion -> booleano .)
    PUTS            reduce using rule 51 (var_expresion -> booleano .)
    VARIABLE_LOCAL  reduce using rule 51 (var_expresion -> booleano .)
    DEF             reduce using rule 51 (var_expresion -> booleano .)
    VARIABLE_GLOBAL reduce using rule 51 (var_expresion -> booleano .)
    VARIABLE_INSTANCIA reduce using rule 51 (var_expresion -> booleano .)
    VARIABLE_CLASE  reduce using rule 51 (var_expresion -> booleano .)
    IF              reduce using rule 51 (var_expresion -> booleano .)
    PARENTESIS_DER  reduce using rule 51 (var_expresion -> booleano .)


state 46

    (9) asignacion -> variable ASIGNACION valores .

    PUTS            reduce using rule 9 (asignacion -> variable ASIGNACION valores .)
    CORCHETE_IZQ    reduce using rule 9 (asignacion -> variable ASIGNACION valores .)
    DEF             reduce using rule 9 (asignacion -> variable ASIGNACION valores .)
    COMENTARIO      reduce using rule 9 (asignacion -> variable ASIGNACION valores .)
    VARIABLE_LOCAL  reduce using rule 9 (asignacion -> variable ASIGNACION valores .)
    VARIABLE_GLOBAL reduce using rule 9 (asignacion -> variable ASIGNACION valores .)
    VARIABLE_INSTANCIA reduce using rule 9 (asignacion -> variable ASIGNACION valores .)
    VARIABLE_CLASE  reduce using rule 9 (asignacion -> variable ASIGNACION valores .)
    IF              reduce using rule 9 (asignacion -> variable ASIGNACION valores .)
    $end            reduce using rule 9 (asignacion -> variable ASIGNACION valores .)
    PUNTO_Y_COMA    reduce using rule 9 (asignacion -> variable ASIGNACION valores .)
    END_BLOCK       reduce using rule 9 (asignacion -> variable ASIGNACION valores .)
    ELSE            reduce using rule 9 (asignacion -> variable ASIGNACION valores .)
    ELSIF           reduce using rule 9 (asignacion -> variable ASIGNACION valores .)


state 47

    (75) valores -> operacionAritmetica .

    PUTS            reduce using rule 75 (valores -> operacionAritmetica .)
    CORCHETE_IZQ    reduce using rule 75 (valores -> operacionAritmetica .)
    DEF             reduce using rule 75 (valores -> operacionAritmetica .)
    COMENTARIO      reduce using rule 75 (valores -> operacionAritmetica .)
    VARIABLE_LOCAL  reduce using rule 75 (valores -> operacionAritmetica .)
    VARIABLE_GLOBAL reduce using rule 75 (valores -> operacionAritmetica .)
    VARIABLE_INSTANCIA reduce using rule 75 (valores -> operacionAritmetica .)
    VARIABLE_CLASE  reduce using rule 75 (valores -> operacionAritmetica .)
    IF              reduce using rule 75 (valores -> operacionAritmetica .)
    $end            reduce using rule 75 (valores -> operacionAritmetica .)
    PUNTO_Y_COMA    reduce using rule 75 (valores -> operacionAritmetica .)
    END_BLOCK       reduce using rule 75 (valores -> operacionAritmetica .)
    ELSE            reduce using rule 75 (valores -> operacionAritmetica .)
    ELSIF           reduce using rule 75 (valores -> operacionAritmetica .)


state 48

    (76) valores -> SIMBOLO .

    PUTS            reduce using rule 76 (valores -> SIMBOLO .)
    CORCHETE_IZQ    reduce using rule 76 (valores -> SIMBOLO .)
    DEF             reduce using rule 76 (valores -> SIMBOLO .)
    COMENTARIO      reduce using rule 76 (valores -> SIMBOLO .)
    VARIABLE_LOCAL  reduce using rule 76 (valores -> SIMBOLO .)
    VARIABLE_GLOBAL reduce using rule 76 (valores -> SIMBOLO .)
    VARIABLE_INSTANCIA reduce using rule 76 (valores -> SIMBOLO .)
    VARIABLE_CLASE  reduce using rule 76 (valores -> SIMBOLO .)
    IF              reduce using rule 76 (valores -> SIMBOLO .)
    $end            reduce using rule 76 (valores -> SIMBOLO .)
    PUNTO_Y_COMA    reduce using rule 76 (valores -> SIMBOLO .)
    END_BLOCK       reduce using rule 76 (valores -> SIMBOLO .)
    ELSE            reduce using rule 76 (valores -> SIMBOLO .)
    ELSIF           reduce using rule 76 (valores -> SIMBOLO .)


state 49

    (77) valores -> booleano .

    PUTS            reduce using rule 77 (valores -> booleano .)
    CORCHETE_IZQ    reduce using rule 77 (valores -> booleano .)
    DEF             reduce using rule 77 (valores -> booleano .)
    COMENTARIO      reduce using rule 77 (valores -> booleano .)
    VARIABLE_LOCAL  reduce using rule 77 (valores -> booleano .)
    VARIABLE_GLOBAL reduce using rule 77 (valores -> booleano .)
    VARIABLE_INSTANCIA reduce using rule 77 (valores -> booleano .)
    VARIABLE_CLASE  reduce using rule 77 (valores -> booleano .)
    IF              reduce using rule 77 (valores -> booleano .)
    $end            reduce using rule 77 (valores -> booleano .)
    PUNTO_Y_COMA    reduce using rule 77 (valores -> booleano .)
    END_BLOCK       reduce using rule 77 (valores -> booleano .)
    ELSE            reduce using rule 77 (valores -> booleano .)
    ELSIF           reduce using rule 77 (valores -> booleano .)


state 50

    (78) valores -> array .

    PUTS            reduce using rule 78 (valores -> array .)
    CORCHETE_IZQ    reduce using rule 78 (valores -> array .)
    DEF             reduce using rule 78 (valores -> array .)
    COMENTARIO      reduce using rule 78 (valores -> array .)
    VARIABLE_LOCAL  reduce using rule 78 (valores -> array .)
    VARIABLE_GLOBAL reduce using rule 78 (valores -> array .)
    VARIABLE_INSTANCIA reduce using rule 78 (valores -> array .)
    VARIABLE_CLASE  reduce using rule 78 (valores -> array .)
    IF              reduce using rule 78 (valores -> array .)
    $end            reduce using rule 78 (valores -> array .)
    PUNTO_Y_COMA    reduce using rule 78 (valores -> array .)
    END_BLOCK       reduce using rule 78 (valores -> array .)
    ELSE            reduce using rule 78 (valores -> array .)
    ELSIF           reduce using rule 78 (valores -> array .)


state 51

    (11) impresion -> PUTS PARENTESIS_IZQ argumentos . PARENTESIS_DER

    PARENTESIS_DER  shift and go to state 85


state 52

    (14) array -> CORCHETE_IZQ argumentos CORCHETE_DER .

    PUTS            reduce using rule 14 (array -> CORCHETE_IZQ argumentos CORCHETE_DER .)
    CORCHETE_IZQ    reduce using rule 14 (array -> CORCHETE_IZQ argumentos CORCHETE_DER .)
    DEF             reduce using rule 14 (array -> CORCHETE_IZQ argumentos CORCHETE_DER .)
    COMENTARIO      reduce using rule 14 (array -> CORCHETE_IZQ argumentos CORCHETE_DER .)
    VARIABLE_LOCAL  reduce using rule 14 (array -> CORCHETE_IZQ argumentos CORCHETE_DER .)
    VARIABLE_GLOBAL reduce using rule 14 (array -> CORCHETE_IZQ argumentos CORCHETE_DER .)
    VARIABLE_INSTANCIA reduce using rule 14 (array -> CORCHETE_IZQ argumentos CORCHETE_DER .)
    VARIABLE_CLASE  reduce using rule 14 (array -> CORCHETE_IZQ argumentos CORCHETE_DER .)
    IF              reduce using rule 14 (array -> CORCHETE_IZQ argumentos CORCHETE_DER .)
    $end            reduce using rule 14 (array -> CORCHETE_IZQ argumentos CORCHETE_DER .)
    COMA            reduce using rule 14 (array -> CORCHETE_IZQ argumentos CORCHETE_DER .)
    CORCHETE_DER    reduce using rule 14 (array -> CORCHETE_IZQ argumentos CORCHETE_DER .)
    PUNTO_Y_COMA    reduce using rule 14 (array -> CORCHETE_IZQ argumentos CORCHETE_DER .)
    END_BLOCK       reduce using rule 14 (array -> CORCHETE_IZQ argumentos CORCHETE_DER .)
    ELSE            reduce using rule 14 (array -> CORCHETE_IZQ argumentos CORCHETE_DER .)
    ELSIF           reduce using rule 14 (array -> CORCHETE_IZQ argumentos CORCHETE_DER .)
    PARENTESIS_DER  reduce using rule 14 (array -> CORCHETE_IZQ argumentos CORCHETE_DER .)


state 53

    (69) argumentos -> argumento COMA . argumentos
    (68) argumentos -> . argumento
    (69) argumentos -> . argumento COMA argumentos
    (70) argumento -> . booleano
    (71) argumento -> . operacionAritmetica
    (72) argumento -> . array
    (73) argumento -> . empty
    (66) booleano -> . FALSE
    (67) booleano -> . TRUE
    (83) operacionAritmetica -> . valor
    (84) operacionAritmetica -> . valor operador operacionAritmetica
    (14) array -> . CORCHETE_IZQ argumentos CORCHETE_DER
    (74) empty -> .
    (79) valor -> . NUMERO
    (80) valor -> . FLOTANTE
    (81) valor -> . CADENA
    (82) valor -> . variable
    (62) variable -> . VARIABLE_LOCAL
    (63) variable -> . VARIABLE_GLOBAL
    (64) variable -> . VARIABLE_INSTANCIA
    (65) variable -> . VARIABLE_CLASE

    FALSE           shift and go to state 31
    TRUE            shift and go to state 32
    CORCHETE_IZQ    shift and go to state 11
    COMA            reduce using rule 74 (empty -> .)
    CORCHETE_DER    reduce using rule 74 (empty -> .)
    PARENTESIS_DER  reduce using rule 74 (empty -> .)
    NUMERO          shift and go to state 34
    FLOTANTE        shift and go to state 35
    CADENA          shift and go to state 36
    VARIABLE_LOCAL  shift and go to state 16
    VARIABLE_GLOBAL shift and go to state 18
    VARIABLE_INSTANCIA shift and go to state 19
    VARIABLE_CLASE  shift and go to state 20

    argumento                      shift and go to state 26
    argumentos                     shift and go to state 86
    booleano                       shift and go to state 27
    operacionAritmetica            shift and go to state 28
    array                          shift and go to state 29
    empty                          shift and go to state 30
    valor                          shift and go to state 33
    variable                       shift and go to state 37

state 54

    (84) operacionAritmetica -> valor operador . operacionAritmetica
    (83) operacionAritmetica -> . valor
    (84) operacionAritmetica -> . valor operador operacionAritmetica
    (79) valor -> . NUMERO
    (80) valor -> . FLOTANTE
    (81) valor -> . CADENA
    (82) valor -> . variable
    (62) variable -> . VARIABLE_LOCAL
    (63) variable -> . VARIABLE_GLOBAL
    (64) variable -> . VARIABLE_INSTANCIA
    (65) variable -> . VARIABLE_CLASE

    NUMERO          shift and go to state 34
    FLOTANTE        shift and go to state 35
    CADENA          shift and go to state 36
    VARIABLE_LOCAL  shift and go to state 16
    VARIABLE_GLOBAL shift and go to state 18
    VARIABLE_INSTANCIA shift and go to state 19
    VARIABLE_CLASE  shift and go to state 20

    valor                          shift and go to state 33
    operacionAritmetica            shift and go to state 87
    variable                       shift and go to state 37

state 55

    (85) operador -> MAS .

    NUMERO          reduce using rule 85 (operador -> MAS .)
    FLOTANTE        reduce using rule 85 (operador -> MAS .)
    CADENA          reduce using rule 85 (operador -> MAS .)
    VARIABLE_LOCAL  reduce using rule 85 (operador -> MAS .)
    VARIABLE_GLOBAL reduce using rule 85 (operador -> MAS .)
    VARIABLE_INSTANCIA reduce using rule 85 (operador -> MAS .)
    VARIABLE_CLASE  reduce using rule 85 (operador -> MAS .)


state 56

    (86) operador -> MENOS .

    NUMERO          reduce using rule 86 (operador -> MENOS .)
    FLOTANTE        reduce using rule 86 (operador -> MENOS .)
    CADENA          reduce using rule 86 (operador -> MENOS .)
    VARIABLE_LOCAL  reduce using rule 86 (operador -> MENOS .)
    VARIABLE_GLOBAL reduce using rule 86 (operador -> MENOS .)
    VARIABLE_INSTANCIA reduce using rule 86 (operador -> MENOS .)
    VARIABLE_CLASE  reduce using rule 86 (operador -> MENOS .)


state 57

    (87) operador -> MULTIPLICAR .

    NUMERO          reduce using rule 87 (operador -> MULTIPLICAR .)
    FLOTANTE        reduce using rule 87 (operador -> MULTIPLICAR .)
    CADENA          reduce using rule 87 (operador -> MULTIPLICAR .)
    VARIABLE_LOCAL  reduce using rule 87 (operador -> MULTIPLICAR .)
    VARIABLE_GLOBAL reduce using rule 87 (operador -> MULTIPLICAR .)
    VARIABLE_INSTANCIA reduce using rule 87 (operador -> MULTIPLICAR .)
    VARIABLE_CLASE  reduce using rule 87 (operador -> MULTIPLICAR .)


state 58

    (88) operador -> DIVIDIR .

    NUMERO          reduce using rule 88 (operador -> DIVIDIR .)
    FLOTANTE        reduce using rule 88 (operador -> DIVIDIR .)
    CADENA          reduce using rule 88 (operador -> DIVIDIR .)
    VARIABLE_LOCAL  reduce using rule 88 (operador -> DIVIDIR .)
    VARIABLE_GLOBAL reduce using rule 88 (operador -> DIVIDIR .)
    VARIABLE_INSTANCIA reduce using rule 88 (operador -> DIVIDIR .)
    VARIABLE_CLASE  reduce using rule 88 (operador -> DIVIDIR .)


state 59

    (89) operador -> MODULO .

    NUMERO          reduce using rule 89 (operador -> MODULO .)
    FLOTANTE        reduce using rule 89 (operador -> MODULO .)
    CADENA          reduce using rule 89 (operador -> MODULO .)
    VARIABLE_LOCAL  reduce using rule 89 (operador -> MODULO .)
    VARIABLE_GLOBAL reduce using rule 89 (operador -> MODULO .)
    VARIABLE_INSTANCIA reduce using rule 89 (operador -> MODULO .)
    VARIABLE_CLASE  reduce using rule 89 (operador -> MODULO .)


state 60

    (90) operador -> EXPONENCIACION .

    NUMERO          reduce using rule 90 (operador -> EXPONENCIACION .)
    FLOTANTE        reduce using rule 90 (operador -> EXPONENCIACION .)
    CADENA          reduce using rule 90 (operador -> EXPONENCIACION .)
    VARIABLE_LOCAL  reduce using rule 90 (operador -> EXPONENCIACION .)
    VARIABLE_GLOBAL reduce using rule 90 (operador -> EXPONENCIACION .)
    VARIABLE_INSTANCIA reduce using rule 90 (operador -> EXPONENCIACION .)
    VARIABLE_CLASE  reduce using rule 90 (operador -> EXPONENCIACION .)


state 61

    (30) funcion -> DEF VARIABLE_LOCAL PARENTESIS_IZQ . parametros PARENTESIS_DER instrucciones END_BLOCK
    (97) funcion -> DEF VARIABLE_LOCAL PARENTESIS_IZQ . parametros_defecto PARENTESIS_DER instrucciones END_BLOCK
    (31) parametros -> . parametro
    (32) parametros -> . parametro COMA parametros
    (98) parametros_defecto -> . parametro_defecto
    (99) parametros_defecto -> . parametro_defecto COMA parametros_defecto
    (33) parametro -> . VARIABLE_LOCAL
    (34) parametro -> . empty
    (100) parametro_defecto -> . VARIABLE_LOCAL
    (101) parametro_defecto -> . VARIABLE_LOCAL ASIGNACION valor
    (74) empty -> .

    VARIABLE_LOCAL  shift and go to state 88
    COMA            reduce using rule 74 (empty -> .)
    PARENTESIS_DER  reduce using rule 74 (empty -> .)

    parametros                     shift and go to state 89
    parametros_defecto             shift and go to state 90
    parametro                      shift and go to state 91
    parametro_defecto              shift and go to state 92
    empty                          shift and go to state 93

state 62

    (18) if -> IF expresion instrucciones . END_BLOCK
    (20) if_else -> IF expresion instrucciones . ELSE instrucciones END_BLOCK
    (22) if_elsif_else -> IF expresion instrucciones . elsif_clauses END_BLOCK
    (24) if_elsif_else -> IF expresion instrucciones . elsif_clauses ELSE instrucciones END_BLOCK
    (26) elsif_clauses -> . ELSIF expresion instrucciones
    (27) elsif_clauses -> . ELSIF expresion THEN instrucciones
    (28) elsif_clauses -> . ELSIF expresion instrucciones elsif_clauses
    (29) elsif_clauses -> . ELSIF expresion THEN instrucciones elsif_clauses

    END_BLOCK       shift and go to state 94
    ELSE            shift and go to state 95
    ELSIF           shift and go to state 97

    elsif_clauses                  shift and go to state 96

state 63

    (19) if -> IF expresion THEN . instrucciones END_BLOCK
    (21) if_else -> IF expresion THEN . instrucciones ELSE instrucciones END_BLOCK
    (23) if_elsif_else -> IF expresion THEN . instrucciones elsif_clauses END_BLOCK
    (25) if_elsif_else -> IF expresion THEN . instrucciones elsif_clauses ELSE instrucciones END_BLOCK
    (52) instrucciones -> . instruccion
    (53) instrucciones -> . instruccion instrucciones
    (54) instrucciones -> . instruccion PUNTO_Y_COMA instrucciones
    (55) instruccion -> . asignacion
    (56) instruccion -> . impresion
    (57) instruccion -> . condicion
    (58) instruccion -> . llamada_funcion
    (59) instruccion -> . funcion
    (9) asignacion -> . variable ASIGNACION valores
    (11) impresion -> . PUTS PARENTESIS_IZQ argumentos PARENTESIS_DER
    (12) impresion -> . PUTS
    (15) condicion -> . if
    (16) condicion -> . if_else
    (17) condicion -> . if_elsif_else
    (60) llamada_funcion -> . VARIABLE_LOCAL PARENTESIS_IZQ argumentos PARENTESIS_DER
    (61) llamada_funcion -> . VARIABLE_LOCAL PARENTESIS_IZQ PARENTESIS_DER
    (30) funcion -> . DEF VARIABLE_LOCAL PARENTESIS_IZQ parametros PARENTESIS_DER instrucciones END_BLOCK
    (97) funcion -> . DEF VARIABLE_LOCAL PARENTESIS_IZQ parametros_defecto PARENTESIS_DER instrucciones END_BLOCK
    (62) variable -> . VARIABLE_LOCAL
    (63) variable -> . VARIABLE_GLOBAL
    (64) variable -> . VARIABLE_INSTANCIA
    (65) variable -> . VARIABLE_CLASE
    (18) if -> . IF expresion instrucciones END_BLOCK
    (19) if -> . IF expresion THEN instrucciones END_BLOCK
    (20) if_else -> . IF expresion instrucciones ELSE instrucciones END_BLOCK
    (21) if_else -> . IF expresion THEN instrucciones ELSE instrucciones END_BLOCK
    (22) if_elsif_else -> . IF expresion instrucciones elsif_clauses END_BLOCK
    (23) if_elsif_else -> . IF expresion THEN instrucciones elsif_clauses END_BLOCK
    (24) if_elsif_else -> . IF expresion instrucciones elsif_clauses ELSE instrucciones END_BLOCK
    (25) if_elsif_else -> . IF expresion THEN instrucciones elsif_clauses ELSE instrucciones END_BLOCK

    PUTS            shift and go to state 10
    VARIABLE_LOCAL  shift and go to state 81
    DEF             shift and go to state 15
    VARIABLE_GLOBAL shift and go to state 18
    VARIABLE_INSTANCIA shift and go to state 19
    VARIABLE_CLASE  shift and go to state 20
    IF              shift and go to state 21

    instrucciones                  shift and go to state 98
    instruccion                    shift and go to state 66
    asignacion                     shift and go to state 76
    impresion                      shift and go to state 77
    condicion                      shift and go to state 78
    llamada_funcion                shift and go to state 79
    funcion                        shift and go to state 80
    variable                       shift and go to state 9
    if                             shift and go to state 12
    if_else                        shift and go to state 13
    if_elsif_else                  shift and go to state 14

state 64

    (37) expresion -> expresion comparadores . expresion
    (35) expresion -> . var_expresion
    (36) expresion -> . var_expresion comparadores var_expresion
    (37) expresion -> . expresion comparadores expresion
    (38) expresion -> . PARENTESIS_IZQ expresion PARENTESIS_DER
    (39) expresion -> . NOT_BLOCK expresion
    (40) expresion -> . expresion operador_logico expresion
    (50) var_expresion -> . valor
    (51) var_expresion -> . booleano
    (79) valor -> . NUMERO
    (80) valor -> . FLOTANTE
    (81) valor -> . CADENA
    (82) valor -> . variable
    (66) booleano -> . FALSE
    (67) booleano -> . TRUE
    (62) variable -> . VARIABLE_LOCAL
    (63) variable -> . VARIABLE_GLOBAL
    (64) variable -> . VARIABLE_INSTANCIA
    (65) variable -> . VARIABLE_CLASE

    PARENTESIS_IZQ  shift and go to state 42
    NOT_BLOCK       shift and go to state 43
    NUMERO          shift and go to state 34
    FLOTANTE        shift and go to state 35
    CADENA          shift and go to state 36
    FALSE           shift and go to state 31
    TRUE            shift and go to state 32
    VARIABLE_LOCAL  shift and go to state 16
    VARIABLE_GLOBAL shift and go to state 18
    VARIABLE_INSTANCIA shift and go to state 19
    VARIABLE_CLASE  shift and go to state 20

    expresion                      shift and go to state 99
    var_expresion                  shift and go to state 41
    valor                          shift and go to state 44
    booleano                       shift and go to state 45
    variable                       shift and go to state 37

state 65

    (40) expresion -> expresion operador_logico . expresion
    (35) expresion -> . var_expresion
    (36) expresion -> . var_expresion comparadores var_expresion
    (37) expresion -> . expresion comparadores expresion
    (38) expresion -> . PARENTESIS_IZQ expresion PARENTESIS_DER
    (39) expresion -> . NOT_BLOCK expresion
    (40) expresion -> . expresion operador_logico expresion
    (50) var_expresion -> . valor
    (51) var_expresion -> . booleano
    (79) valor -> . NUMERO
    (80) valor -> . FLOTANTE
    (81) valor -> . CADENA
    (82) valor -> . variable
    (66) booleano -> . FALSE
    (67) booleano -> . TRUE
    (62) variable -> . VARIABLE_LOCAL
    (63) variable -> . VARIABLE_GLOBAL
    (64) variable -> . VARIABLE_INSTANCIA
    (65) variable -> . VARIABLE_CLASE

    PARENTESIS_IZQ  shift and go to state 42
    NOT_BLOCK       shift and go to state 43
    NUMERO          shift and go to state 34
    FLOTANTE        shift and go to state 35
    CADENA          shift and go to state 36
    FALSE           shift and go to state 31
    TRUE            shift and go to state 32
    VARIABLE_LOCAL  shift and go to state 16
    VARIABLE_GLOBAL shift and go to state 18
    VARIABLE_INSTANCIA shift and go to state 19
    VARIABLE_CLASE  shift and go to state 20

    expresion                      shift and go to state 100
    var_expresion                  shift and go to state 41
    valor                          shift and go to state 44
    booleano                       shift and go to state 45
    variable                       shift and go to state 37

state 66

    (52) instrucciones -> instruccion .
    (53) instrucciones -> instruccion . instrucciones
    (54) instrucciones -> instruccion . PUNTO_Y_COMA instrucciones
    (52) instrucciones -> . instruccion
    (53) instrucciones -> . instruccion instrucciones
    (54) instrucciones -> . instruccion PUNTO_Y_COMA instrucciones
    (55) instruccion -> . asignacion
    (56) instruccion -> . impresion
    (57) instruccion -> . condicion
    (58) instruccion -> . llamada_funcion
    (59) instruccion -> . funcion
    (9) asignacion -> . variable ASIGNACION valores
    (11) impresion -> . PUTS PARENTESIS_IZQ argumentos PARENTESIS_DER
    (12) impresion -> . PUTS
    (15) condicion -> . if
    (16) condicion -> . if_else
    (17) condicion -> . if_elsif_else
    (60) llamada_funcion -> . VARIABLE_LOCAL PARENTESIS_IZQ argumentos PARENTESIS_DER
    (61) llamada_funcion -> . VARIABLE_LOCAL PARENTESIS_IZQ PARENTESIS_DER
    (30) funcion -> . DEF VARIABLE_LOCAL PARENTESIS_IZQ parametros PARENTESIS_DER instrucciones END_BLOCK
    (97) funcion -> . DEF VARIABLE_LOCAL PARENTESIS_IZQ parametros_defecto PARENTESIS_DER instrucciones END_BLOCK
    (62) variable -> . VARIABLE_LOCAL
    (63) variable -> . VARIABLE_GLOBAL
    (64) variable -> . VARIABLE_INSTANCIA
    (65) variable -> . VARIABLE_CLASE
    (18) if -> . IF expresion instrucciones END_BLOCK
    (19) if -> . IF expresion THEN instrucciones END_BLOCK
    (20) if_else -> . IF expresion instrucciones ELSE instrucciones END_BLOCK
    (21) if_else -> . IF expresion THEN instrucciones ELSE instrucciones END_BLOCK
    (22) if_elsif_else -> . IF expresion instrucciones elsif_clauses END_BLOCK
    (23) if_elsif_else -> . IF expresion THEN instrucciones elsif_clauses END_BLOCK
    (24) if_elsif_else -> . IF expresion instrucciones elsif_clauses ELSE instrucciones END_BLOCK
    (25) if_elsif_else -> . IF expresion THEN instrucciones elsif_clauses ELSE instrucciones END_BLOCK

    END_BLOCK       reduce using rule 52 (instrucciones -> instruccion .)
    ELSE            reduce using rule 52 (instrucciones -> instruccion .)
    ELSIF           reduce using rule 52 (instrucciones -> instruccion .)
    PUNTO_Y_COMA    shift and go to state 102
    PUTS            shift and go to state 10
    VARIABLE_LOCAL  shift and go to state 81
    DEF             shift and go to state 15
    VARIABLE_GLOBAL shift and go to state 18
    VARIABLE_INSTANCIA shift and go to state 19
    VARIABLE_CLASE  shift and go to state 20
    IF              shift and go to state 21

    instruccion                    shift and go to state 66
    instrucciones                  shift and go to state 101
    asignacion                     shift and go to state 76
    impresion                      shift and go to state 77
    condicion                      shift and go to state 78
    llamada_funcion                shift and go to state 79
    funcion                        shift and go to state 80
    variable                       shift and go to state 9
    if                             shift and go to state 12
    if_else                        shift and go to state 13
    if_elsif_else                  shift and go to state 14

state 67

    (41) comparadores -> MAYOR_QUE .

    PARENTESIS_IZQ  reduce using rule 41 (comparadores -> MAYOR_QUE .)
    NOT_BLOCK       reduce using rule 41 (comparadores -> MAYOR_QUE .)
    NUMERO          reduce using rule 41 (comparadores -> MAYOR_QUE .)
    FLOTANTE        reduce using rule 41 (comparadores -> MAYOR_QUE .)
    CADENA          reduce using rule 41 (comparadores -> MAYOR_QUE .)
    FALSE           reduce using rule 41 (comparadores -> MAYOR_QUE .)
    TRUE            reduce using rule 41 (comparadores -> MAYOR_QUE .)
    VARIABLE_LOCAL  reduce using rule 41 (comparadores -> MAYOR_QUE .)
    VARIABLE_GLOBAL reduce using rule 41 (comparadores -> MAYOR_QUE .)
    VARIABLE_INSTANCIA reduce using rule 41 (comparadores -> MAYOR_QUE .)
    VARIABLE_CLASE  reduce using rule 41 (comparadores -> MAYOR_QUE .)


state 68

    (42) comparadores -> MENOR_QUE .

    PARENTESIS_IZQ  reduce using rule 42 (comparadores -> MENOR_QUE .)
    NOT_BLOCK       reduce using rule 42 (comparadores -> MENOR_QUE .)
    NUMERO          reduce using rule 42 (comparadores -> MENOR_QUE .)
    FLOTANTE        reduce using rule 42 (comparadores -> MENOR_QUE .)
    CADENA          reduce using rule 42 (comparadores -> MENOR_QUE .)
    FALSE           reduce using rule 42 (comparadores -> MENOR_QUE .)
    TRUE            reduce using rule 42 (comparadores -> MENOR_QUE .)
    VARIABLE_LOCAL  reduce using rule 42 (comparadores -> MENOR_QUE .)
    VARIABLE_GLOBAL reduce using rule 42 (comparadores -> MENOR_QUE .)
    VARIABLE_INSTANCIA reduce using rule 42 (comparadores -> MENOR_QUE .)
    VARIABLE_CLASE  reduce using rule 42 (comparadores -> MENOR_QUE .)


state 69

    (43) comparadores -> IGUAL_IGUAL .

    PARENTESIS_IZQ  reduce using rule 43 (comparadores -> IGUAL_IGUAL .)
    NOT_BLOCK       reduce using rule 43 (comparadores -> IGUAL_IGUAL .)
    NUMERO          reduce using rule 43 (comparadores -> IGUAL_IGUAL .)
    FLOTANTE        reduce using rule 43 (comparadores -> IGUAL_IGUAL .)
    CADENA          reduce using rule 43 (comparadores -> IGUAL_IGUAL .)
    FALSE           reduce using rule 43 (comparadores -> IGUAL_IGUAL .)
    TRUE            reduce using rule 43 (comparadores -> IGUAL_IGUAL .)
    VARIABLE_LOCAL  reduce using rule 43 (comparadores -> IGUAL_IGUAL .)
    VARIABLE_GLOBAL reduce using rule 43 (comparadores -> IGUAL_IGUAL .)
    VARIABLE_INSTANCIA reduce using rule 43 (comparadores -> IGUAL_IGUAL .)
    VARIABLE_CLASE  reduce using rule 43 (comparadores -> IGUAL_IGUAL .)


state 70

    (44) comparadores -> DIFERENTE .

    PARENTESIS_IZQ  reduce using rule 44 (comparadores -> DIFERENTE .)
    NOT_BLOCK       reduce using rule 44 (comparadores -> DIFERENTE .)
    NUMERO          reduce using rule 44 (comparadores -> DIFERENTE .)
    FLOTANTE        reduce using rule 44 (comparadores -> DIFERENTE .)
    CADENA          reduce using rule 44 (comparadores -> DIFERENTE .)
    FALSE           reduce using rule 44 (comparadores -> DIFERENTE .)
    TRUE            reduce using rule 44 (comparadores -> DIFERENTE .)
    VARIABLE_LOCAL  reduce using rule 44 (comparadores -> DIFERENTE .)
    VARIABLE_GLOBAL reduce using rule 44 (comparadores -> DIFERENTE .)
    VARIABLE_INSTANCIA reduce using rule 44 (comparadores -> DIFERENTE .)
    VARIABLE_CLASE  reduce using rule 44 (comparadores -> DIFERENTE .)


state 71

    (45) comparadores -> MAYOR_IGUAL .

    PARENTESIS_IZQ  reduce using rule 45 (comparadores -> MAYOR_IGUAL .)
    NOT_BLOCK       reduce using rule 45 (comparadores -> MAYOR_IGUAL .)
    NUMERO          reduce using rule 45 (comparadores -> MAYOR_IGUAL .)
    FLOTANTE        reduce using rule 45 (comparadores -> MAYOR_IGUAL .)
    CADENA          reduce using rule 45 (comparadores -> MAYOR_IGUAL .)
    FALSE           reduce using rule 45 (comparadores -> MAYOR_IGUAL .)
    TRUE            reduce using rule 45 (comparadores -> MAYOR_IGUAL .)
    VARIABLE_LOCAL  reduce using rule 45 (comparadores -> MAYOR_IGUAL .)
    VARIABLE_GLOBAL reduce using rule 45 (comparadores -> MAYOR_IGUAL .)
    VARIABLE_INSTANCIA reduce using rule 45 (comparadores -> MAYOR_IGUAL .)
    VARIABLE_CLASE  reduce using rule 45 (comparadores -> MAYOR_IGUAL .)


state 72

    (46) comparadores -> MENOR_IGUAL .

    PARENTESIS_IZQ  reduce using rule 46 (comparadores -> MENOR_IGUAL .)
    NOT_BLOCK       reduce using rule 46 (comparadores -> MENOR_IGUAL .)
    NUMERO          reduce using rule 46 (comparadores -> MENOR_IGUAL .)
    FLOTANTE        reduce using rule 46 (comparadores -> MENOR_IGUAL .)
    CADENA          reduce using rule 46 (comparadores -> MENOR_IGUAL .)
    FALSE           reduce using rule 46 (comparadores -> MENOR_IGUAL .)
    TRUE            reduce using rule 46 (comparadores -> MENOR_IGUAL .)
    VARIABLE_LOCAL  reduce using rule 46 (comparadores -> MENOR_IGUAL .)
    VARIABLE_GLOBAL reduce using rule 46 (comparadores -> MENOR_IGUAL .)
    VARIABLE_INSTANCIA reduce using rule 46 (comparadores -> MENOR_IGUAL .)
    VARIABLE_CLASE  reduce using rule 46 (comparadores -> MENOR_IGUAL .)


state 73

    (47) operador_logico -> AND .

    PARENTESIS_IZQ  reduce using rule 47 (operador_logico -> AND .)
    NOT_BLOCK       reduce using rule 47 (operador_logico -> AND .)
    NUMERO          reduce using rule 47 (operador_logico -> AND .)
    FLOTANTE        reduce using rule 47 (operador_logico -> AND .)
    CADENA          reduce using rule 47 (operador_logico -> AND .)
    FALSE           reduce using rule 47 (operador_logico -> AND .)
    TRUE            reduce using rule 47 (operador_logico -> AND .)
    VARIABLE_LOCAL  reduce using rule 47 (operador_logico -> AND .)
    VARIABLE_GLOBAL reduce using rule 47 (operador_logico -> AND .)
    VARIABLE_INSTANCIA reduce using rule 47 (operador_logico -> AND .)
    VARIABLE_CLASE  reduce using rule 47 (operador_logico -> AND .)


state 74

    (48) operador_logico -> OR .

    PARENTESIS_IZQ  reduce using rule 48 (operador_logico -> OR .)
    NOT_BLOCK       reduce using rule 48 (operador_logico -> OR .)
    NUMERO          reduce using rule 48 (operador_logico -> OR .)
    FLOTANTE        reduce using rule 48 (operador_logico -> OR .)
    CADENA          reduce using rule 48 (operador_logico -> OR .)
    FALSE           reduce using rule 48 (operador_logico -> OR .)
    TRUE            reduce using rule 48 (operador_logico -> OR .)
    VARIABLE_LOCAL  reduce using rule 48 (operador_logico -> OR .)
    VARIABLE_GLOBAL reduce using rule 48 (operador_logico -> OR .)
    VARIABLE_INSTANCIA reduce using rule 48 (operador_logico -> OR .)
    VARIABLE_CLASE  reduce using rule 48 (operador_logico -> OR .)


state 75

    (49) operador_logico -> NOT .

    PARENTESIS_IZQ  reduce using rule 49 (operador_logico -> NOT .)
    NOT_BLOCK       reduce using rule 49 (operador_logico -> NOT .)
    NUMERO          reduce using rule 49 (operador_logico -> NOT .)
    FLOTANTE        reduce using rule 49 (operador_logico -> NOT .)
    CADENA          reduce using rule 49 (operador_logico -> NOT .)
    FALSE           reduce using rule 49 (operador_logico -> NOT .)
    TRUE            reduce using rule 49 (operador_logico -> NOT .)
    VARIABLE_LOCAL  reduce using rule 49 (operador_logico -> NOT .)
    VARIABLE_GLOBAL reduce using rule 49 (operador_logico -> NOT .)
    VARIABLE_INSTANCIA reduce using rule 49 (operador_logico -> NOT .)
    VARIABLE_CLASE  reduce using rule 49 (operador_logico -> NOT .)


state 76

    (55) instruccion -> asignacion .

    PUNTO_Y_COMA    reduce using rule 55 (instruccion -> asignacion .)
    PUTS            reduce using rule 55 (instruccion -> asignacion .)
    VARIABLE_LOCAL  reduce using rule 55 (instruccion -> asignacion .)
    DEF             reduce using rule 55 (instruccion -> asignacion .)
    VARIABLE_GLOBAL reduce using rule 55 (instruccion -> asignacion .)
    VARIABLE_INSTANCIA reduce using rule 55 (instruccion -> asignacion .)
    VARIABLE_CLASE  reduce using rule 55 (instruccion -> asignacion .)
    IF              reduce using rule 55 (instruccion -> asignacion .)
    END_BLOCK       reduce using rule 55 (instruccion -> asignacion .)
    ELSE            reduce using rule 55 (instruccion -> asignacion .)
    ELSIF           reduce using rule 55 (instruccion -> asignacion .)


state 77

    (56) instruccion -> impresion .

    PUNTO_Y_COMA    reduce using rule 56 (instruccion -> impresion .)
    PUTS            reduce using rule 56 (instruccion -> impresion .)
    VARIABLE_LOCAL  reduce using rule 56 (instruccion -> impresion .)
    DEF             reduce using rule 56 (instruccion -> impresion .)
    VARIABLE_GLOBAL reduce using rule 56 (instruccion -> impresion .)
    VARIABLE_INSTANCIA reduce using rule 56 (instruccion -> impresion .)
    VARIABLE_CLASE  reduce using rule 56 (instruccion -> impresion .)
    IF              reduce using rule 56 (instruccion -> impresion .)
    END_BLOCK       reduce using rule 56 (instruccion -> impresion .)
    ELSE            reduce using rule 56 (instruccion -> impresion .)
    ELSIF           reduce using rule 56 (instruccion -> impresion .)


state 78

    (57) instruccion -> condicion .

    PUNTO_Y_COMA    reduce using rule 57 (instruccion -> condicion .)
    PUTS            reduce using rule 57 (instruccion -> condicion .)
    VARIABLE_LOCAL  reduce using rule 57 (instruccion -> condicion .)
    DEF             reduce using rule 57 (instruccion -> condicion .)
    VARIABLE_GLOBAL reduce using rule 57 (instruccion -> condicion .)
    VARIABLE_INSTANCIA reduce using rule 57 (instruccion -> condicion .)
    VARIABLE_CLASE  reduce using rule 57 (instruccion -> condicion .)
    IF              reduce using rule 57 (instruccion -> condicion .)
    END_BLOCK       reduce using rule 57 (instruccion -> condicion .)
    ELSE            reduce using rule 57 (instruccion -> condicion .)
    ELSIF           reduce using rule 57 (instruccion -> condicion .)


state 79

    (58) instruccion -> llamada_funcion .

    PUNTO_Y_COMA    reduce using rule 58 (instruccion -> llamada_funcion .)
    PUTS            reduce using rule 58 (instruccion -> llamada_funcion .)
    VARIABLE_LOCAL  reduce using rule 58 (instruccion -> llamada_funcion .)
    DEF             reduce using rule 58 (instruccion -> llamada_funcion .)
    VARIABLE_GLOBAL reduce using rule 58 (instruccion -> llamada_funcion .)
    VARIABLE_INSTANCIA reduce using rule 58 (instruccion -> llamada_funcion .)
    VARIABLE_CLASE  reduce using rule 58 (instruccion -> llamada_funcion .)
    IF              reduce using rule 58 (instruccion -> llamada_funcion .)
    END_BLOCK       reduce using rule 58 (instruccion -> llamada_funcion .)
    ELSE            reduce using rule 58 (instruccion -> llamada_funcion .)
    ELSIF           reduce using rule 58 (instruccion -> llamada_funcion .)


state 80

    (59) instruccion -> funcion .

    PUNTO_Y_COMA    reduce using rule 59 (instruccion -> funcion .)
    PUTS            reduce using rule 59 (instruccion -> funcion .)
    VARIABLE_LOCAL  reduce using rule 59 (instruccion -> funcion .)
    DEF             reduce using rule 59 (instruccion -> funcion .)
    VARIABLE_GLOBAL reduce using rule 59 (instruccion -> funcion .)
    VARIABLE_INSTANCIA reduce using rule 59 (instruccion -> funcion .)
    VARIABLE_CLASE  reduce using rule 59 (instruccion -> funcion .)
    IF              reduce using rule 59 (instruccion -> funcion .)
    END_BLOCK       reduce using rule 59 (instruccion -> funcion .)
    ELSE            reduce using rule 59 (instruccion -> funcion .)
    ELSIF           reduce using rule 59 (instruccion -> funcion .)


state 81

    (60) llamada_funcion -> VARIABLE_LOCAL . PARENTESIS_IZQ argumentos PARENTESIS_DER
    (61) llamada_funcion -> VARIABLE_LOCAL . PARENTESIS_IZQ PARENTESIS_DER
    (62) variable -> VARIABLE_LOCAL .

    PARENTESIS_IZQ  shift and go to state 103
    ASIGNACION      reduce using rule 62 (variable -> VARIABLE_LOCAL .)


state 82

    (36) expresion -> var_expresion comparadores . var_expresion
    (50) var_expresion -> . valor
    (51) var_expresion -> . booleano
    (79) valor -> . NUMERO
    (80) valor -> . FLOTANTE
    (81) valor -> . CADENA
    (82) valor -> . variable
    (66) booleano -> . FALSE
    (67) booleano -> . TRUE
    (62) variable -> . VARIABLE_LOCAL
    (63) variable -> . VARIABLE_GLOBAL
    (64) variable -> . VARIABLE_INSTANCIA
    (65) variable -> . VARIABLE_CLASE

    NUMERO          shift and go to state 34
    FLOTANTE        shift and go to state 35
    CADENA          shift and go to state 36
    FALSE           shift and go to state 31
    TRUE            shift and go to state 32
    VARIABLE_LOCAL  shift and go to state 16
    VARIABLE_GLOBAL shift and go to state 18
    VARIABLE_INSTANCIA shift and go to state 19
    VARIABLE_CLASE  shift and go to state 20

    var_expresion                  shift and go to state 104
    valor                          shift and go to state 44
    booleano                       shift and go to state 45
    variable                       shift and go to state 37

state 83

    (38) expresion -> PARENTESIS_IZQ expresion . PARENTESIS_DER
    (37) expresion -> expresion . comparadores expresion
    (40) expresion -> expresion . operador_logico expresion
    (41) comparadores -> . MAYOR_QUE
    (42) comparadores -> . MENOR_QUE
    (43) comparadores -> . IGUAL_IGUAL
    (44) comparadores -> . DIFERENTE
    (45) comparadores -> . MAYOR_IGUAL
    (46) comparadores -> . MENOR_IGUAL
    (47) operador_logico -> . AND
    (48) operador_logico -> . OR
    (49) operador_logico -> . NOT

    PARENTESIS_DER  shift and go to state 105
    MAYOR_QUE       shift and go to state 67
    MENOR_QUE       shift and go to state 68
    IGUAL_IGUAL     shift and go to state 69
    DIFERENTE       shift and go to state 70
    MAYOR_IGUAL     shift and go to state 71
    MENOR_IGUAL     shift and go to state 72
    AND             shift and go to state 73
    OR              shift and go to state 74
    NOT             shift and go to state 75

    comparadores                   shift and go to state 64
    operador_logico                shift and go to state 65

state 84

    (39) expresion -> NOT_BLOCK expresion .
    (37) expresion -> expresion . comparadores expresion
    (40) expresion -> expresion . operador_logico expresion
    (41) comparadores -> . MAYOR_QUE
    (42) comparadores -> . MENOR_QUE
    (43) comparadores -> . IGUAL_IGUAL
    (44) comparadores -> . DIFERENTE
    (45) comparadores -> . MAYOR_IGUAL
    (46) comparadores -> . MENOR_IGUAL
    (47) operador_logico -> . AND
    (48) operador_logico -> . OR
    (49) operador_logico -> . NOT

  ! shift/reduce conflict for MAYOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_QUE resolved as shift
  ! shift/reduce conflict for IGUAL_IGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for MAYOR_IGUAL resolved as shift
  ! shift/reduce conflict for MENOR_IGUAL resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
    THEN            reduce using rule 39 (expresion -> NOT_BLOCK expresion .)
    PUTS            reduce using rule 39 (expresion -> NOT_BLOCK expresion .)
    VARIABLE_LOCAL  reduce using rule 39 (expresion -> NOT_BLOCK expresion .)
    DEF             reduce using rule 39 (expresion -> NOT_BLOCK expresion .)
    VARIABLE_GLOBAL reduce using rule 39 (expresion -> NOT_BLOCK expresion .)
    VARIABLE_INSTANCIA reduce using rule 39 (expresion -> NOT_BLOCK expresion .)
    VARIABLE_CLASE  reduce using rule 39 (expresion -> NOT_BLOCK expresion .)
    IF              reduce using rule 39 (expresion -> NOT_BLOCK expresion .)
    PARENTESIS_DER  reduce using rule 39 (expresion -> NOT_BLOCK expresion .)
    MAYOR_QUE       shift and go to state 67
    MENOR_QUE       shift and go to state 68
    IGUAL_IGUAL     shift and go to state 69
    DIFERENTE       shift and go to state 70
    MAYOR_IGUAL     shift and go to state 71
    MENOR_IGUAL     shift and go to state 72
    AND             shift and go to state 73
    OR              shift and go to state 74
    NOT             shift and go to state 75

  ! MAYOR_QUE       [ reduce using rule 39 (expresion -> NOT_BLOCK expresion .) ]
  ! MENOR_QUE       [ reduce using rule 39 (expresion -> NOT_BLOCK expresion .) ]
  ! IGUAL_IGUAL     [ reduce using rule 39 (expresion -> NOT_BLOCK expresion .) ]
  ! DIFERENTE       [ reduce using rule 39 (expresion -> NOT_BLOCK expresion .) ]
  ! MAYOR_IGUAL     [ reduce using rule 39 (expresion -> NOT_BLOCK expresion .) ]
  ! MENOR_IGUAL     [ reduce using rule 39 (expresion -> NOT_BLOCK expresion .) ]
  ! AND             [ reduce using rule 39 (expresion -> NOT_BLOCK expresion .) ]
  ! OR              [ reduce using rule 39 (expresion -> NOT_BLOCK expresion .) ]
  ! NOT             [ reduce using rule 39 (expresion -> NOT_BLOCK expresion .) ]

    comparadores                   shift and go to state 64
    operador_logico                shift and go to state 65

state 85

    (11) impresion -> PUTS PARENTESIS_IZQ argumentos PARENTESIS_DER .

    PUTS            reduce using rule 11 (impresion -> PUTS PARENTESIS_IZQ argumentos PARENTESIS_DER .)
    CORCHETE_IZQ    reduce using rule 11 (impresion -> PUTS PARENTESIS_IZQ argumentos PARENTESIS_DER .)
    DEF             reduce using rule 11 (impresion -> PUTS PARENTESIS_IZQ argumentos PARENTESIS_DER .)
    COMENTARIO      reduce using rule 11 (impresion -> PUTS PARENTESIS_IZQ argumentos PARENTESIS_DER .)
    VARIABLE_LOCAL  reduce using rule 11 (impresion -> PUTS PARENTESIS_IZQ argumentos PARENTESIS_DER .)
    VARIABLE_GLOBAL reduce using rule 11 (impresion -> PUTS PARENTESIS_IZQ argumentos PARENTESIS_DER .)
    VARIABLE_INSTANCIA reduce using rule 11 (impresion -> PUTS PARENTESIS_IZQ argumentos PARENTESIS_DER .)
    VARIABLE_CLASE  reduce using rule 11 (impresion -> PUTS PARENTESIS_IZQ argumentos PARENTESIS_DER .)
    IF              reduce using rule 11 (impresion -> PUTS PARENTESIS_IZQ argumentos PARENTESIS_DER .)
    $end            reduce using rule 11 (impresion -> PUTS PARENTESIS_IZQ argumentos PARENTESIS_DER .)
    PUNTO_Y_COMA    reduce using rule 11 (impresion -> PUTS PARENTESIS_IZQ argumentos PARENTESIS_DER .)
    END_BLOCK       reduce using rule 11 (impresion -> PUTS PARENTESIS_IZQ argumentos PARENTESIS_DER .)
    ELSE            reduce using rule 11 (impresion -> PUTS PARENTESIS_IZQ argumentos PARENTESIS_DER .)
    ELSIF           reduce using rule 11 (impresion -> PUTS PARENTESIS_IZQ argumentos PARENTESIS_DER .)


state 86

    (69) argumentos -> argumento COMA argumentos .

    CORCHETE_DER    reduce using rule 69 (argumentos -> argumento COMA argumentos .)
    PARENTESIS_DER  reduce using rule 69 (argumentos -> argumento COMA argumentos .)


state 87

    (84) operacionAritmetica -> valor operador operacionAritmetica .

    COMA            reduce using rule 84 (operacionAritmetica -> valor operador operacionAritmetica .)
    CORCHETE_DER    reduce using rule 84 (operacionAritmetica -> valor operador operacionAritmetica .)
    PUTS            reduce using rule 84 (operacionAritmetica -> valor operador operacionAritmetica .)
    CORCHETE_IZQ    reduce using rule 84 (operacionAritmetica -> valor operador operacionAritmetica .)
    DEF             reduce using rule 84 (operacionAritmetica -> valor operador operacionAritmetica .)
    COMENTARIO      reduce using rule 84 (operacionAritmetica -> valor operador operacionAritmetica .)
    VARIABLE_LOCAL  reduce using rule 84 (operacionAritmetica -> valor operador operacionAritmetica .)
    VARIABLE_GLOBAL reduce using rule 84 (operacionAritmetica -> valor operador operacionAritmetica .)
    VARIABLE_INSTANCIA reduce using rule 84 (operacionAritmetica -> valor operador operacionAritmetica .)
    VARIABLE_CLASE  reduce using rule 84 (operacionAritmetica -> valor operador operacionAritmetica .)
    IF              reduce using rule 84 (operacionAritmetica -> valor operador operacionAritmetica .)
    $end            reduce using rule 84 (operacionAritmetica -> valor operador operacionAritmetica .)
    PUNTO_Y_COMA    reduce using rule 84 (operacionAritmetica -> valor operador operacionAritmetica .)
    END_BLOCK       reduce using rule 84 (operacionAritmetica -> valor operador operacionAritmetica .)
    ELSE            reduce using rule 84 (operacionAritmetica -> valor operador operacionAritmetica .)
    ELSIF           reduce using rule 84 (operacionAritmetica -> valor operador operacionAritmetica .)
    PARENTESIS_DER  reduce using rule 84 (operacionAritmetica -> valor operador operacionAritmetica .)


state 88

    (33) parametro -> VARIABLE_LOCAL .
    (100) parametro_defecto -> VARIABLE_LOCAL .
    (101) parametro_defecto -> VARIABLE_LOCAL . ASIGNACION valor

  ! reduce/reduce conflict for COMA resolved using rule 33 (parametro -> VARIABLE_LOCAL .)
  ! reduce/reduce conflict for PARENTESIS_DER resolved using rule 33 (parametro -> VARIABLE_LOCAL .)
    COMA            reduce using rule 33 (parametro -> VARIABLE_LOCAL .)
    PARENTESIS_DER  reduce using rule 33 (parametro -> VARIABLE_LOCAL .)
    ASIGNACION      shift and go to state 106

  ! COMA            [ reduce using rule 100 (parametro_defecto -> VARIABLE_LOCAL .) ]
  ! PARENTESIS_DER  [ reduce using rule 100 (parametro_defecto -> VARIABLE_LOCAL .) ]


state 89

    (30) funcion -> DEF VARIABLE_LOCAL PARENTESIS_IZQ parametros . PARENTESIS_DER instrucciones END_BLOCK

    PARENTESIS_DER  shift and go to state 107


state 90

    (97) funcion -> DEF VARIABLE_LOCAL PARENTESIS_IZQ parametros_defecto . PARENTESIS_DER instrucciones END_BLOCK

    PARENTESIS_DER  shift and go to state 108


state 91

    (31) parametros -> parametro .
    (32) parametros -> parametro . COMA parametros

    PARENTESIS_DER  reduce using rule 31 (parametros -> parametro .)
    COMA            shift and go to state 109


state 92

    (98) parametros_defecto -> parametro_defecto .
    (99) parametros_defecto -> parametro_defecto . COMA parametros_defecto

    PARENTESIS_DER  reduce using rule 98 (parametros_defecto -> parametro_defecto .)
    COMA            shift and go to state 110


state 93

    (34) parametro -> empty .

    COMA            reduce using rule 34 (parametro -> empty .)
    PARENTESIS_DER  reduce using rule 34 (parametro -> empty .)


state 94

    (18) if -> IF expresion instrucciones END_BLOCK .

    PUTS            reduce using rule 18 (if -> IF expresion instrucciones END_BLOCK .)
    CORCHETE_IZQ    reduce using rule 18 (if -> IF expresion instrucciones END_BLOCK .)
    DEF             reduce using rule 18 (if -> IF expresion instrucciones END_BLOCK .)
    COMENTARIO      reduce using rule 18 (if -> IF expresion instrucciones END_BLOCK .)
    VARIABLE_LOCAL  reduce using rule 18 (if -> IF expresion instrucciones END_BLOCK .)
    VARIABLE_GLOBAL reduce using rule 18 (if -> IF expresion instrucciones END_BLOCK .)
    VARIABLE_INSTANCIA reduce using rule 18 (if -> IF expresion instrucciones END_BLOCK .)
    VARIABLE_CLASE  reduce using rule 18 (if -> IF expresion instrucciones END_BLOCK .)
    IF              reduce using rule 18 (if -> IF expresion instrucciones END_BLOCK .)
    $end            reduce using rule 18 (if -> IF expresion instrucciones END_BLOCK .)
    PUNTO_Y_COMA    reduce using rule 18 (if -> IF expresion instrucciones END_BLOCK .)
    END_BLOCK       reduce using rule 18 (if -> IF expresion instrucciones END_BLOCK .)
    ELSE            reduce using rule 18 (if -> IF expresion instrucciones END_BLOCK .)
    ELSIF           reduce using rule 18 (if -> IF expresion instrucciones END_BLOCK .)


state 95

    (20) if_else -> IF expresion instrucciones ELSE . instrucciones END_BLOCK
    (52) instrucciones -> . instruccion
    (53) instrucciones -> . instruccion instrucciones
    (54) instrucciones -> . instruccion PUNTO_Y_COMA instrucciones
    (55) instruccion -> . asignacion
    (56) instruccion -> . impresion
    (57) instruccion -> . condicion
    (58) instruccion -> . llamada_funcion
    (59) instruccion -> . funcion
    (9) asignacion -> . variable ASIGNACION valores
    (11) impresion -> . PUTS PARENTESIS_IZQ argumentos PARENTESIS_DER
    (12) impresion -> . PUTS
    (15) condicion -> . if
    (16) condicion -> . if_else
    (17) condicion -> . if_elsif_else
    (60) llamada_funcion -> . VARIABLE_LOCAL PARENTESIS_IZQ argumentos PARENTESIS_DER
    (61) llamada_funcion -> . VARIABLE_LOCAL PARENTESIS_IZQ PARENTESIS_DER
    (30) funcion -> . DEF VARIABLE_LOCAL PARENTESIS_IZQ parametros PARENTESIS_DER instrucciones END_BLOCK
    (97) funcion -> . DEF VARIABLE_LOCAL PARENTESIS_IZQ parametros_defecto PARENTESIS_DER instrucciones END_BLOCK
    (62) variable -> . VARIABLE_LOCAL
    (63) variable -> . VARIABLE_GLOBAL
    (64) variable -> . VARIABLE_INSTANCIA
    (65) variable -> . VARIABLE_CLASE
    (18) if -> . IF expresion instrucciones END_BLOCK
    (19) if -> . IF expresion THEN instrucciones END_BLOCK
    (20) if_else -> . IF expresion instrucciones ELSE instrucciones END_BLOCK
    (21) if_else -> . IF expresion THEN instrucciones ELSE instrucciones END_BLOCK
    (22) if_elsif_else -> . IF expresion instrucciones elsif_clauses END_BLOCK
    (23) if_elsif_else -> . IF expresion THEN instrucciones elsif_clauses END_BLOCK
    (24) if_elsif_else -> . IF expresion instrucciones elsif_clauses ELSE instrucciones END_BLOCK
    (25) if_elsif_else -> . IF expresion THEN instrucciones elsif_clauses ELSE instrucciones END_BLOCK

    PUTS            shift and go to state 10
    VARIABLE_LOCAL  shift and go to state 81
    DEF             shift and go to state 15
    VARIABLE_GLOBAL shift and go to state 18
    VARIABLE_INSTANCIA shift and go to state 19
    VARIABLE_CLASE  shift and go to state 20
    IF              shift and go to state 21

    instrucciones                  shift and go to state 111
    instruccion                    shift and go to state 66
    asignacion                     shift and go to state 76
    impresion                      shift and go to state 77
    condicion                      shift and go to state 78
    llamada_funcion                shift and go to state 79
    funcion                        shift and go to state 80
    variable                       shift and go to state 9
    if                             shift and go to state 12
    if_else                        shift and go to state 13
    if_elsif_else                  shift and go to state 14

state 96

    (22) if_elsif_else -> IF expresion instrucciones elsif_clauses . END_BLOCK
    (24) if_elsif_else -> IF expresion instrucciones elsif_clauses . ELSE instrucciones END_BLOCK

    END_BLOCK       shift and go to state 112
    ELSE            shift and go to state 113


state 97

    (26) elsif_clauses -> ELSIF . expresion instrucciones
    (27) elsif_clauses -> ELSIF . expresion THEN instrucciones
    (28) elsif_clauses -> ELSIF . expresion instrucciones elsif_clauses
    (29) elsif_clauses -> ELSIF . expresion THEN instrucciones elsif_clauses
    (35) expresion -> . var_expresion
    (36) expresion -> . var_expresion comparadores var_expresion
    (37) expresion -> . expresion comparadores expresion
    (38) expresion -> . PARENTESIS_IZQ expresion PARENTESIS_DER
    (39) expresion -> . NOT_BLOCK expresion
    (40) expresion -> . expresion operador_logico expresion
    (50) var_expresion -> . valor
    (51) var_expresion -> . booleano
    (79) valor -> . NUMERO
    (80) valor -> . FLOTANTE
    (81) valor -> . CADENA
    (82) valor -> . variable
    (66) booleano -> . FALSE
    (67) booleano -> . TRUE
    (62) variable -> . VARIABLE_LOCAL
    (63) variable -> . VARIABLE_GLOBAL
    (64) variable -> . VARIABLE_INSTANCIA
    (65) variable -> . VARIABLE_CLASE

    PARENTESIS_IZQ  shift and go to state 42
    NOT_BLOCK       shift and go to state 43
    NUMERO          shift and go to state 34
    FLOTANTE        shift and go to state 35
    CADENA          shift and go to state 36
    FALSE           shift and go to state 31
    TRUE            shift and go to state 32
    VARIABLE_LOCAL  shift and go to state 16
    VARIABLE_GLOBAL shift and go to state 18
    VARIABLE_INSTANCIA shift and go to state 19
    VARIABLE_CLASE  shift and go to state 20

    expresion                      shift and go to state 114
    var_expresion                  shift and go to state 41
    valor                          shift and go to state 44
    booleano                       shift and go to state 45
    variable                       shift and go to state 37

state 98

    (19) if -> IF expresion THEN instrucciones . END_BLOCK
    (21) if_else -> IF expresion THEN instrucciones . ELSE instrucciones END_BLOCK
    (23) if_elsif_else -> IF expresion THEN instrucciones . elsif_clauses END_BLOCK
    (25) if_elsif_else -> IF expresion THEN instrucciones . elsif_clauses ELSE instrucciones END_BLOCK
    (26) elsif_clauses -> . ELSIF expresion instrucciones
    (27) elsif_clauses -> . ELSIF expresion THEN instrucciones
    (28) elsif_clauses -> . ELSIF expresion instrucciones elsif_clauses
    (29) elsif_clauses -> . ELSIF expresion THEN instrucciones elsif_clauses

    END_BLOCK       shift and go to state 115
    ELSE            shift and go to state 116
    ELSIF           shift and go to state 97

    elsif_clauses                  shift and go to state 117

state 99

    (37) expresion -> expresion comparadores expresion .
    (37) expresion -> expresion . comparadores expresion
    (40) expresion -> expresion . operador_logico expresion
    (41) comparadores -> . MAYOR_QUE
    (42) comparadores -> . MENOR_QUE
    (43) comparadores -> . IGUAL_IGUAL
    (44) comparadores -> . DIFERENTE
    (45) comparadores -> . MAYOR_IGUAL
    (46) comparadores -> . MENOR_IGUAL
    (47) operador_logico -> . AND
    (48) operador_logico -> . OR
    (49) operador_logico -> . NOT

  ! shift/reduce conflict for MAYOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_QUE resolved as shift
  ! shift/reduce conflict for IGUAL_IGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for MAYOR_IGUAL resolved as shift
  ! shift/reduce conflict for MENOR_IGUAL resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
    THEN            reduce using rule 37 (expresion -> expresion comparadores expresion .)
    PUTS            reduce using rule 37 (expresion -> expresion comparadores expresion .)
    VARIABLE_LOCAL  reduce using rule 37 (expresion -> expresion comparadores expresion .)
    DEF             reduce using rule 37 (expresion -> expresion comparadores expresion .)
    VARIABLE_GLOBAL reduce using rule 37 (expresion -> expresion comparadores expresion .)
    VARIABLE_INSTANCIA reduce using rule 37 (expresion -> expresion comparadores expresion .)
    VARIABLE_CLASE  reduce using rule 37 (expresion -> expresion comparadores expresion .)
    IF              reduce using rule 37 (expresion -> expresion comparadores expresion .)
    PARENTESIS_DER  reduce using rule 37 (expresion -> expresion comparadores expresion .)
    MAYOR_QUE       shift and go to state 67
    MENOR_QUE       shift and go to state 68
    IGUAL_IGUAL     shift and go to state 69
    DIFERENTE       shift and go to state 70
    MAYOR_IGUAL     shift and go to state 71
    MENOR_IGUAL     shift and go to state 72
    AND             shift and go to state 73
    OR              shift and go to state 74
    NOT             shift and go to state 75

  ! MAYOR_QUE       [ reduce using rule 37 (expresion -> expresion comparadores expresion .) ]
  ! MENOR_QUE       [ reduce using rule 37 (expresion -> expresion comparadores expresion .) ]
  ! IGUAL_IGUAL     [ reduce using rule 37 (expresion -> expresion comparadores expresion .) ]
  ! DIFERENTE       [ reduce using rule 37 (expresion -> expresion comparadores expresion .) ]
  ! MAYOR_IGUAL     [ reduce using rule 37 (expresion -> expresion comparadores expresion .) ]
  ! MENOR_IGUAL     [ reduce using rule 37 (expresion -> expresion comparadores expresion .) ]
  ! AND             [ reduce using rule 37 (expresion -> expresion comparadores expresion .) ]
  ! OR              [ reduce using rule 37 (expresion -> expresion comparadores expresion .) ]
  ! NOT             [ reduce using rule 37 (expresion -> expresion comparadores expresion .) ]

    comparadores                   shift and go to state 64
    operador_logico                shift and go to state 65

state 100

    (40) expresion -> expresion operador_logico expresion .
    (37) expresion -> expresion . comparadores expresion
    (40) expresion -> expresion . operador_logico expresion
    (41) comparadores -> . MAYOR_QUE
    (42) comparadores -> . MENOR_QUE
    (43) comparadores -> . IGUAL_IGUAL
    (44) comparadores -> . DIFERENTE
    (45) comparadores -> . MAYOR_IGUAL
    (46) comparadores -> . MENOR_IGUAL
    (47) operador_logico -> . AND
    (48) operador_logico -> . OR
    (49) operador_logico -> . NOT

  ! shift/reduce conflict for MAYOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_QUE resolved as shift
  ! shift/reduce conflict for IGUAL_IGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for MAYOR_IGUAL resolved as shift
  ! shift/reduce conflict for MENOR_IGUAL resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
    THEN            reduce using rule 40 (expresion -> expresion operador_logico expresion .)
    PUTS            reduce using rule 40 (expresion -> expresion operador_logico expresion .)
    VARIABLE_LOCAL  reduce using rule 40 (expresion -> expresion operador_logico expresion .)
    DEF             reduce using rule 40 (expresion -> expresion operador_logico expresion .)
    VARIABLE_GLOBAL reduce using rule 40 (expresion -> expresion operador_logico expresion .)
    VARIABLE_INSTANCIA reduce using rule 40 (expresion -> expresion operador_logico expresion .)
    VARIABLE_CLASE  reduce using rule 40 (expresion -> expresion operador_logico expresion .)
    IF              reduce using rule 40 (expresion -> expresion operador_logico expresion .)
    PARENTESIS_DER  reduce using rule 40 (expresion -> expresion operador_logico expresion .)
    MAYOR_QUE       shift and go to state 67
    MENOR_QUE       shift and go to state 68
    IGUAL_IGUAL     shift and go to state 69
    DIFERENTE       shift and go to state 70
    MAYOR_IGUAL     shift and go to state 71
    MENOR_IGUAL     shift and go to state 72
    AND             shift and go to state 73
    OR              shift and go to state 74
    NOT             shift and go to state 75

  ! MAYOR_QUE       [ reduce using rule 40 (expresion -> expresion operador_logico expresion .) ]
  ! MENOR_QUE       [ reduce using rule 40 (expresion -> expresion operador_logico expresion .) ]
  ! IGUAL_IGUAL     [ reduce using rule 40 (expresion -> expresion operador_logico expresion .) ]
  ! DIFERENTE       [ reduce using rule 40 (expresion -> expresion operador_logico expresion .) ]
  ! MAYOR_IGUAL     [ reduce using rule 40 (expresion -> expresion operador_logico expresion .) ]
  ! MENOR_IGUAL     [ reduce using rule 40 (expresion -> expresion operador_logico expresion .) ]
  ! AND             [ reduce using rule 40 (expresion -> expresion operador_logico expresion .) ]
  ! OR              [ reduce using rule 40 (expresion -> expresion operador_logico expresion .) ]
  ! NOT             [ reduce using rule 40 (expresion -> expresion operador_logico expresion .) ]

    operador_logico                shift and go to state 65
    comparadores                   shift and go to state 64

state 101

    (53) instrucciones -> instruccion instrucciones .

    END_BLOCK       reduce using rule 53 (instrucciones -> instruccion instrucciones .)
    ELSE            reduce using rule 53 (instrucciones -> instruccion instrucciones .)
    ELSIF           reduce using rule 53 (instrucciones -> instruccion instrucciones .)


state 102

    (54) instrucciones -> instruccion PUNTO_Y_COMA . instrucciones
    (52) instrucciones -> . instruccion
    (53) instrucciones -> . instruccion instrucciones
    (54) instrucciones -> . instruccion PUNTO_Y_COMA instrucciones
    (55) instruccion -> . asignacion
    (56) instruccion -> . impresion
    (57) instruccion -> . condicion
    (58) instruccion -> . llamada_funcion
    (59) instruccion -> . funcion
    (9) asignacion -> . variable ASIGNACION valores
    (11) impresion -> . PUTS PARENTESIS_IZQ argumentos PARENTESIS_DER
    (12) impresion -> . PUTS
    (15) condicion -> . if
    (16) condicion -> . if_else
    (17) condicion -> . if_elsif_else
    (60) llamada_funcion -> . VARIABLE_LOCAL PARENTESIS_IZQ argumentos PARENTESIS_DER
    (61) llamada_funcion -> . VARIABLE_LOCAL PARENTESIS_IZQ PARENTESIS_DER
    (30) funcion -> . DEF VARIABLE_LOCAL PARENTESIS_IZQ parametros PARENTESIS_DER instrucciones END_BLOCK
    (97) funcion -> . DEF VARIABLE_LOCAL PARENTESIS_IZQ parametros_defecto PARENTESIS_DER instrucciones END_BLOCK
    (62) variable -> . VARIABLE_LOCAL
    (63) variable -> . VARIABLE_GLOBAL
    (64) variable -> . VARIABLE_INSTANCIA
    (65) variable -> . VARIABLE_CLASE
    (18) if -> . IF expresion instrucciones END_BLOCK
    (19) if -> . IF expresion THEN instrucciones END_BLOCK
    (20) if_else -> . IF expresion instrucciones ELSE instrucciones END_BLOCK
    (21) if_else -> . IF expresion THEN instrucciones ELSE instrucciones END_BLOCK
    (22) if_elsif_else -> . IF expresion instrucciones elsif_clauses END_BLOCK
    (23) if_elsif_else -> . IF expresion THEN instrucciones elsif_clauses END_BLOCK
    (24) if_elsif_else -> . IF expresion instrucciones elsif_clauses ELSE instrucciones END_BLOCK
    (25) if_elsif_else -> . IF expresion THEN instrucciones elsif_clauses ELSE instrucciones END_BLOCK

    PUTS            shift and go to state 10
    VARIABLE_LOCAL  shift and go to state 81
    DEF             shift and go to state 15
    VARIABLE_GLOBAL shift and go to state 18
    VARIABLE_INSTANCIA shift and go to state 19
    VARIABLE_CLASE  shift and go to state 20
    IF              shift and go to state 21

    instruccion                    shift and go to state 66
    instrucciones                  shift and go to state 118
    asignacion                     shift and go to state 76
    impresion                      shift and go to state 77
    condicion                      shift and go to state 78
    llamada_funcion                shift and go to state 79
    funcion                        shift and go to state 80
    variable                       shift and go to state 9
    if                             shift and go to state 12
    if_else                        shift and go to state 13
    if_elsif_else                  shift and go to state 14

state 103

    (60) llamada_funcion -> VARIABLE_LOCAL PARENTESIS_IZQ . argumentos PARENTESIS_DER
    (61) llamada_funcion -> VARIABLE_LOCAL PARENTESIS_IZQ . PARENTESIS_DER
    (68) argumentos -> . argumento
    (69) argumentos -> . argumento COMA argumentos
    (70) argumento -> . booleano
    (71) argumento -> . operacionAritmetica
    (72) argumento -> . array
    (73) argumento -> . empty
    (66) booleano -> . FALSE
    (67) booleano -> . TRUE
    (83) operacionAritmetica -> . valor
    (84) operacionAritmetica -> . valor operador operacionAritmetica
    (14) array -> . CORCHETE_IZQ argumentos CORCHETE_DER
    (74) empty -> .
    (79) valor -> . NUMERO
    (80) valor -> . FLOTANTE
    (81) valor -> . CADENA
    (82) valor -> . variable
    (62) variable -> . VARIABLE_LOCAL
    (63) variable -> . VARIABLE_GLOBAL
    (64) variable -> . VARIABLE_INSTANCIA
    (65) variable -> . VARIABLE_CLASE

  ! shift/reduce conflict for PARENTESIS_DER resolved as shift
    PARENTESIS_DER  shift and go to state 120
    FALSE           shift and go to state 31
    TRUE            shift and go to state 32
    CORCHETE_IZQ    shift and go to state 11
    COMA            reduce using rule 74 (empty -> .)
    NUMERO          shift and go to state 34
    FLOTANTE        shift and go to state 35
    CADENA          shift and go to state 36
    VARIABLE_LOCAL  shift and go to state 16
    VARIABLE_GLOBAL shift and go to state 18
    VARIABLE_INSTANCIA shift and go to state 19
    VARIABLE_CLASE  shift and go to state 20

  ! PARENTESIS_DER  [ reduce using rule 74 (empty -> .) ]

    argumentos                     shift and go to state 119
    argumento                      shift and go to state 26
    booleano                       shift and go to state 27
    operacionAritmetica            shift and go to state 28
    array                          shift and go to state 29
    empty                          shift and go to state 30
    valor                          shift and go to state 33
    variable                       shift and go to state 37

state 104

    (36) expresion -> var_expresion comparadores var_expresion .

    THEN            reduce using rule 36 (expresion -> var_expresion comparadores var_expresion .)
    MAYOR_QUE       reduce using rule 36 (expresion -> var_expresion comparadores var_expresion .)
    MENOR_QUE       reduce using rule 36 (expresion -> var_expresion comparadores var_expresion .)
    IGUAL_IGUAL     reduce using rule 36 (expresion -> var_expresion comparadores var_expresion .)
    DIFERENTE       reduce using rule 36 (expresion -> var_expresion comparadores var_expresion .)
    MAYOR_IGUAL     reduce using rule 36 (expresion -> var_expresion comparadores var_expresion .)
    MENOR_IGUAL     reduce using rule 36 (expresion -> var_expresion comparadores var_expresion .)
    AND             reduce using rule 36 (expresion -> var_expresion comparadores var_expresion .)
    OR              reduce using rule 36 (expresion -> var_expresion comparadores var_expresion .)
    NOT             reduce using rule 36 (expresion -> var_expresion comparadores var_expresion .)
    PUTS            reduce using rule 36 (expresion -> var_expresion comparadores var_expresion .)
    VARIABLE_LOCAL  reduce using rule 36 (expresion -> var_expresion comparadores var_expresion .)
    DEF             reduce using rule 36 (expresion -> var_expresion comparadores var_expresion .)
    VARIABLE_GLOBAL reduce using rule 36 (expresion -> var_expresion comparadores var_expresion .)
    VARIABLE_INSTANCIA reduce using rule 36 (expresion -> var_expresion comparadores var_expresion .)
    VARIABLE_CLASE  reduce using rule 36 (expresion -> var_expresion comparadores var_expresion .)
    IF              reduce using rule 36 (expresion -> var_expresion comparadores var_expresion .)
    PARENTESIS_DER  reduce using rule 36 (expresion -> var_expresion comparadores var_expresion .)


state 105

    (38) expresion -> PARENTESIS_IZQ expresion PARENTESIS_DER .

    THEN            reduce using rule 38 (expresion -> PARENTESIS_IZQ expresion PARENTESIS_DER .)
    MAYOR_QUE       reduce using rule 38 (expresion -> PARENTESIS_IZQ expresion PARENTESIS_DER .)
    MENOR_QUE       reduce using rule 38 (expresion -> PARENTESIS_IZQ expresion PARENTESIS_DER .)
    IGUAL_IGUAL     reduce using rule 38 (expresion -> PARENTESIS_IZQ expresion PARENTESIS_DER .)
    DIFERENTE       reduce using rule 38 (expresion -> PARENTESIS_IZQ expresion PARENTESIS_DER .)
    MAYOR_IGUAL     reduce using rule 38 (expresion -> PARENTESIS_IZQ expresion PARENTESIS_DER .)
    MENOR_IGUAL     reduce using rule 38 (expresion -> PARENTESIS_IZQ expresion PARENTESIS_DER .)
    AND             reduce using rule 38 (expresion -> PARENTESIS_IZQ expresion PARENTESIS_DER .)
    OR              reduce using rule 38 (expresion -> PARENTESIS_IZQ expresion PARENTESIS_DER .)
    NOT             reduce using rule 38 (expresion -> PARENTESIS_IZQ expresion PARENTESIS_DER .)
    PUTS            reduce using rule 38 (expresion -> PARENTESIS_IZQ expresion PARENTESIS_DER .)
    VARIABLE_LOCAL  reduce using rule 38 (expresion -> PARENTESIS_IZQ expresion PARENTESIS_DER .)
    DEF             reduce using rule 38 (expresion -> PARENTESIS_IZQ expresion PARENTESIS_DER .)
    VARIABLE_GLOBAL reduce using rule 38 (expresion -> PARENTESIS_IZQ expresion PARENTESIS_DER .)
    VARIABLE_INSTANCIA reduce using rule 38 (expresion -> PARENTESIS_IZQ expresion PARENTESIS_DER .)
    VARIABLE_CLASE  reduce using rule 38 (expresion -> PARENTESIS_IZQ expresion PARENTESIS_DER .)
    IF              reduce using rule 38 (expresion -> PARENTESIS_IZQ expresion PARENTESIS_DER .)
    PARENTESIS_DER  reduce using rule 38 (expresion -> PARENTESIS_IZQ expresion PARENTESIS_DER .)


state 106

    (101) parametro_defecto -> VARIABLE_LOCAL ASIGNACION . valor
    (79) valor -> . NUMERO
    (80) valor -> . FLOTANTE
    (81) valor -> . CADENA
    (82) valor -> . variable
    (62) variable -> . VARIABLE_LOCAL
    (63) variable -> . VARIABLE_GLOBAL
    (64) variable -> . VARIABLE_INSTANCIA
    (65) variable -> . VARIABLE_CLASE

    NUMERO          shift and go to state 34
    FLOTANTE        shift and go to state 35
    CADENA          shift and go to state 36
    VARIABLE_LOCAL  shift and go to state 16
    VARIABLE_GLOBAL shift and go to state 18
    VARIABLE_INSTANCIA shift and go to state 19
    VARIABLE_CLASE  shift and go to state 20

    valor                          shift and go to state 121
    variable                       shift and go to state 37

state 107

    (30) funcion -> DEF VARIABLE_LOCAL PARENTESIS_IZQ parametros PARENTESIS_DER . instrucciones END_BLOCK
    (52) instrucciones -> . instruccion
    (53) instrucciones -> . instruccion instrucciones
    (54) instrucciones -> . instruccion PUNTO_Y_COMA instrucciones
    (55) instruccion -> . asignacion
    (56) instruccion -> . impresion
    (57) instruccion -> . condicion
    (58) instruccion -> . llamada_funcion
    (59) instruccion -> . funcion
    (9) asignacion -> . variable ASIGNACION valores
    (11) impresion -> . PUTS PARENTESIS_IZQ argumentos PARENTESIS_DER
    (12) impresion -> . PUTS
    (15) condicion -> . if
    (16) condicion -> . if_else
    (17) condicion -> . if_elsif_else
    (60) llamada_funcion -> . VARIABLE_LOCAL PARENTESIS_IZQ argumentos PARENTESIS_DER
    (61) llamada_funcion -> . VARIABLE_LOCAL PARENTESIS_IZQ PARENTESIS_DER
    (30) funcion -> . DEF VARIABLE_LOCAL PARENTESIS_IZQ parametros PARENTESIS_DER instrucciones END_BLOCK
    (97) funcion -> . DEF VARIABLE_LOCAL PARENTESIS_IZQ parametros_defecto PARENTESIS_DER instrucciones END_BLOCK
    (62) variable -> . VARIABLE_LOCAL
    (63) variable -> . VARIABLE_GLOBAL
    (64) variable -> . VARIABLE_INSTANCIA
    (65) variable -> . VARIABLE_CLASE
    (18) if -> . IF expresion instrucciones END_BLOCK
    (19) if -> . IF expresion THEN instrucciones END_BLOCK
    (20) if_else -> . IF expresion instrucciones ELSE instrucciones END_BLOCK
    (21) if_else -> . IF expresion THEN instrucciones ELSE instrucciones END_BLOCK
    (22) if_elsif_else -> . IF expresion instrucciones elsif_clauses END_BLOCK
    (23) if_elsif_else -> . IF expresion THEN instrucciones elsif_clauses END_BLOCK
    (24) if_elsif_else -> . IF expresion instrucciones elsif_clauses ELSE instrucciones END_BLOCK
    (25) if_elsif_else -> . IF expresion THEN instrucciones elsif_clauses ELSE instrucciones END_BLOCK

    PUTS            shift and go to state 10
    VARIABLE_LOCAL  shift and go to state 81
    DEF             shift and go to state 15
    VARIABLE_GLOBAL shift and go to state 18
    VARIABLE_INSTANCIA shift and go to state 19
    VARIABLE_CLASE  shift and go to state 20
    IF              shift and go to state 21

    instrucciones                  shift and go to state 122
    instruccion                    shift and go to state 66
    asignacion                     shift and go to state 76
    impresion                      shift and go to state 77
    condicion                      shift and go to state 78
    llamada_funcion                shift and go to state 79
    funcion                        shift and go to state 80
    variable                       shift and go to state 9
    if                             shift and go to state 12
    if_else                        shift and go to state 13
    if_elsif_else                  shift and go to state 14

state 108

    (97) funcion -> DEF VARIABLE_LOCAL PARENTESIS_IZQ parametros_defecto PARENTESIS_DER . instrucciones END_BLOCK
    (52) instrucciones -> . instruccion
    (53) instrucciones -> . instruccion instrucciones
    (54) instrucciones -> . instruccion PUNTO_Y_COMA instrucciones
    (55) instruccion -> . asignacion
    (56) instruccion -> . impresion
    (57) instruccion -> . condicion
    (58) instruccion -> . llamada_funcion
    (59) instruccion -> . funcion
    (9) asignacion -> . variable ASIGNACION valores
    (11) impresion -> . PUTS PARENTESIS_IZQ argumentos PARENTESIS_DER
    (12) impresion -> . PUTS
    (15) condicion -> . if
    (16) condicion -> . if_else
    (17) condicion -> . if_elsif_else
    (60) llamada_funcion -> . VARIABLE_LOCAL PARENTESIS_IZQ argumentos PARENTESIS_DER
    (61) llamada_funcion -> . VARIABLE_LOCAL PARENTESIS_IZQ PARENTESIS_DER
    (30) funcion -> . DEF VARIABLE_LOCAL PARENTESIS_IZQ parametros PARENTESIS_DER instrucciones END_BLOCK
    (97) funcion -> . DEF VARIABLE_LOCAL PARENTESIS_IZQ parametros_defecto PARENTESIS_DER instrucciones END_BLOCK
    (62) variable -> . VARIABLE_LOCAL
    (63) variable -> . VARIABLE_GLOBAL
    (64) variable -> . VARIABLE_INSTANCIA
    (65) variable -> . VARIABLE_CLASE
    (18) if -> . IF expresion instrucciones END_BLOCK
    (19) if -> . IF expresion THEN instrucciones END_BLOCK
    (20) if_else -> . IF expresion instrucciones ELSE instrucciones END_BLOCK
    (21) if_else -> . IF expresion THEN instrucciones ELSE instrucciones END_BLOCK
    (22) if_elsif_else -> . IF expresion instrucciones elsif_clauses END_BLOCK
    (23) if_elsif_else -> . IF expresion THEN instrucciones elsif_clauses END_BLOCK
    (24) if_elsif_else -> . IF expresion instrucciones elsif_clauses ELSE instrucciones END_BLOCK
    (25) if_elsif_else -> . IF expresion THEN instrucciones elsif_clauses ELSE instrucciones END_BLOCK

    PUTS            shift and go to state 10
    VARIABLE_LOCAL  shift and go to state 81
    DEF             shift and go to state 15
    VARIABLE_GLOBAL shift and go to state 18
    VARIABLE_INSTANCIA shift and go to state 19
    VARIABLE_CLASE  shift and go to state 20
    IF              shift and go to state 21

    instrucciones                  shift and go to state 123
    instruccion                    shift and go to state 66
    asignacion                     shift and go to state 76
    impresion                      shift and go to state 77
    condicion                      shift and go to state 78
    llamada_funcion                shift and go to state 79
    funcion                        shift and go to state 80
    variable                       shift and go to state 9
    if                             shift and go to state 12
    if_else                        shift and go to state 13
    if_elsif_else                  shift and go to state 14

state 109

    (32) parametros -> parametro COMA . parametros
    (31) parametros -> . parametro
    (32) parametros -> . parametro COMA parametros
    (33) parametro -> . VARIABLE_LOCAL
    (34) parametro -> . empty
    (74) empty -> .

    VARIABLE_LOCAL  shift and go to state 125
    COMA            reduce using rule 74 (empty -> .)
    PARENTESIS_DER  reduce using rule 74 (empty -> .)

    parametro                      shift and go to state 91
    parametros                     shift and go to state 124
    empty                          shift and go to state 93

state 110

    (99) parametros_defecto -> parametro_defecto COMA . parametros_defecto
    (98) parametros_defecto -> . parametro_defecto
    (99) parametros_defecto -> . parametro_defecto COMA parametros_defecto
    (100) parametro_defecto -> . VARIABLE_LOCAL
    (101) parametro_defecto -> . VARIABLE_LOCAL ASIGNACION valor

    VARIABLE_LOCAL  shift and go to state 127

    parametro_defecto              shift and go to state 92
    parametros_defecto             shift and go to state 126

state 111

    (20) if_else -> IF expresion instrucciones ELSE instrucciones . END_BLOCK

    END_BLOCK       shift and go to state 128


state 112

    (22) if_elsif_else -> IF expresion instrucciones elsif_clauses END_BLOCK .

    PUTS            reduce using rule 22 (if_elsif_else -> IF expresion instrucciones elsif_clauses END_BLOCK .)
    CORCHETE_IZQ    reduce using rule 22 (if_elsif_else -> IF expresion instrucciones elsif_clauses END_BLOCK .)
    DEF             reduce using rule 22 (if_elsif_else -> IF expresion instrucciones elsif_clauses END_BLOCK .)
    COMENTARIO      reduce using rule 22 (if_elsif_else -> IF expresion instrucciones elsif_clauses END_BLOCK .)
    VARIABLE_LOCAL  reduce using rule 22 (if_elsif_else -> IF expresion instrucciones elsif_clauses END_BLOCK .)
    VARIABLE_GLOBAL reduce using rule 22 (if_elsif_else -> IF expresion instrucciones elsif_clauses END_BLOCK .)
    VARIABLE_INSTANCIA reduce using rule 22 (if_elsif_else -> IF expresion instrucciones elsif_clauses END_BLOCK .)
    VARIABLE_CLASE  reduce using rule 22 (if_elsif_else -> IF expresion instrucciones elsif_clauses END_BLOCK .)
    IF              reduce using rule 22 (if_elsif_else -> IF expresion instrucciones elsif_clauses END_BLOCK .)
    $end            reduce using rule 22 (if_elsif_else -> IF expresion instrucciones elsif_clauses END_BLOCK .)
    PUNTO_Y_COMA    reduce using rule 22 (if_elsif_else -> IF expresion instrucciones elsif_clauses END_BLOCK .)
    END_BLOCK       reduce using rule 22 (if_elsif_else -> IF expresion instrucciones elsif_clauses END_BLOCK .)
    ELSE            reduce using rule 22 (if_elsif_else -> IF expresion instrucciones elsif_clauses END_BLOCK .)
    ELSIF           reduce using rule 22 (if_elsif_else -> IF expresion instrucciones elsif_clauses END_BLOCK .)


state 113

    (24) if_elsif_else -> IF expresion instrucciones elsif_clauses ELSE . instrucciones END_BLOCK
    (52) instrucciones -> . instruccion
    (53) instrucciones -> . instruccion instrucciones
    (54) instrucciones -> . instruccion PUNTO_Y_COMA instrucciones
    (55) instruccion -> . asignacion
    (56) instruccion -> . impresion
    (57) instruccion -> . condicion
    (58) instruccion -> . llamada_funcion
    (59) instruccion -> . funcion
    (9) asignacion -> . variable ASIGNACION valores
    (11) impresion -> . PUTS PARENTESIS_IZQ argumentos PARENTESIS_DER
    (12) impresion -> . PUTS
    (15) condicion -> . if
    (16) condicion -> . if_else
    (17) condicion -> . if_elsif_else
    (60) llamada_funcion -> . VARIABLE_LOCAL PARENTESIS_IZQ argumentos PARENTESIS_DER
    (61) llamada_funcion -> . VARIABLE_LOCAL PARENTESIS_IZQ PARENTESIS_DER
    (30) funcion -> . DEF VARIABLE_LOCAL PARENTESIS_IZQ parametros PARENTESIS_DER instrucciones END_BLOCK
    (97) funcion -> . DEF VARIABLE_LOCAL PARENTESIS_IZQ parametros_defecto PARENTESIS_DER instrucciones END_BLOCK
    (62) variable -> . VARIABLE_LOCAL
    (63) variable -> . VARIABLE_GLOBAL
    (64) variable -> . VARIABLE_INSTANCIA
    (65) variable -> . VARIABLE_CLASE
    (18) if -> . IF expresion instrucciones END_BLOCK
    (19) if -> . IF expresion THEN instrucciones END_BLOCK
    (20) if_else -> . IF expresion instrucciones ELSE instrucciones END_BLOCK
    (21) if_else -> . IF expresion THEN instrucciones ELSE instrucciones END_BLOCK
    (22) if_elsif_else -> . IF expresion instrucciones elsif_clauses END_BLOCK
    (23) if_elsif_else -> . IF expresion THEN instrucciones elsif_clauses END_BLOCK
    (24) if_elsif_else -> . IF expresion instrucciones elsif_clauses ELSE instrucciones END_BLOCK
    (25) if_elsif_else -> . IF expresion THEN instrucciones elsif_clauses ELSE instrucciones END_BLOCK

    PUTS            shift and go to state 10
    VARIABLE_LOCAL  shift and go to state 81
    DEF             shift and go to state 15
    VARIABLE_GLOBAL shift and go to state 18
    VARIABLE_INSTANCIA shift and go to state 19
    VARIABLE_CLASE  shift and go to state 20
    IF              shift and go to state 21

    instrucciones                  shift and go to state 129
    instruccion                    shift and go to state 66
    asignacion                     shift and go to state 76
    impresion                      shift and go to state 77
    condicion                      shift and go to state 78
    llamada_funcion                shift and go to state 79
    funcion                        shift and go to state 80
    variable                       shift and go to state 9
    if                             shift and go to state 12
    if_else                        shift and go to state 13
    if_elsif_else                  shift and go to state 14

state 114

    (26) elsif_clauses -> ELSIF expresion . instrucciones
    (27) elsif_clauses -> ELSIF expresion . THEN instrucciones
    (28) elsif_clauses -> ELSIF expresion . instrucciones elsif_clauses
    (29) elsif_clauses -> ELSIF expresion . THEN instrucciones elsif_clauses
    (37) expresion -> expresion . comparadores expresion
    (40) expresion -> expresion . operador_logico expresion
    (52) instrucciones -> . instruccion
    (53) instrucciones -> . instruccion instrucciones
    (54) instrucciones -> . instruccion PUNTO_Y_COMA instrucciones
    (41) comparadores -> . MAYOR_QUE
    (42) comparadores -> . MENOR_QUE
    (43) comparadores -> . IGUAL_IGUAL
    (44) comparadores -> . DIFERENTE
    (45) comparadores -> . MAYOR_IGUAL
    (46) comparadores -> . MENOR_IGUAL
    (47) operador_logico -> . AND
    (48) operador_logico -> . OR
    (49) operador_logico -> . NOT
    (55) instruccion -> . asignacion
    (56) instruccion -> . impresion
    (57) instruccion -> . condicion
    (58) instruccion -> . llamada_funcion
    (59) instruccion -> . funcion
    (9) asignacion -> . variable ASIGNACION valores
    (11) impresion -> . PUTS PARENTESIS_IZQ argumentos PARENTESIS_DER
    (12) impresion -> . PUTS
    (15) condicion -> . if
    (16) condicion -> . if_else
    (17) condicion -> . if_elsif_else
    (60) llamada_funcion -> . VARIABLE_LOCAL PARENTESIS_IZQ argumentos PARENTESIS_DER
    (61) llamada_funcion -> . VARIABLE_LOCAL PARENTESIS_IZQ PARENTESIS_DER
    (30) funcion -> . DEF VARIABLE_LOCAL PARENTESIS_IZQ parametros PARENTESIS_DER instrucciones END_BLOCK
    (97) funcion -> . DEF VARIABLE_LOCAL PARENTESIS_IZQ parametros_defecto PARENTESIS_DER instrucciones END_BLOCK
    (62) variable -> . VARIABLE_LOCAL
    (63) variable -> . VARIABLE_GLOBAL
    (64) variable -> . VARIABLE_INSTANCIA
    (65) variable -> . VARIABLE_CLASE
    (18) if -> . IF expresion instrucciones END_BLOCK
    (19) if -> . IF expresion THEN instrucciones END_BLOCK
    (20) if_else -> . IF expresion instrucciones ELSE instrucciones END_BLOCK
    (21) if_else -> . IF expresion THEN instrucciones ELSE instrucciones END_BLOCK
    (22) if_elsif_else -> . IF expresion instrucciones elsif_clauses END_BLOCK
    (23) if_elsif_else -> . IF expresion THEN instrucciones elsif_clauses END_BLOCK
    (24) if_elsif_else -> . IF expresion instrucciones elsif_clauses ELSE instrucciones END_BLOCK
    (25) if_elsif_else -> . IF expresion THEN instrucciones elsif_clauses ELSE instrucciones END_BLOCK

    THEN            shift and go to state 131
    MAYOR_QUE       shift and go to state 67
    MENOR_QUE       shift and go to state 68
    IGUAL_IGUAL     shift and go to state 69
    DIFERENTE       shift and go to state 70
    MAYOR_IGUAL     shift and go to state 71
    MENOR_IGUAL     shift and go to state 72
    AND             shift and go to state 73
    OR              shift and go to state 74
    NOT             shift and go to state 75
    PUTS            shift and go to state 10
    VARIABLE_LOCAL  shift and go to state 81
    DEF             shift and go to state 15
    VARIABLE_GLOBAL shift and go to state 18
    VARIABLE_INSTANCIA shift and go to state 19
    VARIABLE_CLASE  shift and go to state 20
    IF              shift and go to state 21

    instrucciones                  shift and go to state 130
    comparadores                   shift and go to state 64
    operador_logico                shift and go to state 65
    instruccion                    shift and go to state 66
    asignacion                     shift and go to state 76
    impresion                      shift and go to state 77
    condicion                      shift and go to state 78
    llamada_funcion                shift and go to state 79
    funcion                        shift and go to state 80
    variable                       shift and go to state 9
    if                             shift and go to state 12
    if_else                        shift and go to state 13
    if_elsif_else                  shift and go to state 14

state 115

    (19) if -> IF expresion THEN instrucciones END_BLOCK .

    PUTS            reduce using rule 19 (if -> IF expresion THEN instrucciones END_BLOCK .)
    CORCHETE_IZQ    reduce using rule 19 (if -> IF expresion THEN instrucciones END_BLOCK .)
    DEF             reduce using rule 19 (if -> IF expresion THEN instrucciones END_BLOCK .)
    COMENTARIO      reduce using rule 19 (if -> IF expresion THEN instrucciones END_BLOCK .)
    VARIABLE_LOCAL  reduce using rule 19 (if -> IF expresion THEN instrucciones END_BLOCK .)
    VARIABLE_GLOBAL reduce using rule 19 (if -> IF expresion THEN instrucciones END_BLOCK .)
    VARIABLE_INSTANCIA reduce using rule 19 (if -> IF expresion THEN instrucciones END_BLOCK .)
    VARIABLE_CLASE  reduce using rule 19 (if -> IF expresion THEN instrucciones END_BLOCK .)
    IF              reduce using rule 19 (if -> IF expresion THEN instrucciones END_BLOCK .)
    $end            reduce using rule 19 (if -> IF expresion THEN instrucciones END_BLOCK .)
    PUNTO_Y_COMA    reduce using rule 19 (if -> IF expresion THEN instrucciones END_BLOCK .)
    END_BLOCK       reduce using rule 19 (if -> IF expresion THEN instrucciones END_BLOCK .)
    ELSE            reduce using rule 19 (if -> IF expresion THEN instrucciones END_BLOCK .)
    ELSIF           reduce using rule 19 (if -> IF expresion THEN instrucciones END_BLOCK .)


state 116

    (21) if_else -> IF expresion THEN instrucciones ELSE . instrucciones END_BLOCK
    (52) instrucciones -> . instruccion
    (53) instrucciones -> . instruccion instrucciones
    (54) instrucciones -> . instruccion PUNTO_Y_COMA instrucciones
    (55) instruccion -> . asignacion
    (56) instruccion -> . impresion
    (57) instruccion -> . condicion
    (58) instruccion -> . llamada_funcion
    (59) instruccion -> . funcion
    (9) asignacion -> . variable ASIGNACION valores
    (11) impresion -> . PUTS PARENTESIS_IZQ argumentos PARENTESIS_DER
    (12) impresion -> . PUTS
    (15) condicion -> . if
    (16) condicion -> . if_else
    (17) condicion -> . if_elsif_else
    (60) llamada_funcion -> . VARIABLE_LOCAL PARENTESIS_IZQ argumentos PARENTESIS_DER
    (61) llamada_funcion -> . VARIABLE_LOCAL PARENTESIS_IZQ PARENTESIS_DER
    (30) funcion -> . DEF VARIABLE_LOCAL PARENTESIS_IZQ parametros PARENTESIS_DER instrucciones END_BLOCK
    (97) funcion -> . DEF VARIABLE_LOCAL PARENTESIS_IZQ parametros_defecto PARENTESIS_DER instrucciones END_BLOCK
    (62) variable -> . VARIABLE_LOCAL
    (63) variable -> . VARIABLE_GLOBAL
    (64) variable -> . VARIABLE_INSTANCIA
    (65) variable -> . VARIABLE_CLASE
    (18) if -> . IF expresion instrucciones END_BLOCK
    (19) if -> . IF expresion THEN instrucciones END_BLOCK
    (20) if_else -> . IF expresion instrucciones ELSE instrucciones END_BLOCK
    (21) if_else -> . IF expresion THEN instrucciones ELSE instrucciones END_BLOCK
    (22) if_elsif_else -> . IF expresion instrucciones elsif_clauses END_BLOCK
    (23) if_elsif_else -> . IF expresion THEN instrucciones elsif_clauses END_BLOCK
    (24) if_elsif_else -> . IF expresion instrucciones elsif_clauses ELSE instrucciones END_BLOCK
    (25) if_elsif_else -> . IF expresion THEN instrucciones elsif_clauses ELSE instrucciones END_BLOCK

    PUTS            shift and go to state 10
    VARIABLE_LOCAL  shift and go to state 81
    DEF             shift and go to state 15
    VARIABLE_GLOBAL shift and go to state 18
    VARIABLE_INSTANCIA shift and go to state 19
    VARIABLE_CLASE  shift and go to state 20
    IF              shift and go to state 21

    instrucciones                  shift and go to state 132
    instruccion                    shift and go to state 66
    asignacion                     shift and go to state 76
    impresion                      shift and go to state 77
    condicion                      shift and go to state 78
    llamada_funcion                shift and go to state 79
    funcion                        shift and go to state 80
    variable                       shift and go to state 9
    if                             shift and go to state 12
    if_else                        shift and go to state 13
    if_elsif_else                  shift and go to state 14

state 117

    (23) if_elsif_else -> IF expresion THEN instrucciones elsif_clauses . END_BLOCK
    (25) if_elsif_else -> IF expresion THEN instrucciones elsif_clauses . ELSE instrucciones END_BLOCK

    END_BLOCK       shift and go to state 133
    ELSE            shift and go to state 134


state 118

    (54) instrucciones -> instruccion PUNTO_Y_COMA instrucciones .

    END_BLOCK       reduce using rule 54 (instrucciones -> instruccion PUNTO_Y_COMA instrucciones .)
    ELSE            reduce using rule 54 (instrucciones -> instruccion PUNTO_Y_COMA instrucciones .)
    ELSIF           reduce using rule 54 (instrucciones -> instruccion PUNTO_Y_COMA instrucciones .)


state 119

    (60) llamada_funcion -> VARIABLE_LOCAL PARENTESIS_IZQ argumentos . PARENTESIS_DER

    PARENTESIS_DER  shift and go to state 135


state 120

    (61) llamada_funcion -> VARIABLE_LOCAL PARENTESIS_IZQ PARENTESIS_DER .

    PUNTO_Y_COMA    reduce using rule 61 (llamada_funcion -> VARIABLE_LOCAL PARENTESIS_IZQ PARENTESIS_DER .)
    PUTS            reduce using rule 61 (llamada_funcion -> VARIABLE_LOCAL PARENTESIS_IZQ PARENTESIS_DER .)
    VARIABLE_LOCAL  reduce using rule 61 (llamada_funcion -> VARIABLE_LOCAL PARENTESIS_IZQ PARENTESIS_DER .)
    DEF             reduce using rule 61 (llamada_funcion -> VARIABLE_LOCAL PARENTESIS_IZQ PARENTESIS_DER .)
    VARIABLE_GLOBAL reduce using rule 61 (llamada_funcion -> VARIABLE_LOCAL PARENTESIS_IZQ PARENTESIS_DER .)
    VARIABLE_INSTANCIA reduce using rule 61 (llamada_funcion -> VARIABLE_LOCAL PARENTESIS_IZQ PARENTESIS_DER .)
    VARIABLE_CLASE  reduce using rule 61 (llamada_funcion -> VARIABLE_LOCAL PARENTESIS_IZQ PARENTESIS_DER .)
    IF              reduce using rule 61 (llamada_funcion -> VARIABLE_LOCAL PARENTESIS_IZQ PARENTESIS_DER .)
    END_BLOCK       reduce using rule 61 (llamada_funcion -> VARIABLE_LOCAL PARENTESIS_IZQ PARENTESIS_DER .)
    ELSE            reduce using rule 61 (llamada_funcion -> VARIABLE_LOCAL PARENTESIS_IZQ PARENTESIS_DER .)
    ELSIF           reduce using rule 61 (llamada_funcion -> VARIABLE_LOCAL PARENTESIS_IZQ PARENTESIS_DER .)


state 121

    (101) parametro_defecto -> VARIABLE_LOCAL ASIGNACION valor .

    COMA            reduce using rule 101 (parametro_defecto -> VARIABLE_LOCAL ASIGNACION valor .)
    PARENTESIS_DER  reduce using rule 101 (parametro_defecto -> VARIABLE_LOCAL ASIGNACION valor .)


state 122

    (30) funcion -> DEF VARIABLE_LOCAL PARENTESIS_IZQ parametros PARENTESIS_DER instrucciones . END_BLOCK

    END_BLOCK       shift and go to state 136


state 123

    (97) funcion -> DEF VARIABLE_LOCAL PARENTESIS_IZQ parametros_defecto PARENTESIS_DER instrucciones . END_BLOCK

    END_BLOCK       shift and go to state 137


state 124

    (32) parametros -> parametro COMA parametros .

    PARENTESIS_DER  reduce using rule 32 (parametros -> parametro COMA parametros .)


state 125

    (33) parametro -> VARIABLE_LOCAL .

    COMA            reduce using rule 33 (parametro -> VARIABLE_LOCAL .)
    PARENTESIS_DER  reduce using rule 33 (parametro -> VARIABLE_LOCAL .)


state 126

    (99) parametros_defecto -> parametro_defecto COMA parametros_defecto .

    PARENTESIS_DER  reduce using rule 99 (parametros_defecto -> parametro_defecto COMA parametros_defecto .)


state 127

    (100) parametro_defecto -> VARIABLE_LOCAL .
    (101) parametro_defecto -> VARIABLE_LOCAL . ASIGNACION valor

    COMA            reduce using rule 100 (parametro_defecto -> VARIABLE_LOCAL .)
    PARENTESIS_DER  reduce using rule 100 (parametro_defecto -> VARIABLE_LOCAL .)
    ASIGNACION      shift and go to state 106


state 128

    (20) if_else -> IF expresion instrucciones ELSE instrucciones END_BLOCK .

    PUTS            reduce using rule 20 (if_else -> IF expresion instrucciones ELSE instrucciones END_BLOCK .)
    CORCHETE_IZQ    reduce using rule 20 (if_else -> IF expresion instrucciones ELSE instrucciones END_BLOCK .)
    DEF             reduce using rule 20 (if_else -> IF expresion instrucciones ELSE instrucciones END_BLOCK .)
    COMENTARIO      reduce using rule 20 (if_else -> IF expresion instrucciones ELSE instrucciones END_BLOCK .)
    VARIABLE_LOCAL  reduce using rule 20 (if_else -> IF expresion instrucciones ELSE instrucciones END_BLOCK .)
    VARIABLE_GLOBAL reduce using rule 20 (if_else -> IF expresion instrucciones ELSE instrucciones END_BLOCK .)
    VARIABLE_INSTANCIA reduce using rule 20 (if_else -> IF expresion instrucciones ELSE instrucciones END_BLOCK .)
    VARIABLE_CLASE  reduce using rule 20 (if_else -> IF expresion instrucciones ELSE instrucciones END_BLOCK .)
    IF              reduce using rule 20 (if_else -> IF expresion instrucciones ELSE instrucciones END_BLOCK .)
    $end            reduce using rule 20 (if_else -> IF expresion instrucciones ELSE instrucciones END_BLOCK .)
    PUNTO_Y_COMA    reduce using rule 20 (if_else -> IF expresion instrucciones ELSE instrucciones END_BLOCK .)
    END_BLOCK       reduce using rule 20 (if_else -> IF expresion instrucciones ELSE instrucciones END_BLOCK .)
    ELSE            reduce using rule 20 (if_else -> IF expresion instrucciones ELSE instrucciones END_BLOCK .)
    ELSIF           reduce using rule 20 (if_else -> IF expresion instrucciones ELSE instrucciones END_BLOCK .)


state 129

    (24) if_elsif_else -> IF expresion instrucciones elsif_clauses ELSE instrucciones . END_BLOCK

    END_BLOCK       shift and go to state 138


state 130

    (26) elsif_clauses -> ELSIF expresion instrucciones .
    (28) elsif_clauses -> ELSIF expresion instrucciones . elsif_clauses
    (26) elsif_clauses -> . ELSIF expresion instrucciones
    (27) elsif_clauses -> . ELSIF expresion THEN instrucciones
    (28) elsif_clauses -> . ELSIF expresion instrucciones elsif_clauses
    (29) elsif_clauses -> . ELSIF expresion THEN instrucciones elsif_clauses

    END_BLOCK       reduce using rule 26 (elsif_clauses -> ELSIF expresion instrucciones .)
    ELSE            reduce using rule 26 (elsif_clauses -> ELSIF expresion instrucciones .)
    ELSIF           shift and go to state 97

    elsif_clauses                  shift and go to state 139

state 131

    (27) elsif_clauses -> ELSIF expresion THEN . instrucciones
    (29) elsif_clauses -> ELSIF expresion THEN . instrucciones elsif_clauses
    (52) instrucciones -> . instruccion
    (53) instrucciones -> . instruccion instrucciones
    (54) instrucciones -> . instruccion PUNTO_Y_COMA instrucciones
    (55) instruccion -> . asignacion
    (56) instruccion -> . impresion
    (57) instruccion -> . condicion
    (58) instruccion -> . llamada_funcion
    (59) instruccion -> . funcion
    (9) asignacion -> . variable ASIGNACION valores
    (11) impresion -> . PUTS PARENTESIS_IZQ argumentos PARENTESIS_DER
    (12) impresion -> . PUTS
    (15) condicion -> . if
    (16) condicion -> . if_else
    (17) condicion -> . if_elsif_else
    (60) llamada_funcion -> . VARIABLE_LOCAL PARENTESIS_IZQ argumentos PARENTESIS_DER
    (61) llamada_funcion -> . VARIABLE_LOCAL PARENTESIS_IZQ PARENTESIS_DER
    (30) funcion -> . DEF VARIABLE_LOCAL PARENTESIS_IZQ parametros PARENTESIS_DER instrucciones END_BLOCK
    (97) funcion -> . DEF VARIABLE_LOCAL PARENTESIS_IZQ parametros_defecto PARENTESIS_DER instrucciones END_BLOCK
    (62) variable -> . VARIABLE_LOCAL
    (63) variable -> . VARIABLE_GLOBAL
    (64) variable -> . VARIABLE_INSTANCIA
    (65) variable -> . VARIABLE_CLASE
    (18) if -> . IF expresion instrucciones END_BLOCK
    (19) if -> . IF expresion THEN instrucciones END_BLOCK
    (20) if_else -> . IF expresion instrucciones ELSE instrucciones END_BLOCK
    (21) if_else -> . IF expresion THEN instrucciones ELSE instrucciones END_BLOCK
    (22) if_elsif_else -> . IF expresion instrucciones elsif_clauses END_BLOCK
    (23) if_elsif_else -> . IF expresion THEN instrucciones elsif_clauses END_BLOCK
    (24) if_elsif_else -> . IF expresion instrucciones elsif_clauses ELSE instrucciones END_BLOCK
    (25) if_elsif_else -> . IF expresion THEN instrucciones elsif_clauses ELSE instrucciones END_BLOCK

    PUTS            shift and go to state 10
    VARIABLE_LOCAL  shift and go to state 81
    DEF             shift and go to state 15
    VARIABLE_GLOBAL shift and go to state 18
    VARIABLE_INSTANCIA shift and go to state 19
    VARIABLE_CLASE  shift and go to state 20
    IF              shift and go to state 21

    instrucciones                  shift and go to state 140
    instruccion                    shift and go to state 66
    asignacion                     shift and go to state 76
    impresion                      shift and go to state 77
    condicion                      shift and go to state 78
    llamada_funcion                shift and go to state 79
    funcion                        shift and go to state 80
    variable                       shift and go to state 9
    if                             shift and go to state 12
    if_else                        shift and go to state 13
    if_elsif_else                  shift and go to state 14

state 132

    (21) if_else -> IF expresion THEN instrucciones ELSE instrucciones . END_BLOCK

    END_BLOCK       shift and go to state 141


state 133

    (23) if_elsif_else -> IF expresion THEN instrucciones elsif_clauses END_BLOCK .

    PUTS            reduce using rule 23 (if_elsif_else -> IF expresion THEN instrucciones elsif_clauses END_BLOCK .)
    CORCHETE_IZQ    reduce using rule 23 (if_elsif_else -> IF expresion THEN instrucciones elsif_clauses END_BLOCK .)
    DEF             reduce using rule 23 (if_elsif_else -> IF expresion THEN instrucciones elsif_clauses END_BLOCK .)
    COMENTARIO      reduce using rule 23 (if_elsif_else -> IF expresion THEN instrucciones elsif_clauses END_BLOCK .)
    VARIABLE_LOCAL  reduce using rule 23 (if_elsif_else -> IF expresion THEN instrucciones elsif_clauses END_BLOCK .)
    VARIABLE_GLOBAL reduce using rule 23 (if_elsif_else -> IF expresion THEN instrucciones elsif_clauses END_BLOCK .)
    VARIABLE_INSTANCIA reduce using rule 23 (if_elsif_else -> IF expresion THEN instrucciones elsif_clauses END_BLOCK .)
    VARIABLE_CLASE  reduce using rule 23 (if_elsif_else -> IF expresion THEN instrucciones elsif_clauses END_BLOCK .)
    IF              reduce using rule 23 (if_elsif_else -> IF expresion THEN instrucciones elsif_clauses END_BLOCK .)
    $end            reduce using rule 23 (if_elsif_else -> IF expresion THEN instrucciones elsif_clauses END_BLOCK .)
    PUNTO_Y_COMA    reduce using rule 23 (if_elsif_else -> IF expresion THEN instrucciones elsif_clauses END_BLOCK .)
    END_BLOCK       reduce using rule 23 (if_elsif_else -> IF expresion THEN instrucciones elsif_clauses END_BLOCK .)
    ELSE            reduce using rule 23 (if_elsif_else -> IF expresion THEN instrucciones elsif_clauses END_BLOCK .)
    ELSIF           reduce using rule 23 (if_elsif_else -> IF expresion THEN instrucciones elsif_clauses END_BLOCK .)


state 134

    (25) if_elsif_else -> IF expresion THEN instrucciones elsif_clauses ELSE . instrucciones END_BLOCK
    (52) instrucciones -> . instruccion
    (53) instrucciones -> . instruccion instrucciones
    (54) instrucciones -> . instruccion PUNTO_Y_COMA instrucciones
    (55) instruccion -> . asignacion
    (56) instruccion -> . impresion
    (57) instruccion -> . condicion
    (58) instruccion -> . llamada_funcion
    (59) instruccion -> . funcion
    (9) asignacion -> . variable ASIGNACION valores
    (11) impresion -> . PUTS PARENTESIS_IZQ argumentos PARENTESIS_DER
    (12) impresion -> . PUTS
    (15) condicion -> . if
    (16) condicion -> . if_else
    (17) condicion -> . if_elsif_else
    (60) llamada_funcion -> . VARIABLE_LOCAL PARENTESIS_IZQ argumentos PARENTESIS_DER
    (61) llamada_funcion -> . VARIABLE_LOCAL PARENTESIS_IZQ PARENTESIS_DER
    (30) funcion -> . DEF VARIABLE_LOCAL PARENTESIS_IZQ parametros PARENTESIS_DER instrucciones END_BLOCK
    (97) funcion -> . DEF VARIABLE_LOCAL PARENTESIS_IZQ parametros_defecto PARENTESIS_DER instrucciones END_BLOCK
    (62) variable -> . VARIABLE_LOCAL
    (63) variable -> . VARIABLE_GLOBAL
    (64) variable -> . VARIABLE_INSTANCIA
    (65) variable -> . VARIABLE_CLASE
    (18) if -> . IF expresion instrucciones END_BLOCK
    (19) if -> . IF expresion THEN instrucciones END_BLOCK
    (20) if_else -> . IF expresion instrucciones ELSE instrucciones END_BLOCK
    (21) if_else -> . IF expresion THEN instrucciones ELSE instrucciones END_BLOCK
    (22) if_elsif_else -> . IF expresion instrucciones elsif_clauses END_BLOCK
    (23) if_elsif_else -> . IF expresion THEN instrucciones elsif_clauses END_BLOCK
    (24) if_elsif_else -> . IF expresion instrucciones elsif_clauses ELSE instrucciones END_BLOCK
    (25) if_elsif_else -> . IF expresion THEN instrucciones elsif_clauses ELSE instrucciones END_BLOCK

    PUTS            shift and go to state 10
    VARIABLE_LOCAL  shift and go to state 81
    DEF             shift and go to state 15
    VARIABLE_GLOBAL shift and go to state 18
    VARIABLE_INSTANCIA shift and go to state 19
    VARIABLE_CLASE  shift and go to state 20
    IF              shift and go to state 21

    instrucciones                  shift and go to state 142
    instruccion                    shift and go to state 66
    asignacion                     shift and go to state 76
    impresion                      shift and go to state 77
    condicion                      shift and go to state 78
    llamada_funcion                shift and go to state 79
    funcion                        shift and go to state 80
    variable                       shift and go to state 9
    if                             shift and go to state 12
    if_else                        shift and go to state 13
    if_elsif_else                  shift and go to state 14

state 135

    (60) llamada_funcion -> VARIABLE_LOCAL PARENTESIS_IZQ argumentos PARENTESIS_DER .

    PUNTO_Y_COMA    reduce using rule 60 (llamada_funcion -> VARIABLE_LOCAL PARENTESIS_IZQ argumentos PARENTESIS_DER .)
    PUTS            reduce using rule 60 (llamada_funcion -> VARIABLE_LOCAL PARENTESIS_IZQ argumentos PARENTESIS_DER .)
    VARIABLE_LOCAL  reduce using rule 60 (llamada_funcion -> VARIABLE_LOCAL PARENTESIS_IZQ argumentos PARENTESIS_DER .)
    DEF             reduce using rule 60 (llamada_funcion -> VARIABLE_LOCAL PARENTESIS_IZQ argumentos PARENTESIS_DER .)
    VARIABLE_GLOBAL reduce using rule 60 (llamada_funcion -> VARIABLE_LOCAL PARENTESIS_IZQ argumentos PARENTESIS_DER .)
    VARIABLE_INSTANCIA reduce using rule 60 (llamada_funcion -> VARIABLE_LOCAL PARENTESIS_IZQ argumentos PARENTESIS_DER .)
    VARIABLE_CLASE  reduce using rule 60 (llamada_funcion -> VARIABLE_LOCAL PARENTESIS_IZQ argumentos PARENTESIS_DER .)
    IF              reduce using rule 60 (llamada_funcion -> VARIABLE_LOCAL PARENTESIS_IZQ argumentos PARENTESIS_DER .)
    END_BLOCK       reduce using rule 60 (llamada_funcion -> VARIABLE_LOCAL PARENTESIS_IZQ argumentos PARENTESIS_DER .)
    ELSE            reduce using rule 60 (llamada_funcion -> VARIABLE_LOCAL PARENTESIS_IZQ argumentos PARENTESIS_DER .)
    ELSIF           reduce using rule 60 (llamada_funcion -> VARIABLE_LOCAL PARENTESIS_IZQ argumentos PARENTESIS_DER .)


state 136

    (30) funcion -> DEF VARIABLE_LOCAL PARENTESIS_IZQ parametros PARENTESIS_DER instrucciones END_BLOCK .

    PUTS            reduce using rule 30 (funcion -> DEF VARIABLE_LOCAL PARENTESIS_IZQ parametros PARENTESIS_DER instrucciones END_BLOCK .)
    CORCHETE_IZQ    reduce using rule 30 (funcion -> DEF VARIABLE_LOCAL PARENTESIS_IZQ parametros PARENTESIS_DER instrucciones END_BLOCK .)
    DEF             reduce using rule 30 (funcion -> DEF VARIABLE_LOCAL PARENTESIS_IZQ parametros PARENTESIS_DER instrucciones END_BLOCK .)
    COMENTARIO      reduce using rule 30 (funcion -> DEF VARIABLE_LOCAL PARENTESIS_IZQ parametros PARENTESIS_DER instrucciones END_BLOCK .)
    VARIABLE_LOCAL  reduce using rule 30 (funcion -> DEF VARIABLE_LOCAL PARENTESIS_IZQ parametros PARENTESIS_DER instrucciones END_BLOCK .)
    VARIABLE_GLOBAL reduce using rule 30 (funcion -> DEF VARIABLE_LOCAL PARENTESIS_IZQ parametros PARENTESIS_DER instrucciones END_BLOCK .)
    VARIABLE_INSTANCIA reduce using rule 30 (funcion -> DEF VARIABLE_LOCAL PARENTESIS_IZQ parametros PARENTESIS_DER instrucciones END_BLOCK .)
    VARIABLE_CLASE  reduce using rule 30 (funcion -> DEF VARIABLE_LOCAL PARENTESIS_IZQ parametros PARENTESIS_DER instrucciones END_BLOCK .)
    IF              reduce using rule 30 (funcion -> DEF VARIABLE_LOCAL PARENTESIS_IZQ parametros PARENTESIS_DER instrucciones END_BLOCK .)
    $end            reduce using rule 30 (funcion -> DEF VARIABLE_LOCAL PARENTESIS_IZQ parametros PARENTESIS_DER instrucciones END_BLOCK .)
    PUNTO_Y_COMA    reduce using rule 30 (funcion -> DEF VARIABLE_LOCAL PARENTESIS_IZQ parametros PARENTESIS_DER instrucciones END_BLOCK .)
    END_BLOCK       reduce using rule 30 (funcion -> DEF VARIABLE_LOCAL PARENTESIS_IZQ parametros PARENTESIS_DER instrucciones END_BLOCK .)
    ELSE            reduce using rule 30 (funcion -> DEF VARIABLE_LOCAL PARENTESIS_IZQ parametros PARENTESIS_DER instrucciones END_BLOCK .)
    ELSIF           reduce using rule 30 (funcion -> DEF VARIABLE_LOCAL PARENTESIS_IZQ parametros PARENTESIS_DER instrucciones END_BLOCK .)


state 137

    (97) funcion -> DEF VARIABLE_LOCAL PARENTESIS_IZQ parametros_defecto PARENTESIS_DER instrucciones END_BLOCK .

    PUTS            reduce using rule 97 (funcion -> DEF VARIABLE_LOCAL PARENTESIS_IZQ parametros_defecto PARENTESIS_DER instrucciones END_BLOCK .)
    CORCHETE_IZQ    reduce using rule 97 (funcion -> DEF VARIABLE_LOCAL PARENTESIS_IZQ parametros_defecto PARENTESIS_DER instrucciones END_BLOCK .)
    DEF             reduce using rule 97 (funcion -> DEF VARIABLE_LOCAL PARENTESIS_IZQ parametros_defecto PARENTESIS_DER instrucciones END_BLOCK .)
    COMENTARIO      reduce using rule 97 (funcion -> DEF VARIABLE_LOCAL PARENTESIS_IZQ parametros_defecto PARENTESIS_DER instrucciones END_BLOCK .)
    VARIABLE_LOCAL  reduce using rule 97 (funcion -> DEF VARIABLE_LOCAL PARENTESIS_IZQ parametros_defecto PARENTESIS_DER instrucciones END_BLOCK .)
    VARIABLE_GLOBAL reduce using rule 97 (funcion -> DEF VARIABLE_LOCAL PARENTESIS_IZQ parametros_defecto PARENTESIS_DER instrucciones END_BLOCK .)
    VARIABLE_INSTANCIA reduce using rule 97 (funcion -> DEF VARIABLE_LOCAL PARENTESIS_IZQ parametros_defecto PARENTESIS_DER instrucciones END_BLOCK .)
    VARIABLE_CLASE  reduce using rule 97 (funcion -> DEF VARIABLE_LOCAL PARENTESIS_IZQ parametros_defecto PARENTESIS_DER instrucciones END_BLOCK .)
    IF              reduce using rule 97 (funcion -> DEF VARIABLE_LOCAL PARENTESIS_IZQ parametros_defecto PARENTESIS_DER instrucciones END_BLOCK .)
    $end            reduce using rule 97 (funcion -> DEF VARIABLE_LOCAL PARENTESIS_IZQ parametros_defecto PARENTESIS_DER instrucciones END_BLOCK .)
    PUNTO_Y_COMA    reduce using rule 97 (funcion -> DEF VARIABLE_LOCAL PARENTESIS_IZQ parametros_defecto PARENTESIS_DER instrucciones END_BLOCK .)
    END_BLOCK       reduce using rule 97 (funcion -> DEF VARIABLE_LOCAL PARENTESIS_IZQ parametros_defecto PARENTESIS_DER instrucciones END_BLOCK .)
    ELSE            reduce using rule 97 (funcion -> DEF VARIABLE_LOCAL PARENTESIS_IZQ parametros_defecto PARENTESIS_DER instrucciones END_BLOCK .)
    ELSIF           reduce using rule 97 (funcion -> DEF VARIABLE_LOCAL PARENTESIS_IZQ parametros_defecto PARENTESIS_DER instrucciones END_BLOCK .)


state 138

    (24) if_elsif_else -> IF expresion instrucciones elsif_clauses ELSE instrucciones END_BLOCK .

    PUTS            reduce using rule 24 (if_elsif_else -> IF expresion instrucciones elsif_clauses ELSE instrucciones END_BLOCK .)
    CORCHETE_IZQ    reduce using rule 24 (if_elsif_else -> IF expresion instrucciones elsif_clauses ELSE instrucciones END_BLOCK .)
    DEF             reduce using rule 24 (if_elsif_else -> IF expresion instrucciones elsif_clauses ELSE instrucciones END_BLOCK .)
    COMENTARIO      reduce using rule 24 (if_elsif_else -> IF expresion instrucciones elsif_clauses ELSE instrucciones END_BLOCK .)
    VARIABLE_LOCAL  reduce using rule 24 (if_elsif_else -> IF expresion instrucciones elsif_clauses ELSE instrucciones END_BLOCK .)
    VARIABLE_GLOBAL reduce using rule 24 (if_elsif_else -> IF expresion instrucciones elsif_clauses ELSE instrucciones END_BLOCK .)
    VARIABLE_INSTANCIA reduce using rule 24 (if_elsif_else -> IF expresion instrucciones elsif_clauses ELSE instrucciones END_BLOCK .)
    VARIABLE_CLASE  reduce using rule 24 (if_elsif_else -> IF expresion instrucciones elsif_clauses ELSE instrucciones END_BLOCK .)
    IF              reduce using rule 24 (if_elsif_else -> IF expresion instrucciones elsif_clauses ELSE instrucciones END_BLOCK .)
    $end            reduce using rule 24 (if_elsif_else -> IF expresion instrucciones elsif_clauses ELSE instrucciones END_BLOCK .)
    PUNTO_Y_COMA    reduce using rule 24 (if_elsif_else -> IF expresion instrucciones elsif_clauses ELSE instrucciones END_BLOCK .)
    END_BLOCK       reduce using rule 24 (if_elsif_else -> IF expresion instrucciones elsif_clauses ELSE instrucciones END_BLOCK .)
    ELSE            reduce using rule 24 (if_elsif_else -> IF expresion instrucciones elsif_clauses ELSE instrucciones END_BLOCK .)
    ELSIF           reduce using rule 24 (if_elsif_else -> IF expresion instrucciones elsif_clauses ELSE instrucciones END_BLOCK .)


state 139

    (28) elsif_clauses -> ELSIF expresion instrucciones elsif_clauses .

    END_BLOCK       reduce using rule 28 (elsif_clauses -> ELSIF expresion instrucciones elsif_clauses .)
    ELSE            reduce using rule 28 (elsif_clauses -> ELSIF expresion instrucciones elsif_clauses .)


state 140

    (27) elsif_clauses -> ELSIF expresion THEN instrucciones .
    (29) elsif_clauses -> ELSIF expresion THEN instrucciones . elsif_clauses
    (26) elsif_clauses -> . ELSIF expresion instrucciones
    (27) elsif_clauses -> . ELSIF expresion THEN instrucciones
    (28) elsif_clauses -> . ELSIF expresion instrucciones elsif_clauses
    (29) elsif_clauses -> . ELSIF expresion THEN instrucciones elsif_clauses

    END_BLOCK       reduce using rule 27 (elsif_clauses -> ELSIF expresion THEN instrucciones .)
    ELSE            reduce using rule 27 (elsif_clauses -> ELSIF expresion THEN instrucciones .)
    ELSIF           shift and go to state 97

    elsif_clauses                  shift and go to state 143

state 141

    (21) if_else -> IF expresion THEN instrucciones ELSE instrucciones END_BLOCK .

    PUTS            reduce using rule 21 (if_else -> IF expresion THEN instrucciones ELSE instrucciones END_BLOCK .)
    CORCHETE_IZQ    reduce using rule 21 (if_else -> IF expresion THEN instrucciones ELSE instrucciones END_BLOCK .)
    DEF             reduce using rule 21 (if_else -> IF expresion THEN instrucciones ELSE instrucciones END_BLOCK .)
    COMENTARIO      reduce using rule 21 (if_else -> IF expresion THEN instrucciones ELSE instrucciones END_BLOCK .)
    VARIABLE_LOCAL  reduce using rule 21 (if_else -> IF expresion THEN instrucciones ELSE instrucciones END_BLOCK .)
    VARIABLE_GLOBAL reduce using rule 21 (if_else -> IF expresion THEN instrucciones ELSE instrucciones END_BLOCK .)
    VARIABLE_INSTANCIA reduce using rule 21 (if_else -> IF expresion THEN instrucciones ELSE instrucciones END_BLOCK .)
    VARIABLE_CLASE  reduce using rule 21 (if_else -> IF expresion THEN instrucciones ELSE instrucciones END_BLOCK .)
    IF              reduce using rule 21 (if_else -> IF expresion THEN instrucciones ELSE instrucciones END_BLOCK .)
    $end            reduce using rule 21 (if_else -> IF expresion THEN instrucciones ELSE instrucciones END_BLOCK .)
    PUNTO_Y_COMA    reduce using rule 21 (if_else -> IF expresion THEN instrucciones ELSE instrucciones END_BLOCK .)
    END_BLOCK       reduce using rule 21 (if_else -> IF expresion THEN instrucciones ELSE instrucciones END_BLOCK .)
    ELSE            reduce using rule 21 (if_else -> IF expresion THEN instrucciones ELSE instrucciones END_BLOCK .)
    ELSIF           reduce using rule 21 (if_else -> IF expresion THEN instrucciones ELSE instrucciones END_BLOCK .)


state 142

    (25) if_elsif_else -> IF expresion THEN instrucciones elsif_clauses ELSE instrucciones . END_BLOCK

    END_BLOCK       shift and go to state 144


state 143

    (29) elsif_clauses -> ELSIF expresion THEN instrucciones elsif_clauses .

    END_BLOCK       reduce using rule 29 (elsif_clauses -> ELSIF expresion THEN instrucciones elsif_clauses .)
    ELSE            reduce using rule 29 (elsif_clauses -> ELSIF expresion THEN instrucciones elsif_clauses .)


state 144

    (25) if_elsif_else -> IF expresion THEN instrucciones elsif_clauses ELSE instrucciones END_BLOCK .

    PUTS            reduce using rule 25 (if_elsif_else -> IF expresion THEN instrucciones elsif_clauses ELSE instrucciones END_BLOCK .)
    CORCHETE_IZQ    reduce using rule 25 (if_elsif_else -> IF expresion THEN instrucciones elsif_clauses ELSE instrucciones END_BLOCK .)
    DEF             reduce using rule 25 (if_elsif_else -> IF expresion THEN instrucciones elsif_clauses ELSE instrucciones END_BLOCK .)
    COMENTARIO      reduce using rule 25 (if_elsif_else -> IF expresion THEN instrucciones elsif_clauses ELSE instrucciones END_BLOCK .)
    VARIABLE_LOCAL  reduce using rule 25 (if_elsif_else -> IF expresion THEN instrucciones elsif_clauses ELSE instrucciones END_BLOCK .)
    VARIABLE_GLOBAL reduce using rule 25 (if_elsif_else -> IF expresion THEN instrucciones elsif_clauses ELSE instrucciones END_BLOCK .)
    VARIABLE_INSTANCIA reduce using rule 25 (if_elsif_else -> IF expresion THEN instrucciones elsif_clauses ELSE instrucciones END_BLOCK .)
    VARIABLE_CLASE  reduce using rule 25 (if_elsif_else -> IF expresion THEN instrucciones elsif_clauses ELSE instrucciones END_BLOCK .)
    IF              reduce using rule 25 (if_elsif_else -> IF expresion THEN instrucciones elsif_clauses ELSE instrucciones END_BLOCK .)
    $end            reduce using rule 25 (if_elsif_else -> IF expresion THEN instrucciones elsif_clauses ELSE instrucciones END_BLOCK .)
    PUNTO_Y_COMA    reduce using rule 25 (if_elsif_else -> IF expresion THEN instrucciones elsif_clauses ELSE instrucciones END_BLOCK .)
    END_BLOCK       reduce using rule 25 (if_elsif_else -> IF expresion THEN instrucciones elsif_clauses ELSE instrucciones END_BLOCK .)
    ELSE            reduce using rule 25 (if_elsif_else -> IF expresion THEN instrucciones elsif_clauses ELSE instrucciones END_BLOCK .)
    ELSIF           reduce using rule 25 (if_elsif_else -> IF expresion THEN instrucciones elsif_clauses ELSE instrucciones END_BLOCK .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for CORCHETE_IZQ in state 17 resolved as shift
WARNING: shift/reduce conflict for VARIABLE_LOCAL in state 17 resolved as shift
WARNING: shift/reduce conflict for VARIABLE_GLOBAL in state 17 resolved as shift
WARNING: shift/reduce conflict for VARIABLE_INSTANCIA in state 17 resolved as shift
WARNING: shift/reduce conflict for VARIABLE_CLASE in state 17 resolved as shift
WARNING: shift/reduce conflict for MAYOR_QUE in state 41 resolved as shift
WARNING: shift/reduce conflict for MENOR_QUE in state 41 resolved as shift
WARNING: shift/reduce conflict for IGUAL_IGUAL in state 41 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 41 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL in state 41 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL in state 41 resolved as shift
WARNING: shift/reduce conflict for MAYOR_QUE in state 84 resolved as shift
WARNING: shift/reduce conflict for MENOR_QUE in state 84 resolved as shift
WARNING: shift/reduce conflict for IGUAL_IGUAL in state 84 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 84 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL in state 84 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL in state 84 resolved as shift
WARNING: shift/reduce conflict for AND in state 84 resolved as shift
WARNING: shift/reduce conflict for OR in state 84 resolved as shift
WARNING: shift/reduce conflict for NOT in state 84 resolved as shift
WARNING: shift/reduce conflict for MAYOR_QUE in state 99 resolved as shift
WARNING: shift/reduce conflict for MENOR_QUE in state 99 resolved as shift
WARNING: shift/reduce conflict for IGUAL_IGUAL in state 99 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 99 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL in state 99 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL in state 99 resolved as shift
WARNING: shift/reduce conflict for AND in state 99 resolved as shift
WARNING: shift/reduce conflict for OR in state 99 resolved as shift
WARNING: shift/reduce conflict for NOT in state 99 resolved as shift
WARNING: shift/reduce conflict for MAYOR_QUE in state 100 resolved as shift
WARNING: shift/reduce conflict for MENOR_QUE in state 100 resolved as shift
WARNING: shift/reduce conflict for IGUAL_IGUAL in state 100 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 100 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL in state 100 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL in state 100 resolved as shift
WARNING: shift/reduce conflict for AND in state 100 resolved as shift
WARNING: shift/reduce conflict for OR in state 100 resolved as shift
WARNING: shift/reduce conflict for NOT in state 100 resolved as shift
WARNING: shift/reduce conflict for PARENTESIS_DER in state 103 resolved as shift
WARNING: reduce/reduce conflict in state 88 resolved using rule (parametro -> VARIABLE_LOCAL)
WARNING: rejected rule (parametro_defecto -> VARIABLE_LOCAL) in state 88
