Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    COMA
    COMENTARIO
    CORCHETE_DER
    CORCHETE_IZQ
    DIFERENTE
    DOSPUNTOS
    DOSPUNTOS_IGUAL
    END
    FLECHA_HASH
    IGUAL_IGUAL
    INTERROGACION
    LLAVE_DER
    LLAVE_IZQ
    MAYOR_IGUAL
    MAYOR_QUE
    MENOR_IGUAL
    MENOR_QUE
    NOT
    OR
    PUNTO
    PUNTO_Y_COMA
    RESERVADA
    SIMBOLO

Grammar

Rule 0     S' -> programa
Rule 1     programa -> asignacion
Rule 2     programa -> impresion
Rule 3     asignacion -> variable ASIGNACION operacionAritmetica
Rule 4     impresion -> PUTS PARENTESIS_IZQ operacionAritmetica PARENTESIS_DER
Rule 5     variable -> VARIABLE_LOCAL
Rule 6     variable -> VARIABLE_GLOBAL
Rule 7     variable -> VARIABLE_INSTANCIA
Rule 8     variable -> VARIABLE_CLASE
Rule 9     valor -> NUMERO
Rule 10    valor -> FLOTANTE
Rule 11    valor -> CADENA
Rule 12    valor -> variable
Rule 13    operacionAritmetica -> valor
Rule 14    operacionAritmetica -> valor operador operacionAritmetica
Rule 15    operador -> MAS
Rule 16    operador -> MENOS
Rule 17    operador -> MULTIPLICAR
Rule 18    operador -> DIVIDIR
Rule 19    operador -> MODULO
Rule 20    operador -> EXPONENCIACION

Terminals, with rules where they appear

AND                  : 
ASIGNACION           : 3
CADENA               : 11
COMA                 : 
COMENTARIO           : 
CORCHETE_DER         : 
CORCHETE_IZQ         : 
DIFERENTE            : 
DIVIDIR              : 18
DOSPUNTOS            : 
DOSPUNTOS_IGUAL      : 
END                  : 
EXPONENCIACION       : 20
FLECHA_HASH          : 
FLOTANTE             : 10
IGUAL_IGUAL          : 
INTERROGACION        : 
LLAVE_DER            : 
LLAVE_IZQ            : 
MAS                  : 15
MAYOR_IGUAL          : 
MAYOR_QUE            : 
MENOR_IGUAL          : 
MENOR_QUE            : 
MENOS                : 16
MODULO               : 19
MULTIPLICAR          : 17
NOT                  : 
NUMERO               : 9
OR                   : 
PARENTESIS_DER       : 4
PARENTESIS_IZQ       : 4
PUNTO                : 
PUNTO_Y_COMA         : 
PUTS                 : 4
RESERVADA            : 
SIMBOLO              : 
VARIABLE_CLASE       : 8
VARIABLE_GLOBAL      : 6
VARIABLE_INSTANCIA   : 7
VARIABLE_LOCAL       : 5
error                : 

Nonterminals, with rules where they appear

asignacion           : 1
impresion            : 2
operacionAritmetica  : 3 4 14
operador             : 14
programa             : 0
valor                : 13 14
variable             : 3 12

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . asignacion
    (2) programa -> . impresion
    (3) asignacion -> . variable ASIGNACION operacionAritmetica
    (4) impresion -> . PUTS PARENTESIS_IZQ operacionAritmetica PARENTESIS_DER
    (5) variable -> . VARIABLE_LOCAL
    (6) variable -> . VARIABLE_GLOBAL
    (7) variable -> . VARIABLE_INSTANCIA
    (8) variable -> . VARIABLE_CLASE

    PUTS            shift and go to state 5
    VARIABLE_LOCAL  shift and go to state 6
    VARIABLE_GLOBAL shift and go to state 7
    VARIABLE_INSTANCIA shift and go to state 8
    VARIABLE_CLASE  shift and go to state 9

    programa                       shift and go to state 1
    asignacion                     shift and go to state 2
    impresion                      shift and go to state 3
    variable                       shift and go to state 4

state 1

    (0) S' -> programa .



state 2

    (1) programa -> asignacion .

    $end            reduce using rule 1 (programa -> asignacion .)


state 3

    (2) programa -> impresion .

    $end            reduce using rule 2 (programa -> impresion .)


state 4

    (3) asignacion -> variable . ASIGNACION operacionAritmetica

    ASIGNACION      shift and go to state 10


state 5

    (4) impresion -> PUTS . PARENTESIS_IZQ operacionAritmetica PARENTESIS_DER

    PARENTESIS_IZQ  shift and go to state 11


state 6

    (5) variable -> VARIABLE_LOCAL .

    ASIGNACION      reduce using rule 5 (variable -> VARIABLE_LOCAL .)
    MAS             reduce using rule 5 (variable -> VARIABLE_LOCAL .)
    MENOS           reduce using rule 5 (variable -> VARIABLE_LOCAL .)
    MULTIPLICAR     reduce using rule 5 (variable -> VARIABLE_LOCAL .)
    DIVIDIR         reduce using rule 5 (variable -> VARIABLE_LOCAL .)
    MODULO          reduce using rule 5 (variable -> VARIABLE_LOCAL .)
    EXPONENCIACION  reduce using rule 5 (variable -> VARIABLE_LOCAL .)
    $end            reduce using rule 5 (variable -> VARIABLE_LOCAL .)
    PARENTESIS_DER  reduce using rule 5 (variable -> VARIABLE_LOCAL .)


state 7

    (6) variable -> VARIABLE_GLOBAL .

    ASIGNACION      reduce using rule 6 (variable -> VARIABLE_GLOBAL .)
    MAS             reduce using rule 6 (variable -> VARIABLE_GLOBAL .)
    MENOS           reduce using rule 6 (variable -> VARIABLE_GLOBAL .)
    MULTIPLICAR     reduce using rule 6 (variable -> VARIABLE_GLOBAL .)
    DIVIDIR         reduce using rule 6 (variable -> VARIABLE_GLOBAL .)
    MODULO          reduce using rule 6 (variable -> VARIABLE_GLOBAL .)
    EXPONENCIACION  reduce using rule 6 (variable -> VARIABLE_GLOBAL .)
    $end            reduce using rule 6 (variable -> VARIABLE_GLOBAL .)
    PARENTESIS_DER  reduce using rule 6 (variable -> VARIABLE_GLOBAL .)


state 8

    (7) variable -> VARIABLE_INSTANCIA .

    ASIGNACION      reduce using rule 7 (variable -> VARIABLE_INSTANCIA .)
    MAS             reduce using rule 7 (variable -> VARIABLE_INSTANCIA .)
    MENOS           reduce using rule 7 (variable -> VARIABLE_INSTANCIA .)
    MULTIPLICAR     reduce using rule 7 (variable -> VARIABLE_INSTANCIA .)
    DIVIDIR         reduce using rule 7 (variable -> VARIABLE_INSTANCIA .)
    MODULO          reduce using rule 7 (variable -> VARIABLE_INSTANCIA .)
    EXPONENCIACION  reduce using rule 7 (variable -> VARIABLE_INSTANCIA .)
    $end            reduce using rule 7 (variable -> VARIABLE_INSTANCIA .)
    PARENTESIS_DER  reduce using rule 7 (variable -> VARIABLE_INSTANCIA .)


state 9

    (8) variable -> VARIABLE_CLASE .

    ASIGNACION      reduce using rule 8 (variable -> VARIABLE_CLASE .)
    MAS             reduce using rule 8 (variable -> VARIABLE_CLASE .)
    MENOS           reduce using rule 8 (variable -> VARIABLE_CLASE .)
    MULTIPLICAR     reduce using rule 8 (variable -> VARIABLE_CLASE .)
    DIVIDIR         reduce using rule 8 (variable -> VARIABLE_CLASE .)
    MODULO          reduce using rule 8 (variable -> VARIABLE_CLASE .)
    EXPONENCIACION  reduce using rule 8 (variable -> VARIABLE_CLASE .)
    $end            reduce using rule 8 (variable -> VARIABLE_CLASE .)
    PARENTESIS_DER  reduce using rule 8 (variable -> VARIABLE_CLASE .)


state 10

    (3) asignacion -> variable ASIGNACION . operacionAritmetica
    (13) operacionAritmetica -> . valor
    (14) operacionAritmetica -> . valor operador operacionAritmetica
    (9) valor -> . NUMERO
    (10) valor -> . FLOTANTE
    (11) valor -> . CADENA
    (12) valor -> . variable
    (5) variable -> . VARIABLE_LOCAL
    (6) variable -> . VARIABLE_GLOBAL
    (7) variable -> . VARIABLE_INSTANCIA
    (8) variable -> . VARIABLE_CLASE

    NUMERO          shift and go to state 15
    FLOTANTE        shift and go to state 16
    CADENA          shift and go to state 17
    VARIABLE_LOCAL  shift and go to state 6
    VARIABLE_GLOBAL shift and go to state 7
    VARIABLE_INSTANCIA shift and go to state 8
    VARIABLE_CLASE  shift and go to state 9

    variable                       shift and go to state 12
    operacionAritmetica            shift and go to state 13
    valor                          shift and go to state 14

state 11

    (4) impresion -> PUTS PARENTESIS_IZQ . operacionAritmetica PARENTESIS_DER
    (13) operacionAritmetica -> . valor
    (14) operacionAritmetica -> . valor operador operacionAritmetica
    (9) valor -> . NUMERO
    (10) valor -> . FLOTANTE
    (11) valor -> . CADENA
    (12) valor -> . variable
    (5) variable -> . VARIABLE_LOCAL
    (6) variable -> . VARIABLE_GLOBAL
    (7) variable -> . VARIABLE_INSTANCIA
    (8) variable -> . VARIABLE_CLASE

    NUMERO          shift and go to state 15
    FLOTANTE        shift and go to state 16
    CADENA          shift and go to state 17
    VARIABLE_LOCAL  shift and go to state 6
    VARIABLE_GLOBAL shift and go to state 7
    VARIABLE_INSTANCIA shift and go to state 8
    VARIABLE_CLASE  shift and go to state 9

    operacionAritmetica            shift and go to state 18
    valor                          shift and go to state 14
    variable                       shift and go to state 12

state 12

    (12) valor -> variable .

    MAS             reduce using rule 12 (valor -> variable .)
    MENOS           reduce using rule 12 (valor -> variable .)
    MULTIPLICAR     reduce using rule 12 (valor -> variable .)
    DIVIDIR         reduce using rule 12 (valor -> variable .)
    MODULO          reduce using rule 12 (valor -> variable .)
    EXPONENCIACION  reduce using rule 12 (valor -> variable .)
    $end            reduce using rule 12 (valor -> variable .)
    PARENTESIS_DER  reduce using rule 12 (valor -> variable .)


state 13

    (3) asignacion -> variable ASIGNACION operacionAritmetica .

    $end            reduce using rule 3 (asignacion -> variable ASIGNACION operacionAritmetica .)


state 14

    (13) operacionAritmetica -> valor .
    (14) operacionAritmetica -> valor . operador operacionAritmetica
    (15) operador -> . MAS
    (16) operador -> . MENOS
    (17) operador -> . MULTIPLICAR
    (18) operador -> . DIVIDIR
    (19) operador -> . MODULO
    (20) operador -> . EXPONENCIACION

    $end            reduce using rule 13 (operacionAritmetica -> valor .)
    PARENTESIS_DER  reduce using rule 13 (operacionAritmetica -> valor .)
    MAS             shift and go to state 20
    MENOS           shift and go to state 21
    MULTIPLICAR     shift and go to state 22
    DIVIDIR         shift and go to state 23
    MODULO          shift and go to state 24
    EXPONENCIACION  shift and go to state 25

    operador                       shift and go to state 19

state 15

    (9) valor -> NUMERO .

    MAS             reduce using rule 9 (valor -> NUMERO .)
    MENOS           reduce using rule 9 (valor -> NUMERO .)
    MULTIPLICAR     reduce using rule 9 (valor -> NUMERO .)
    DIVIDIR         reduce using rule 9 (valor -> NUMERO .)
    MODULO          reduce using rule 9 (valor -> NUMERO .)
    EXPONENCIACION  reduce using rule 9 (valor -> NUMERO .)
    $end            reduce using rule 9 (valor -> NUMERO .)
    PARENTESIS_DER  reduce using rule 9 (valor -> NUMERO .)


state 16

    (10) valor -> FLOTANTE .

    MAS             reduce using rule 10 (valor -> FLOTANTE .)
    MENOS           reduce using rule 10 (valor -> FLOTANTE .)
    MULTIPLICAR     reduce using rule 10 (valor -> FLOTANTE .)
    DIVIDIR         reduce using rule 10 (valor -> FLOTANTE .)
    MODULO          reduce using rule 10 (valor -> FLOTANTE .)
    EXPONENCIACION  reduce using rule 10 (valor -> FLOTANTE .)
    $end            reduce using rule 10 (valor -> FLOTANTE .)
    PARENTESIS_DER  reduce using rule 10 (valor -> FLOTANTE .)


state 17

    (11) valor -> CADENA .

    MAS             reduce using rule 11 (valor -> CADENA .)
    MENOS           reduce using rule 11 (valor -> CADENA .)
    MULTIPLICAR     reduce using rule 11 (valor -> CADENA .)
    DIVIDIR         reduce using rule 11 (valor -> CADENA .)
    MODULO          reduce using rule 11 (valor -> CADENA .)
    EXPONENCIACION  reduce using rule 11 (valor -> CADENA .)
    $end            reduce using rule 11 (valor -> CADENA .)
    PARENTESIS_DER  reduce using rule 11 (valor -> CADENA .)


state 18

    (4) impresion -> PUTS PARENTESIS_IZQ operacionAritmetica . PARENTESIS_DER

    PARENTESIS_DER  shift and go to state 26


state 19

    (14) operacionAritmetica -> valor operador . operacionAritmetica
    (13) operacionAritmetica -> . valor
    (14) operacionAritmetica -> . valor operador operacionAritmetica
    (9) valor -> . NUMERO
    (10) valor -> . FLOTANTE
    (11) valor -> . CADENA
    (12) valor -> . variable
    (5) variable -> . VARIABLE_LOCAL
    (6) variable -> . VARIABLE_GLOBAL
    (7) variable -> . VARIABLE_INSTANCIA
    (8) variable -> . VARIABLE_CLASE

    NUMERO          shift and go to state 15
    FLOTANTE        shift and go to state 16
    CADENA          shift and go to state 17
    VARIABLE_LOCAL  shift and go to state 6
    VARIABLE_GLOBAL shift and go to state 7
    VARIABLE_INSTANCIA shift and go to state 8
    VARIABLE_CLASE  shift and go to state 9

    valor                          shift and go to state 14
    operacionAritmetica            shift and go to state 27
    variable                       shift and go to state 12

state 20

    (15) operador -> MAS .

    NUMERO          reduce using rule 15 (operador -> MAS .)
    FLOTANTE        reduce using rule 15 (operador -> MAS .)
    CADENA          reduce using rule 15 (operador -> MAS .)
    VARIABLE_LOCAL  reduce using rule 15 (operador -> MAS .)
    VARIABLE_GLOBAL reduce using rule 15 (operador -> MAS .)
    VARIABLE_INSTANCIA reduce using rule 15 (operador -> MAS .)
    VARIABLE_CLASE  reduce using rule 15 (operador -> MAS .)


state 21

    (16) operador -> MENOS .

    NUMERO          reduce using rule 16 (operador -> MENOS .)
    FLOTANTE        reduce using rule 16 (operador -> MENOS .)
    CADENA          reduce using rule 16 (operador -> MENOS .)
    VARIABLE_LOCAL  reduce using rule 16 (operador -> MENOS .)
    VARIABLE_GLOBAL reduce using rule 16 (operador -> MENOS .)
    VARIABLE_INSTANCIA reduce using rule 16 (operador -> MENOS .)
    VARIABLE_CLASE  reduce using rule 16 (operador -> MENOS .)


state 22

    (17) operador -> MULTIPLICAR .

    NUMERO          reduce using rule 17 (operador -> MULTIPLICAR .)
    FLOTANTE        reduce using rule 17 (operador -> MULTIPLICAR .)
    CADENA          reduce using rule 17 (operador -> MULTIPLICAR .)
    VARIABLE_LOCAL  reduce using rule 17 (operador -> MULTIPLICAR .)
    VARIABLE_GLOBAL reduce using rule 17 (operador -> MULTIPLICAR .)
    VARIABLE_INSTANCIA reduce using rule 17 (operador -> MULTIPLICAR .)
    VARIABLE_CLASE  reduce using rule 17 (operador -> MULTIPLICAR .)


state 23

    (18) operador -> DIVIDIR .

    NUMERO          reduce using rule 18 (operador -> DIVIDIR .)
    FLOTANTE        reduce using rule 18 (operador -> DIVIDIR .)
    CADENA          reduce using rule 18 (operador -> DIVIDIR .)
    VARIABLE_LOCAL  reduce using rule 18 (operador -> DIVIDIR .)
    VARIABLE_GLOBAL reduce using rule 18 (operador -> DIVIDIR .)
    VARIABLE_INSTANCIA reduce using rule 18 (operador -> DIVIDIR .)
    VARIABLE_CLASE  reduce using rule 18 (operador -> DIVIDIR .)


state 24

    (19) operador -> MODULO .

    NUMERO          reduce using rule 19 (operador -> MODULO .)
    FLOTANTE        reduce using rule 19 (operador -> MODULO .)
    CADENA          reduce using rule 19 (operador -> MODULO .)
    VARIABLE_LOCAL  reduce using rule 19 (operador -> MODULO .)
    VARIABLE_GLOBAL reduce using rule 19 (operador -> MODULO .)
    VARIABLE_INSTANCIA reduce using rule 19 (operador -> MODULO .)
    VARIABLE_CLASE  reduce using rule 19 (operador -> MODULO .)


state 25

    (20) operador -> EXPONENCIACION .

    NUMERO          reduce using rule 20 (operador -> EXPONENCIACION .)
    FLOTANTE        reduce using rule 20 (operador -> EXPONENCIACION .)
    CADENA          reduce using rule 20 (operador -> EXPONENCIACION .)
    VARIABLE_LOCAL  reduce using rule 20 (operador -> EXPONENCIACION .)
    VARIABLE_GLOBAL reduce using rule 20 (operador -> EXPONENCIACION .)
    VARIABLE_INSTANCIA reduce using rule 20 (operador -> EXPONENCIACION .)
    VARIABLE_CLASE  reduce using rule 20 (operador -> EXPONENCIACION .)


state 26

    (4) impresion -> PUTS PARENTESIS_IZQ operacionAritmetica PARENTESIS_DER .

    $end            reduce using rule 4 (impresion -> PUTS PARENTESIS_IZQ operacionAritmetica PARENTESIS_DER .)


state 27

    (14) operacionAritmetica -> valor operador operacionAritmetica .

    $end            reduce using rule 14 (operacionAritmetica -> valor operador operacionAritmetica .)
    PARENTESIS_DER  reduce using rule 14 (operacionAritmetica -> valor operador operacionAritmetica .)

