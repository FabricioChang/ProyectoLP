
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ALIAS AND AND_BLOCK ASIGNACION BEGIN_BLOCK BREAK CADENA CASE CLASS COMA COMENTARIO CORCHETE_DER CORCHETE_IZQ DEF DEFINED DIFERENTE DIVIDIR DO DOSPUNTOS DOSPUNTOS_IGUAL ELSE ELSIF END END_BLOCK ENSURE EXPONENCIACION FALSE FLECHA_HASH FLOTANTE IF IGUAL_IGUAL IN INTERROGACION LENGTH LLAVE_DER LLAVE_IZQ MAS MAYOR_IGUAL MAYOR_QUE MENOR_IGUAL MENOR_QUE MENOS MODULE MODULO MULTIPLICAR NEXT NOT NOT_BLOCK NUMERO OR PARENTESIS_DER PARENTESIS_IZQ PUNTO PUNTO_Y_COMA PUTS REDO RESERVADA RETRY RETURN SELF SIMBOLO SUPER THEN TRUE UNLESS UNTIL VARIABLE_CLASE VARIABLE_GLOBAL VARIABLE_INSTANCIA VARIABLE_LOCAL WHEN WHILEprograma : sentencia\n                | sentencia programasentencia : asignacion\n                | impresion\n                | array\n                | condicionasignacion : variable ASIGNACION valoresimpresion : PUTS PARENTESIS_IZQ argumentos PARENTESIS_DERarray : CORCHETE_IZQ argumentos CORCHETE_DERcondicion : if\n                | if_else\n                | if_elsif_elseif : IF expresion instrucciones END_BLOCK\n            | IF expresion THEN instrucciones END_BLOCKif_else : IF expresion instrucciones ELSE instrucciones END_BLOCK\n               | IF expresion THEN instrucciones ELSE instrucciones END_BLOCKif_elsif_else : IF expresion instrucciones elsif_clauses END_BLOCK\n                     | IF expresion THEN instrucciones elsif_clauses END_BLOCK\n                     | IF expresion instrucciones elsif_clauses ELSE instrucciones END_BLOCK\n                     | IF expresion THEN instrucciones elsif_clauses ELSE instrucciones END_BLOCKelsif_clauses : ELSIF expresion instrucciones\n                     | ELSIF expresion THEN instrucciones\n                     | ELSIF expresion instrucciones elsif_clauses\n                     | ELSIF expresion THEN instrucciones elsif_clausesexpresion : var_expresion\n                | var_expresion comparadores var_expresion\n                | expresion comparadores expresion\n                | PARENTESIS_IZQ expresion PARENTESIS_DER\n                | NOT_BLOCK expresion\n                | expresion operador_logico expresioncomparadores : MAYOR_QUE\n                    | MENOR_QUE\n                    | IGUAL_IGUAL\n                    | DIFERENTE\n                    | MAYOR_IGUAL\n                    | MENOR_IGUALoperador_logico : AND\n                        | OR\n                        | NOTvar_expresion : valor\n                    | booleanoinstrucciones : instruccion\n                    | instruccion instrucciones\n                    | instruccion PUNTO_Y_COMA instruccionesinstruccion : asignacion\n                    | impresion\n                    | condicion\n                    | llamada_funcionllamada_funcion : VARIABLE_LOCAL PARENTESIS_IZQ argumentos PARENTESIS_DER\n                       |  VARIABLE_LOCAL PARENTESIS_IZQ PARENTESIS_DERvariable : VARIABLE_LOCAL\n                | VARIABLE_GLOBAL\n                | VARIABLE_INSTANCIA\n                | VARIABLE_CLASEbooleano : FALSE\n                | TRUE argumentos : argumento\n                    | argumento COMA argumentosargumento : booleano\n                | operacionAritmetica\n                | array\n                | empty empty :valores : operacionAritmetica\n                | SIMBOLO\n                | booleano\n                | arrayvalor : NUMERO\n            | FLOTANTE\n            | CADENA\n            | variableoperacionAritmetica : valor \n                         | valor operador operacionAritmeticaoperador : MAS\n                | MENOS\n                | MULTIPLICAR\n                | DIVIDIR\n                | MODULO\n                | EXPONENCIACION'
    
_lr_action_items = {'PUTS':([0,2,3,4,5,6,10,11,12,13,14,15,16,27,28,29,30,31,32,33,34,35,38,39,40,41,42,43,44,46,56,59,69,70,71,72,76,77,79,80,81,85,86,88,90,91,93,94,95,96,97,101,102,105,107,108,109,110,113,116,],[8,8,-3,-4,-5,-6,-10,-11,-12,-51,-52,-53,-54,-55,-56,-72,-68,-69,-70,-71,8,-25,-40,-41,-7,-64,-65,-66,-67,-9,8,8,-45,-46,-47,-48,-29,-8,-73,-13,8,-27,-30,8,-26,-28,-17,8,8,-14,8,-50,-15,8,-18,8,-49,-19,-16,-20,]),'CORCHETE_IZQ':([0,2,3,4,5,6,9,10,11,12,13,14,15,16,19,20,27,28,29,30,31,32,33,40,41,42,43,44,46,47,77,79,80,89,93,96,102,107,110,113,116,],[9,9,-3,-4,-5,-6,9,-10,-11,-12,-51,-52,-53,-54,9,9,-55,-56,-72,-68,-69,-70,-71,-7,-64,-65,-66,-67,-9,9,-8,-73,-13,9,-17,-14,-15,-18,-19,-16,-20,]),'VARIABLE_LOCAL':([0,2,3,4,5,6,9,10,11,12,13,14,15,16,17,19,20,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,49,50,51,52,53,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,76,77,79,80,81,83,85,86,88,89,90,91,93,94,95,96,97,101,102,105,107,108,109,110,113,116,],[13,13,-3,-4,-5,-6,13,-10,-11,-12,-51,-52,-53,-54,13,13,13,-55,-56,-72,-68,-69,-70,-71,73,-25,13,13,-40,-41,-7,-64,-65,-66,-67,-9,13,13,-74,-75,-76,-77,-78,-79,73,13,13,73,-31,-32,-33,-34,-35,-36,-37,-38,-39,-45,-46,-47,-48,13,-29,-8,-73,-13,73,13,-27,-30,73,13,-26,-28,-17,73,73,-14,73,-50,-15,73,-18,73,-49,-19,-16,-20,]),'VARIABLE_GLOBAL':([0,2,3,4,5,6,9,10,11,12,13,14,15,16,17,19,20,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,49,50,51,52,53,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,76,77,79,80,81,83,85,86,88,89,90,91,93,94,95,96,97,101,102,105,107,108,109,110,113,116,],[14,14,-3,-4,-5,-6,14,-10,-11,-12,-51,-52,-53,-54,14,14,14,-55,-56,-72,-68,-69,-70,-71,14,-25,14,14,-40,-41,-7,-64,-65,-66,-67,-9,14,14,-74,-75,-76,-77,-78,-79,14,14,14,14,-31,-32,-33,-34,-35,-36,-37,-38,-39,-45,-46,-47,-48,14,-29,-8,-73,-13,14,14,-27,-30,14,14,-26,-28,-17,14,14,-14,14,-50,-15,14,-18,14,-49,-19,-16,-20,]),'VARIABLE_INSTANCIA':([0,2,3,4,5,6,9,10,11,12,13,14,15,16,17,19,20,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,49,50,51,52,53,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,76,77,79,80,81,83,85,86,88,89,90,91,93,94,95,96,97,101,102,105,107,108,109,110,113,116,],[15,15,-3,-4,-5,-6,15,-10,-11,-12,-51,-52,-53,-54,15,15,15,-55,-56,-72,-68,-69,-70,-71,15,-25,15,15,-40,-41,-7,-64,-65,-66,-67,-9,15,15,-74,-75,-76,-77,-78,-79,15,15,15,15,-31,-32,-33,-34,-35,-36,-37,-38,-39,-45,-46,-47,-48,15,-29,-8,-73,-13,15,15,-27,-30,15,15,-26,-28,-17,15,15,-14,15,-50,-15,15,-18,15,-49,-19,-16,-20,]),'VARIABLE_CLASE':([0,2,3,4,5,6,9,10,11,12,13,14,15,16,17,19,20,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,49,50,51,52,53,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,76,77,79,80,81,83,85,86,88,89,90,91,93,94,95,96,97,101,102,105,107,108,109,110,113,116,],[16,16,-3,-4,-5,-6,16,-10,-11,-12,-51,-52,-53,-54,16,16,16,-55,-56,-72,-68,-69,-70,-71,16,-25,16,16,-40,-41,-7,-64,-65,-66,-67,-9,16,16,-74,-75,-76,-77,-78,-79,16,16,16,16,-31,-32,-33,-34,-35,-36,-37,-38,-39,-45,-46,-47,-48,16,-29,-8,-73,-13,16,16,-27,-30,16,16,-26,-28,-17,16,16,-14,16,-50,-15,16,-18,16,-49,-19,-16,-20,]),'IF':([0,2,3,4,5,6,10,11,12,13,14,15,16,27,28,29,30,31,32,33,34,35,38,39,40,41,42,43,44,46,56,59,69,70,71,72,76,77,79,80,81,85,86,88,90,91,93,94,95,96,97,101,102,105,107,108,109,110,113,116,],[17,17,-3,-4,-5,-6,-10,-11,-12,-51,-52,-53,-54,-55,-56,-72,-68,-69,-70,-71,17,-25,-40,-41,-7,-64,-65,-66,-67,-9,17,17,-45,-46,-47,-48,-29,-8,-73,-13,17,-27,-30,17,-26,-28,-17,17,17,-14,17,-50,-15,17,-18,17,-49,-19,-16,-20,]),'$end':([1,2,3,4,5,6,10,11,12,13,14,15,16,18,27,28,29,30,31,32,33,40,41,42,43,44,46,77,79,80,93,96,102,107,110,113,116,],[0,-1,-3,-4,-5,-6,-10,-11,-12,-51,-52,-53,-54,-2,-55,-56,-72,-68,-69,-70,-71,-7,-64,-65,-66,-67,-9,-8,-73,-13,-17,-14,-15,-18,-19,-16,-20,]),'ASIGNACION':([7,13,14,15,16,73,],[19,-51,-52,-53,-54,-51,]),'PARENTESIS_IZQ':([8,17,36,37,57,58,60,61,62,63,64,65,66,67,68,73,83,],[20,36,36,36,36,36,-31,-32,-33,-34,-35,-36,-37,-38,-39,89,36,]),'FALSE':([9,17,19,20,36,37,47,57,58,60,61,62,63,64,65,66,67,68,74,83,89,],[27,27,27,27,27,27,27,27,27,-31,-32,-33,-34,-35,-36,-37,-38,-39,27,27,27,]),'TRUE':([9,17,19,20,36,37,47,57,58,60,61,62,63,64,65,66,67,68,74,83,89,],[28,28,28,28,28,28,28,28,28,-31,-32,-33,-34,-35,-36,-37,-38,-39,28,28,28,]),'COMA':([9,13,14,15,16,20,22,23,24,25,26,27,28,29,30,31,32,33,46,47,79,89,],[-63,-51,-52,-53,-54,-63,47,-59,-60,-61,-62,-55,-56,-72,-68,-69,-70,-71,-9,-63,-73,-63,]),'CORCHETE_DER':([9,13,14,15,16,21,22,23,24,25,26,27,28,29,30,31,32,33,46,47,78,79,],[-63,-51,-52,-53,-54,46,-57,-59,-60,-61,-62,-55,-56,-72,-68,-69,-70,-71,-9,-63,-58,-73,]),'NUMERO':([9,17,19,20,36,37,47,48,49,50,51,52,53,54,57,58,60,61,62,63,64,65,66,67,68,74,83,89,],[30,30,30,30,30,30,30,30,-74,-75,-76,-77,-78,-79,30,30,-31,-32,-33,-34,-35,-36,-37,-38,-39,30,30,30,]),'FLOTANTE':([9,17,19,20,36,37,47,48,49,50,51,52,53,54,57,58,60,61,62,63,64,65,66,67,68,74,83,89,],[31,31,31,31,31,31,31,31,-74,-75,-76,-77,-78,-79,31,31,-31,-32,-33,-34,-35,-36,-37,-38,-39,31,31,31,]),'CADENA':([9,17,19,20,36,37,47,48,49,50,51,52,53,54,57,58,60,61,62,63,64,65,66,67,68,74,83,89,],[32,32,32,32,32,32,32,32,-74,-75,-76,-77,-78,-79,32,32,-31,-32,-33,-34,-35,-36,-37,-38,-39,32,32,32,]),'PUNTO_Y_COMA':([10,11,12,13,14,15,16,27,28,29,30,31,32,33,40,41,42,43,44,46,59,69,70,71,72,77,79,80,93,96,101,102,107,109,110,113,116,],[-10,-11,-12,-51,-52,-53,-54,-55,-56,-72,-68,-69,-70,-71,-7,-64,-65,-66,-67,-9,88,-45,-46,-47,-48,-8,-73,-13,-17,-14,-50,-15,-18,-49,-19,-16,-20,]),'END_BLOCK':([10,11,12,13,14,15,16,27,28,29,30,31,32,33,40,41,42,43,44,46,55,59,69,70,71,72,77,79,80,82,84,87,92,93,96,98,99,101,102,103,104,106,107,109,110,111,112,113,114,115,116,],[-10,-11,-12,-51,-52,-53,-54,-55,-56,-72,-68,-69,-70,-71,-7,-64,-65,-66,-67,-9,80,-42,-45,-46,-47,-48,-8,-73,-13,93,96,-43,102,-17,-14,107,-44,-50,-15,110,-21,113,-18,-49,-19,-23,-22,-16,116,-24,-20,]),'ELSE':([10,11,12,13,14,15,16,27,28,29,30,31,32,33,40,41,42,43,44,46,55,59,69,70,71,72,77,79,80,82,84,87,93,96,98,99,101,102,104,107,109,110,111,112,113,115,116,],[-10,-11,-12,-51,-52,-53,-54,-55,-56,-72,-68,-69,-70,-71,-7,-64,-65,-66,-67,-9,81,-42,-45,-46,-47,-48,-8,-73,-13,94,97,-43,-17,-14,108,-44,-50,-15,-21,-18,-49,-19,-23,-22,-16,-24,-20,]),'ELSIF':([10,11,12,13,14,15,16,27,28,29,30,31,32,33,40,41,42,43,44,46,55,59,69,70,71,72,77,79,80,84,87,93,96,99,101,102,104,107,109,110,112,113,116,],[-10,-11,-12,-51,-52,-53,-54,-55,-56,-72,-68,-69,-70,-71,-7,-64,-65,-66,-67,-9,83,-42,-45,-46,-47,-48,-8,-73,-13,83,-43,-17,-14,-44,-50,-15,83,-18,-49,-19,83,-16,-20,]),'MAS':([13,14,15,16,29,30,31,32,33,],[-51,-52,-53,-54,49,-68,-69,-70,-71,]),'MENOS':([13,14,15,16,29,30,31,32,33,],[-51,-52,-53,-54,50,-68,-69,-70,-71,]),'MULTIPLICAR':([13,14,15,16,29,30,31,32,33,],[-51,-52,-53,-54,51,-68,-69,-70,-71,]),'DIVIDIR':([13,14,15,16,29,30,31,32,33,],[-51,-52,-53,-54,52,-68,-69,-70,-71,]),'MODULO':([13,14,15,16,29,30,31,32,33,],[-51,-52,-53,-54,53,-68,-69,-70,-71,]),'EXPONENCIACION':([13,14,15,16,29,30,31,32,33,],[-51,-52,-53,-54,54,-68,-69,-70,-71,]),'MAYOR_QUE':([13,14,15,16,27,28,30,31,32,33,34,35,38,39,75,76,85,86,90,91,95,],[-51,-52,-53,-54,-55,-56,-68,-69,-70,-71,60,60,-40,-41,60,60,60,60,-26,-28,60,]),'MENOR_QUE':([13,14,15,16,27,28,30,31,32,33,34,35,38,39,75,76,85,86,90,91,95,],[-51,-52,-53,-54,-55,-56,-68,-69,-70,-71,61,61,-40,-41,61,61,61,61,-26,-28,61,]),'IGUAL_IGUAL':([13,14,15,16,27,28,30,31,32,33,34,35,38,39,75,76,85,86,90,91,95,],[-51,-52,-53,-54,-55,-56,-68,-69,-70,-71,62,62,-40,-41,62,62,62,62,-26,-28,62,]),'DIFERENTE':([13,14,15,16,27,28,30,31,32,33,34,35,38,39,75,76,85,86,90,91,95,],[-51,-52,-53,-54,-55,-56,-68,-69,-70,-71,63,63,-40,-41,63,63,63,63,-26,-28,63,]),'MAYOR_IGUAL':([13,14,15,16,27,28,30,31,32,33,34,35,38,39,75,76,85,86,90,91,95,],[-51,-52,-53,-54,-55,-56,-68,-69,-70,-71,64,64,-40,-41,64,64,64,64,-26,-28,64,]),'MENOR_IGUAL':([13,14,15,16,27,28,30,31,32,33,34,35,38,39,75,76,85,86,90,91,95,],[-51,-52,-53,-54,-55,-56,-68,-69,-70,-71,65,65,-40,-41,65,65,65,65,-26,-28,65,]),'THEN':([13,14,15,16,27,28,30,31,32,33,34,35,38,39,76,85,86,90,91,95,],[-51,-52,-53,-54,-55,-56,-68,-69,-70,-71,56,-25,-40,-41,-29,-27,-30,-26,-28,105,]),'AND':([13,14,15,16,27,28,30,31,32,33,34,35,38,39,75,76,85,86,90,91,95,],[-51,-52,-53,-54,-55,-56,-68,-69,-70,-71,66,-25,-40,-41,66,66,66,66,-26,-28,66,]),'OR':([13,14,15,16,27,28,30,31,32,33,34,35,38,39,75,76,85,86,90,91,95,],[-51,-52,-53,-54,-55,-56,-68,-69,-70,-71,67,-25,-40,-41,67,67,67,67,-26,-28,67,]),'NOT':([13,14,15,16,27,28,30,31,32,33,34,35,38,39,75,76,85,86,90,91,95,],[-51,-52,-53,-54,-55,-56,-68,-69,-70,-71,68,-25,-40,-41,68,68,68,68,-26,-28,68,]),'PARENTESIS_DER':([13,14,15,16,20,22,23,24,25,26,27,28,29,30,31,32,33,35,38,39,45,46,47,75,76,78,79,85,86,89,90,91,100,],[-51,-52,-53,-54,-63,-57,-59,-60,-61,-62,-55,-56,-72,-68,-69,-70,-71,-25,-40,-41,77,-9,-63,91,-29,-58,-73,-27,-30,101,-26,-28,109,]),'NOT_BLOCK':([17,36,37,57,58,60,61,62,63,64,65,66,67,68,83,],[37,37,37,37,37,-31,-32,-33,-34,-35,-36,-37,-38,-39,37,]),'SIMBOLO':([19,],[42,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,2,],[1,18,]),'sentencia':([0,2,],[2,2,]),'asignacion':([0,2,34,56,59,81,88,94,95,97,105,108,],[3,3,69,69,69,69,69,69,69,69,69,69,]),'impresion':([0,2,34,56,59,81,88,94,95,97,105,108,],[4,4,70,70,70,70,70,70,70,70,70,70,]),'array':([0,2,9,19,20,47,89,],[5,5,25,44,25,25,25,]),'condicion':([0,2,34,56,59,81,88,94,95,97,105,108,],[6,6,71,71,71,71,71,71,71,71,71,71,]),'variable':([0,2,9,17,19,20,34,36,37,47,48,56,57,58,59,74,81,83,88,89,94,95,97,105,108,],[7,7,33,33,33,33,7,33,33,33,33,7,33,33,7,33,7,33,7,33,7,7,7,7,7,]),'if':([0,2,34,56,59,81,88,94,95,97,105,108,],[10,10,10,10,10,10,10,10,10,10,10,10,]),'if_else':([0,2,34,56,59,81,88,94,95,97,105,108,],[11,11,11,11,11,11,11,11,11,11,11,11,]),'if_elsif_else':([0,2,34,56,59,81,88,94,95,97,105,108,],[12,12,12,12,12,12,12,12,12,12,12,12,]),'argumentos':([9,20,47,89,],[21,45,78,100,]),'argumento':([9,20,47,89,],[22,22,22,22,]),'booleano':([9,17,19,20,36,37,47,57,58,74,83,89,],[23,39,43,23,39,39,23,39,39,39,39,23,]),'operacionAritmetica':([9,19,20,47,48,89,],[24,41,24,24,79,24,]),'empty':([9,20,47,89,],[26,26,26,26,]),'valor':([9,17,19,20,36,37,47,48,57,58,74,83,89,],[29,38,29,29,38,38,29,29,38,38,38,38,29,]),'expresion':([17,36,37,57,58,83,],[34,75,76,85,86,95,]),'var_expresion':([17,36,37,57,58,74,83,],[35,35,35,35,35,90,35,]),'valores':([19,],[40,]),'operador':([29,],[48,]),'instrucciones':([34,56,59,81,88,94,95,97,105,108,],[55,84,87,92,99,103,104,106,112,114,]),'comparadores':([34,35,75,76,85,86,95,],[57,74,57,57,57,57,57,]),'operador_logico':([34,75,76,85,86,95,],[58,58,58,58,58,58,]),'instruccion':([34,56,59,81,88,94,95,97,105,108,],[59,59,59,59,59,59,59,59,59,59,]),'llamada_funcion':([34,56,59,81,88,94,95,97,105,108,],[72,72,72,72,72,72,72,72,72,72,]),'elsif_clauses':([55,84,104,112,],[82,98,111,115,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> sentencia','programa',1,'p_programa','Analizador_Sintactico.py',5),
  ('programa -> sentencia programa','programa',2,'p_programa','Analizador_Sintactico.py',6),
  ('sentencia -> asignacion','sentencia',1,'p_sentencia','Analizador_Sintactico.py',9),
  ('sentencia -> impresion','sentencia',1,'p_sentencia','Analizador_Sintactico.py',10),
  ('sentencia -> array','sentencia',1,'p_sentencia','Analizador_Sintactico.py',11),
  ('sentencia -> condicion','sentencia',1,'p_sentencia','Analizador_Sintactico.py',12),
  ('asignacion -> variable ASIGNACION valores','asignacion',3,'p_asignacion','Analizador_Sintactico.py',15),
  ('impresion -> PUTS PARENTESIS_IZQ argumentos PARENTESIS_DER','impresion',4,'p_impresion','Analizador_Sintactico.py',19),
  ('array -> CORCHETE_IZQ argumentos CORCHETE_DER','array',3,'p_array','Analizador_Sintactico.py',24),
  ('condicion -> if','condicion',1,'p_condicion','Analizador_Sintactico.py',28),
  ('condicion -> if_else','condicion',1,'p_condicion','Analizador_Sintactico.py',29),
  ('condicion -> if_elsif_else','condicion',1,'p_condicion','Analizador_Sintactico.py',30),
  ('if -> IF expresion instrucciones END_BLOCK','if',4,'p_if','Analizador_Sintactico.py',33),
  ('if -> IF expresion THEN instrucciones END_BLOCK','if',5,'p_if','Analizador_Sintactico.py',34),
  ('if_else -> IF expresion instrucciones ELSE instrucciones END_BLOCK','if_else',6,'p_if_else','Analizador_Sintactico.py',37),
  ('if_else -> IF expresion THEN instrucciones ELSE instrucciones END_BLOCK','if_else',7,'p_if_else','Analizador_Sintactico.py',38),
  ('if_elsif_else -> IF expresion instrucciones elsif_clauses END_BLOCK','if_elsif_else',5,'p_if_elsif_else','Analizador_Sintactico.py',41),
  ('if_elsif_else -> IF expresion THEN instrucciones elsif_clauses END_BLOCK','if_elsif_else',6,'p_if_elsif_else','Analizador_Sintactico.py',42),
  ('if_elsif_else -> IF expresion instrucciones elsif_clauses ELSE instrucciones END_BLOCK','if_elsif_else',7,'p_if_elsif_else','Analizador_Sintactico.py',43),
  ('if_elsif_else -> IF expresion THEN instrucciones elsif_clauses ELSE instrucciones END_BLOCK','if_elsif_else',8,'p_if_elsif_else','Analizador_Sintactico.py',44),
  ('elsif_clauses -> ELSIF expresion instrucciones','elsif_clauses',3,'p_elsif_clauses','Analizador_Sintactico.py',47),
  ('elsif_clauses -> ELSIF expresion THEN instrucciones','elsif_clauses',4,'p_elsif_clauses','Analizador_Sintactico.py',48),
  ('elsif_clauses -> ELSIF expresion instrucciones elsif_clauses','elsif_clauses',4,'p_elsif_clauses','Analizador_Sintactico.py',49),
  ('elsif_clauses -> ELSIF expresion THEN instrucciones elsif_clauses','elsif_clauses',5,'p_elsif_clauses','Analizador_Sintactico.py',50),
  ('expresion -> var_expresion','expresion',1,'p_expresion','Analizador_Sintactico.py',54),
  ('expresion -> var_expresion comparadores var_expresion','expresion',3,'p_expresion','Analizador_Sintactico.py',55),
  ('expresion -> expresion comparadores expresion','expresion',3,'p_expresion','Analizador_Sintactico.py',56),
  ('expresion -> PARENTESIS_IZQ expresion PARENTESIS_DER','expresion',3,'p_expresion','Analizador_Sintactico.py',57),
  ('expresion -> NOT_BLOCK expresion','expresion',2,'p_expresion','Analizador_Sintactico.py',58),
  ('expresion -> expresion operador_logico expresion','expresion',3,'p_expresion','Analizador_Sintactico.py',59),
  ('comparadores -> MAYOR_QUE','comparadores',1,'p_comparadores','Analizador_Sintactico.py',62),
  ('comparadores -> MENOR_QUE','comparadores',1,'p_comparadores','Analizador_Sintactico.py',63),
  ('comparadores -> IGUAL_IGUAL','comparadores',1,'p_comparadores','Analizador_Sintactico.py',64),
  ('comparadores -> DIFERENTE','comparadores',1,'p_comparadores','Analizador_Sintactico.py',65),
  ('comparadores -> MAYOR_IGUAL','comparadores',1,'p_comparadores','Analizador_Sintactico.py',66),
  ('comparadores -> MENOR_IGUAL','comparadores',1,'p_comparadores','Analizador_Sintactico.py',67),
  ('operador_logico -> AND','operador_logico',1,'p_operador_logico','Analizador_Sintactico.py',70),
  ('operador_logico -> OR','operador_logico',1,'p_operador_logico','Analizador_Sintactico.py',71),
  ('operador_logico -> NOT','operador_logico',1,'p_operador_logico','Analizador_Sintactico.py',72),
  ('var_expresion -> valor','var_expresion',1,'p_var_expresion','Analizador_Sintactico.py',75),
  ('var_expresion -> booleano','var_expresion',1,'p_var_expresion','Analizador_Sintactico.py',76),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones','Analizador_Sintactico.py',79),
  ('instrucciones -> instruccion instrucciones','instrucciones',2,'p_instrucciones','Analizador_Sintactico.py',80),
  ('instrucciones -> instruccion PUNTO_Y_COMA instrucciones','instrucciones',3,'p_instrucciones','Analizador_Sintactico.py',81),
  ('instruccion -> asignacion','instruccion',1,'p_instruccion','Analizador_Sintactico.py',84),
  ('instruccion -> impresion','instruccion',1,'p_instruccion','Analizador_Sintactico.py',85),
  ('instruccion -> condicion','instruccion',1,'p_instruccion','Analizador_Sintactico.py',86),
  ('instruccion -> llamada_funcion','instruccion',1,'p_instruccion','Analizador_Sintactico.py',87),
  ('llamada_funcion -> VARIABLE_LOCAL PARENTESIS_IZQ argumentos PARENTESIS_DER','llamada_funcion',4,'p_llamada_funcion','Analizador_Sintactico.py',90),
  ('llamada_funcion -> VARIABLE_LOCAL PARENTESIS_IZQ PARENTESIS_DER','llamada_funcion',3,'p_llamada_funcion','Analizador_Sintactico.py',91),
  ('variable -> VARIABLE_LOCAL','variable',1,'p_variable','Analizador_Sintactico.py',95),
  ('variable -> VARIABLE_GLOBAL','variable',1,'p_variable','Analizador_Sintactico.py',96),
  ('variable -> VARIABLE_INSTANCIA','variable',1,'p_variable','Analizador_Sintactico.py',97),
  ('variable -> VARIABLE_CLASE','variable',1,'p_variable','Analizador_Sintactico.py',98),
  ('booleano -> FALSE','booleano',1,'p_booleano','Analizador_Sintactico.py',101),
  ('booleano -> TRUE','booleano',1,'p_booleano','Analizador_Sintactico.py',102),
  ('argumentos -> argumento','argumentos',1,'p_argumentos','Analizador_Sintactico.py',105),
  ('argumentos -> argumento COMA argumentos','argumentos',3,'p_argumentos','Analizador_Sintactico.py',106),
  ('argumento -> booleano','argumento',1,'p_argumento','Analizador_Sintactico.py',109),
  ('argumento -> operacionAritmetica','argumento',1,'p_argumento','Analizador_Sintactico.py',110),
  ('argumento -> array','argumento',1,'p_argumento','Analizador_Sintactico.py',111),
  ('argumento -> empty','argumento',1,'p_argumento','Analizador_Sintactico.py',112),
  ('empty -> <empty>','empty',0,'p_empty','Analizador_Sintactico.py',115),
  ('valores -> operacionAritmetica','valores',1,'p_valores','Analizador_Sintactico.py',118),
  ('valores -> SIMBOLO','valores',1,'p_valores','Analizador_Sintactico.py',119),
  ('valores -> booleano','valores',1,'p_valores','Analizador_Sintactico.py',120),
  ('valores -> array','valores',1,'p_valores','Analizador_Sintactico.py',121),
  ('valor -> NUMERO','valor',1,'p_valor','Analizador_Sintactico.py',124),
  ('valor -> FLOTANTE','valor',1,'p_valor','Analizador_Sintactico.py',125),
  ('valor -> CADENA','valor',1,'p_valor','Analizador_Sintactico.py',126),
  ('valor -> variable','valor',1,'p_valor','Analizador_Sintactico.py',127),
  ('operacionAritmetica -> valor','operacionAritmetica',1,'p_operacionAritmetica','Analizador_Sintactico.py',130),
  ('operacionAritmetica -> valor operador operacionAritmetica','operacionAritmetica',3,'p_operacionAritmetica','Analizador_Sintactico.py',131),
  ('operador -> MAS','operador',1,'p_operador','Analizador_Sintactico.py',135),
  ('operador -> MENOS','operador',1,'p_operador','Analizador_Sintactico.py',136),
  ('operador -> MULTIPLICAR','operador',1,'p_operador','Analizador_Sintactico.py',137),
  ('operador -> DIVIDIR','operador',1,'p_operador','Analizador_Sintactico.py',138),
  ('operador -> MODULO','operador',1,'p_operador','Analizador_Sintactico.py',139),
  ('operador -> EXPONENCIACION','operador',1,'p_operador','Analizador_Sintactico.py',140),
]
